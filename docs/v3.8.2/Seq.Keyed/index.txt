1:"$Sreact.fragment"
2:I[2708,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"WorkerContextProvider"]
3:I[4620,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
4:I[81105,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
5:I[86240,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/c63eea34c69bde5e.js"],"default"]
8:I[83822,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"MetadataBoundary"]
a:I[83822,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"OutletBoundary"]
d:I[2541,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"AsyncMetadataOutlet"]
f:I[83822,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"ViewportBoundary"]
11:I[12447,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
:HL["/_next/static/chunks/78f1306480580587.css","style"]
:HL["/_next/static/chunks/916b61d823ab5683.css","style"]
0:{"P":null,"b":"CsWEmrvEF7fw4CBMXoLcT","p":"","c":["","docs","v3.8.2","Seq.Keyed",""],"i":false,"f":[[["",{"children":["docs",{"children":[["version","v3.8.2","d"],{"children":[["type","Seq.Keyed","d"],{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/78f1306480580587.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/1d2d43591a84e045.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/0f63189634a29548.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"pageBody","children":[["$","h2",null,{"children":"Not Found"}],["$","p",null,{"children":"Could not find requested resource"}],["$","$L5",null,{"href":"/","children":"Return Home"}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]]}],{"children":["docs",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["version","v3.8.2","d"],["$","$1","c",{"children":[[["$","script","script-0",{"src":"/_next/static/chunks/1398221593ec8d74.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/cffb7d8f6d5ddd81.js","async":true,"nonce":"$undefined"}]],"$L6"]}],{"children":[["type","Seq.Keyed","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7",["$","$L8",null,{"children":"$L9"}],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/916b61d823ab5683.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/1d5af645b0ad195c.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/73f73508088fc71d.js","async":true,"nonce":"$undefined"}]],["$","$La",null,{"children":["$Lb","$Lc",["$","$Ld",null,{"promise":"$@e"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","JB9mzUnVcyB3uEMUTfiT5",{"children":[["$","$Lf",null,{"children":"$L10"}],null]}],null]}],false]],"m":"$undefined","G":["$11","$undefined"],"s":false,"S":true}
12:"$Sreact.suspense"
13:I[2541,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"AsyncMetadata"]
15:I[85995,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"ImmutableConsole"]
16:I[91842,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"HeaderLogoLink"]
17:I[91842,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"HeaderLinks"]
18:I[55958,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"default"]
19:I[35383,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js","/_next/static/chunks/1d5af645b0ad195c.js","/_next/static/chunks/73f73508088fc71d.js"],"TypeDocumentation"]
9:["$","$12",null,{"fallback":null,"children":["$","$L13",null,{"promise":"$@14"}]}]
6:["$","div",null,{"children":[["$","$L15",null,{"version":"v3.8.2"}],["$","div",null,{"className":"header","children":["$","div",null,{"className":"miniHeader","children":[["$","div",null,{"className":"miniHeaderContents","children":[["$","$L16",null,{}],["$","$L17",null,{"versions":["v5","v4.3.7","v3.8.2"],"currentVersion":"v3.8.2"}]]}],["$","$L18",null,{}]]}]}],["$","div",null,{"className":"pageBody","children":["$","div",null,{"className":"contents","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]
1a:Tc4a,<p><code class="codeBlock"><span class="token keyword">var</span> squares <span class="token operator">=</span> <span class="token qualifier">Seq</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=></span> x <span class="token operator"><em></span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
squares<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> squares<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code><p>If you know a <code><a href="/docs/v3.8.2/Seq">Seq</a></code> will be used multiple times, it may be more
efficient to first cache it in memory. Here, the map function is called
only 3 times.</p>
<code class="codeBlock"><span class="token keyword">var</span> squares <span class="token operator">=</span> <span class="token qualifier">Seq</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=></span> x <span class="token operator"></em></span> x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cacheResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
squares<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> squares<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code><p>Use this method judiciously, as it must fully evaluate a Seq which can be
a burden on memory and possibly performance.</p></p>
<p>Note: after calling <code><a href="/docs/v3.8.2/Seq#cacheResult()">cacheResult</a></code>, a Seq will always have a <code><a href="/docs/v3.8.2/Seq#size">size</a></code>.</p>
1b:Ta7f,<p>The <code><a href="/docs/v3.8.2/List#hashCode()">hashCode</a></code> of an Iterable is used to determine potential equality,
and is used when adding this to a <code><a href="/docs/v3.8.2/Set">Set</a></code> or as a key in a <code><a href="/docs/v3.8.2/Map">Map</a></code>, enabling
lookup via a different instance.</p>
<code class="codeBlock"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token qualifier">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token qualifier">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assert</span><span class="token punctuation">(</span>a <span class="token operator">!==</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// different instances</span>
<span class="token keyword">var</span> set <span class="token operator">=</span> <span class="token qualifier">Set</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assert</span><span class="token punctuation">(</span>set<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token primitive">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code><p>If two values have the same <code><a href="/docs/v3.8.2/List#hashCode()">hashCode</a></code>, they are <a href="http://en.wikipedia.org/wiki/Collision_(computer_science)">not guaranteed
to be equal</a>. If two values have different <code><a href="/docs/v3.8.2/List#hashCode()">hashCode</a></code>s,
they must not be equal.</p>
1c:T8b5,<p>This is useful if you want to operate on an
Iterable.Indexed and preserve the [index, value] pairs.</p>
<p>The returned Seq will have identical iteration order as
this Iterable.</p>
<p>Example:</p>
<code class="codeBlock"><span class="token keyword">var</span> indexedSeq <span class="token operator">=</span> <span class="token qualifier">Immutable</span><span class="token punctuation">.</span><span class="token qualifier">Seq</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
indexedSeq<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=></span> v <span class="token operator">===</span> <span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Seq [ 'B' ]</span>
<span class="token keyword">var</span> keyedSeq <span class="token operator">=</span> indexedSeq<span class="token punctuation">.</span><span class="token function">toKeyedSeq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
keyedSeq<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=></span> v <span class="token operator">===</span> <span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Seq { 1: 'B' }</span></code>1d:T51e,<p><code class="codeBlock"><span class="token function">Seq</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=></span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">// Seq { b: 2, d: 4 }</span></code></p>
1e:T521,<p><code class="codeBlock"><span class="token function">Seq</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filterNot</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=></span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">// Seq { a: 1, c: 3 }</span></code></p>
1f:T4ed,<p>If a <code><span class="t param">comparator</span></code> is not provided, a default comparator uses <code><span class="token operator">&lt;</span></code> and <code><span class="token operator">></span></code>.</p>
<p><code><span class="token function">comparator</span><span class="token punctuation">(</span>valueA<span class="token punctuation">,</span> valueB<span class="token punctuation">)</span></code>:</p>
<ul>
<li>Returns <code><span class="token number">0</span></code> if the elements should not be swapped.</li>
<li>Returns <code><span class="token operator">-</span><span class="token number">1</span></code> (or any negative number) if <code>valueA</code> comes before <code>valueB</code></li>
<li>Returns <code><span class="token number">1</span></code> (or any positive number) if <code>valueA</code> comes after <code>valueB</code></li>
<li>Is pure, i.e. it must always return the same value for the same pair
of values.</li>
</ul>
<p>When sorting collections which have no defined order, their ordered
equivalents will be returned. e.g. <code>map<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> returns OrderedMap.</p>
20:T4dc,<p><code class="codeBlock"><span class="token qualifier">Seq</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">'dog'</span><span class="token punctuation">,</span><span class="token string">'frog'</span><span class="token punctuation">,</span><span class="token string">'cat'</span><span class="token punctuation">,</span><span class="token string">'hat'</span><span class="token punctuation">,</span><span class="token string">'god'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">skipWhile</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=></span> x<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">g</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Seq [ 'cat', 'hat', 'god' ]</span></code></p>
21:T4d7,<p><code class="codeBlock"><span class="token qualifier">Seq</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">'dog'</span><span class="token punctuation">,</span><span class="token string">'frog'</span><span class="token punctuation">,</span><span class="token string">'cat'</span><span class="token punctuation">,</span><span class="token string">'hat'</span><span class="token punctuation">,</span><span class="token string">'god'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">skipUntil</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=></span> x<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">hat</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Seq [ 'hat', 'god' ]</span></code></p>
22:T4d6,<p><code class="codeBlock"><span class="token qualifier">Seq</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">'dog'</span><span class="token punctuation">,</span><span class="token string">'frog'</span><span class="token punctuation">,</span><span class="token string">'cat'</span><span class="token punctuation">,</span><span class="token string">'hat'</span><span class="token punctuation">,</span><span class="token string">'god'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">takeWhile</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=></span> x<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">o</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Seq [ 'dog', 'frog' ]</span></code></p>
23:T4ce,<p><code class="codeBlock"><span class="token qualifier">Seq</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">'dog'</span><span class="token punctuation">,</span><span class="token string">'frog'</span><span class="token punctuation">,</span><span class="token string">'cat'</span><span class="token punctuation">,</span><span class="token string">'hat'</span><span class="token punctuation">,</span><span class="token string">'god'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">takeUntil</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=></span> x<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">at</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// ['dog', 'frog']</span></code></p>
24:T57d,<p><code class="codeBlock"><span class="token function">Seq</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">mapEntries</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>k<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// Seq { A: 2, B: 4 }</span></code></p>
7:["$","$L19",null,{"def":{"qualifiedName":"Seq.Keyed","doc":{"synopsis":"<p><code><a href=\"/docs/v3.8.2/Seq\">Seq</a></code> which represents key-value pairs.</p>\n","description":"","notes":[]},"call":{"name":"Seq.Keyed","label":"Seq.Keyed()","id":"Seq.Keyed()","signatures":[{"line":1217,"typeParams":["K","V"],"type":{"k":12,"name":"Seq.Keyed","args":[{"k":11,"param":"K"},{"k":11,"param":"V"}],"url":"/docs/v3.8.2/Seq.Keyed"}},{"line":1218,"typeParams":["K","V"],"params":[{"name":"seq","type":{"k":12,"name":"Iterable.Keyed","args":[{"k":11,"param":"K"},{"k":11,"param":"V"}],"url":"/docs/v3.8.2/Iterable.Keyed"}}],"type":{"k":12,"name":"Seq.Keyed","args":[{"k":11,"param":"K"},{"k":11,"param":"V"}],"url":"/docs/v3.8.2/Seq.Keyed"}},{"line":1219,"typeParams":["K","V"],"params":[{"name":"seq","type":{"k":12,"name":"Iterable","args":[{"k":1},{"k":1}],"url":"/docs/v3.8.2/Iterable"}}],"type":{"k":12,"name":"Seq.Keyed","args":[{"k":11,"param":"K"},{"k":11,"param":"V"}],"url":"/docs/v3.8.2/Seq.Keyed"}},{"line":1220,"typeParams":["K","V"],"params":[{"name":"array","type":{"k":12,"name":"Array","args":[{"k":1}]}}],"type":{"k":12,"name":"Seq.Keyed","args":[{"k":11,"param":"K"},{"k":11,"param":"V"}],"url":"/docs/v3.8.2/Seq.Keyed"}},{"line":1221,"typeParams":["V"],"params":[{"name":"obj","type":{"k":8,"members":[{"index":true,"params":[{"name":"key","type":{"k":7}}],"type":{"k":11,"param":"V"}}]}}],"type":{"k":12,"name":"Seq.Keyed","args":[{"k":7},{"k":11,"param":"V"}],"url":"/docs/v3.8.2/Seq.Keyed"}},{"line":1222,"typeParams":["K","V"],"params":[{"name":"iterator","type":{"k":12,"name":"Iterator","args":[{"k":1}]}}],"type":{"k":12,"name":"Seq.Keyed","args":[{"k":11,"param":"K"},{"k":11,"param":"V"}],"url":"/docs/v3.8.2/Seq.Keyed"}},{"line":1223,"typeParams":["K","V"],"params":[{"name":"iterable","type":{"k":12,"name":"Object"}}],"type":{"k":12,"name":"Seq.Keyed","args":[{"k":11,"param":"K"},{"k":11,"param":"V"}],"url":"/docs/v3.8.2/Seq.Keyed"}}],"url":"/docs/v3.8.2/Seq.Keyed#Seq.Keyed()"},"interface":{"members":{"toSeq":{"name":"toSeq","label":"toSeq()","id":"toSeq()","group":"Conversion to Seq","doc":{"synopsis":"<p>Returns itself</p>\n","description":"","notes":[]},"signatures":[{"line":1230,"type":{"k":12,"name":"Seq.Keyed","args":[{"k":11,"param":"K"},{"k":11,"param":"V"}],"url":"/docs/v3.8.2/Seq.Keyed"}}],"url":"/docs/v3.8.2/Seq.Keyed#toSeq()","overrides":{"interface":"Iterable","label":"toSeq()","url":"/docs/v3.8.2/Iterable#toSeq()"}},"size":{"name":"size","label":"size","id":"size","line":1334,"doc":{"synopsis":"<p>Some Seqs can describe their size lazily. When this is the case,\nsize will be an integer. Otherwise it will be undefined.</p>\n","description":"<p>For example, Seqs returned from <code><a href=\"/docs/v3.8.2/Seq#map()\">map()</a></code> or <code><a href=\"/docs/v3.8.2/Seq#reverse()\">reverse()</a></code>\npreserve the size of the original <code><a href=\"/docs/v3.8.2/Seq\">Seq</a></code> while <code><a href=\"/docs/v3.8.2/Seq#filter()\">filter()</a></code> does not.</p>\n<p>Note: <code><a href=\"/docs/v3.8.2/Range()\">Range</a></code>, <code><a href=\"/docs/v3.8.2/Repeat()\">Repeat</a></code> and <code><a href=\"/docs/v3.8.2/Seq\">Seq</a></code>s made from <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\" target=\"_blank\" rel=\"noopener\">Array</a></code>s and <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\" target=\"_blank\" rel=\"noopener\">Object</a></code>s will\nalways have a size.</p>\n","notes":[]},"type":{"k":6},"url":"/docs/v3.8.2/Seq.Keyed#size","inherited":{"interface":"Seq","label":"size","url":"/docs/v3.8.2/Seq#size"}},"cacheResult":{"name":"cacheResult","label":"cacheResult()","id":"cacheResult()","group":"Force evaluation","doc":{"synopsis":"<p>Because Sequences are lazy and designed to be chained together, they do\nnot cache their results. For example, this map function is called a total\nof 6 times, as each <code><a href=\"/docs/v3.8.2/Seq#join()\">join</a></code> iterates the Seq of three values.</p>\n","description":"$1a","notes":[]},"signatures":[{"line":1359,"type":{"k":12,"name":"Seq","args":[{"k":11,"param":"K"},{"k":11,"param":"V"}],"url":"/docs/v3.8.2/Seq"}}],"url":"/docs/v3.8.2/Seq.Keyed#cacheResult()","inherited":{"interface":"Seq","label":"cacheResult()","url":"/docs/v3.8.2/Seq#cacheResult()"}},"equals":{"name":"equals","label":"equals()","id":"equals()","group":"Value equality","doc":{"synopsis":"<p>True if this and the other Iterable have value equality, as defined\nby <code><a href=\"/docs/v3.8.2/is()\">Immutable.is()</a></code>.</p>\n","description":"<p>Note: This is equivalent to <code><span class=\"token qualifier\">Immutable</span><span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token var\">this</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">)</span></code>, but provided to\nallow for chained expressions.</p>\n","notes":[]},"signatures":[{"line":1715,"params":[{"name":"other","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"type":{"k":5}}],"url":"/docs/v3.8.2/Seq.Keyed#equals()","inherited":{"interface":"Iterable","label":"equals()","url":"/docs/v3.8.2/Iterable#equals()"}},"hashCode":{"name":"hashCode","label":"hashCode()","id":"hashCode()","group":"Value equality","doc":{"synopsis":"<p>Computes and returns the hashed identity for this Iterable.</p>\n","description":"$1b","notes":[]},"signatures":[{"line":1736,"type":{"k":6}}],"url":"/docs/v3.8.2/Seq.Keyed#hashCode()","inherited":{"interface":"Iterable","label":"hashCode()","url":"/docs/v3.8.2/Iterable#hashCode()"}},"get":{"name":"get","label":"get()","id":"get()","group":"Reading values","doc":{"synopsis":"<p>Returns the value associated with the provided key, or notSetValue if\nthe Iterable does not contain this key.</p>\n","description":"<p>Note: it is possible a key may be associated with an <code><span class=\"token primitive\">undefined</span></code> value,\nso if <code><span class=\"t param\">notSetValue</span></code> is not provided and this method returns <code><span class=\"token primitive\">undefined</span></code>,\nthat does not guarantee the key was not found.</p>\n","notes":[]},"signatures":[{"line":1749,"params":[{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0"},{"name":"notSetValue","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true}],"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"url":"/docs/v3.8.2/Seq.Keyed#get()","inherited":{"interface":"Iterable","label":"get()","url":"/docs/v3.8.2/Iterable#get()"}},"has":{"name":"has","label":"has()","id":"has()","group":"Reading values","doc":{"synopsis":"<p>True if a key exists within this <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\" target=\"_blank\" rel=\"noopener\">Iterable</a></code>, using <code><a href=\"/docs/v3.8.2/is()\">Immutable.is</a></code> to determine equality</p>\n","description":"","notes":[]},"signatures":[{"line":1754,"params":[{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0"}],"type":{"k":5}}],"url":"/docs/v3.8.2/Seq.Keyed#has()","inherited":{"interface":"Iterable","label":"has()","url":"/docs/v3.8.2/Iterable#has()"}},"includes":{"name":"includes","label":"includes()","id":"includes()","group":"Reading values","doc":{"synopsis":"<p>True if a value exists within this <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\" target=\"_blank\" rel=\"noopener\">Iterable</a></code>, using <code><a href=\"/docs/v3.8.2/is()\">Immutable.is</a></code> to determine equality</p>\n","description":"","notes":[{"name":"alias","body":"contains"}]},"signatures":[{"line":1760,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"type":{"k":5}}],"url":"/docs/v3.8.2/Seq.Keyed#includes()","inherited":{"interface":"Iterable","label":"includes()","url":"/docs/v3.8.2/Iterable#includes()"}},"first":{"name":"first","label":"first()","id":"first()","group":"Reading values","doc":{"synopsis":"<p>The first value in the Iterable.</p>\n","description":"","notes":[]},"signatures":[{"line":1766,"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"url":"/docs/v3.8.2/Seq.Keyed#first()","inherited":{"interface":"Iterable","label":"first()","url":"/docs/v3.8.2/Iterable#first()"}},"last":{"name":"last","label":"last()","id":"last()","group":"Reading values","doc":{"synopsis":"<p>The last value in the Iterable.</p>\n","description":"","notes":[]},"signatures":[{"line":1771,"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"url":"/docs/v3.8.2/Seq.Keyed#last()","inherited":{"interface":"Iterable","label":"last()","url":"/docs/v3.8.2/Iterable#last()"}},"getIn":{"name":"getIn","label":"getIn()","id":"getIn()","group":"Reading deep values","signatures":[{"line":1780,"params":[{"name":"searchKeyPath","type":{"k":12,"name":"Array","args":[{"k":1}]}},{"name":"notSetValue","type":{"k":1},"optional":true}],"type":{"k":1}},{"line":1781,"params":[{"name":"searchKeyPath","type":{"k":12,"name":"Iterable","args":[{"k":1},{"k":1}],"url":"/docs/v3.8.2/Iterable"}},{"name":"notSetValue","type":{"k":1},"optional":true}],"type":{"k":1}}],"url":"/docs/v3.8.2/Seq.Keyed#getIn()","inherited":{"interface":"Iterable","label":"getIn()","url":"/docs/v3.8.2/Iterable#getIn()"}},"hasIn":{"name":"hasIn","label":"hasIn()","id":"hasIn()","group":"Reading deep values","signatures":[{"line":1787,"params":[{"name":"searchKeyPath","type":{"k":12,"name":"Array","args":[{"k":1}]}}],"type":{"k":5}},{"line":1788,"params":[{"name":"searchKeyPath","type":{"k":12,"name":"Iterable","args":[{"k":1},{"k":1}],"url":"/docs/v3.8.2/Iterable"}}],"type":{"k":5}}],"url":"/docs/v3.8.2/Seq.Keyed#hasIn()","inherited":{"interface":"Iterable","label":"hasIn()","url":"/docs/v3.8.2/Iterable#hasIn()"}},"toJS":{"name":"toJS","label":"toJS()","id":"toJS()","group":"Conversion to JavaScript types","doc":{"synopsis":"<p>Deeply converts this Iterable to equivalent JS.</p>\n","description":"<p><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol/Indexeds\" target=\"_blank\" rel=\"noopener\">Iterable.Indexeds</a></code>, and <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol/Sets\" target=\"_blank\" rel=\"noopener\">Iterable.Sets</a></code> become Arrays, while\n<code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol/Keyeds\" target=\"_blank\" rel=\"noopener\">Iterable.Keyeds</a></code> become Objects.</p>\n","notes":[{"name":"alias","body":"toJSON"}]},"signatures":[{"line":1801,"type":{"k":1}}],"url":"/docs/v3.8.2/Seq.Keyed#toJS()","inherited":{"interface":"Iterable","label":"toJS()","url":"/docs/v3.8.2/Iterable#toJS()"}},"toArray":{"name":"toArray","label":"toArray()","id":"toArray()","group":"Conversion to JavaScript types","doc":{"synopsis":"<p>Shallowly converts this iterable to an Array, discarding keys.</p>\n","description":"","notes":[]},"signatures":[{"line":1806,"type":{"k":12,"name":"Array","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]}}],"url":"/docs/v3.8.2/Seq.Keyed#toArray()","inherited":{"interface":"Iterable","label":"toArray()","url":"/docs/v3.8.2/Iterable#toArray()"}},"toObject":{"name":"toObject","label":"toObject()","id":"toObject()","group":"Conversion to JavaScript types","doc":{"synopsis":"<p>Shallowly converts this Iterable to an Object.</p>\n","description":"<p>Throws if keys are not strings.</p>\n","notes":[]},"signatures":[{"line":1813,"type":{"k":8,"members":[{"index":true,"params":[{"name":"key","type":{"k":7}}],"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}]}}],"url":"/docs/v3.8.2/Seq.Keyed#toObject()","inherited":{"interface":"Iterable","label":"toObject()","url":"/docs/v3.8.2/Iterable#toObject()"}},"toMap":{"name":"toMap","label":"toMap()","id":"toMap()","group":"Conversion to Collections","doc":{"synopsis":"<p>Converts this Iterable to a Map, Throws if keys are not hashable.</p>\n","description":"<p>Note: This is equivalent to <code><span class=\"token function\">Map</span><span class=\"token punctuation\">(</span><span class=\"token var\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">toKeyedSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code>, but provided\nfor convenience and to allow for chained expressions.</p>\n","notes":[]},"signatures":[{"line":1824,"type":{"k":12,"name":"Map","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Map"}}],"url":"/docs/v3.8.2/Seq.Keyed#toMap()","inherited":{"interface":"Iterable","label":"toMap()","url":"/docs/v3.8.2/Iterable#toMap()"}},"toOrderedMap":{"name":"toOrderedMap","label":"toOrderedMap()","id":"toOrderedMap()","group":"Conversion to Collections","doc":{"synopsis":"<p>Converts this Iterable to a Map, maintaining the order of iteration.</p>\n","description":"<p>Note: This is equivalent to <code><span class=\"token function\">OrderedMap</span><span class=\"token punctuation\">(</span><span class=\"token var\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">toKeyedSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code>, but\nprovided for convenience and to allow for chained expressions.</p>\n","notes":[]},"signatures":[{"line":1832,"type":{"k":12,"name":"OrderedMap","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/OrderedMap"}}],"url":"/docs/v3.8.2/Seq.Keyed#toOrderedMap()","inherited":{"interface":"Iterable","label":"toOrderedMap()","url":"/docs/v3.8.2/Iterable#toOrderedMap()"}},"toSet":{"name":"toSet","label":"toSet()","id":"toSet()","group":"Conversion to Collections","doc":{"synopsis":"<p>Converts this Iterable to a Set, discarding keys. Throws if values\nare not hashable.</p>\n","description":"<p>Note: This is equivalent to <code><a href=\"/docs/v3.8.2/Set\">Set(this)</a></code>, but provided to allow for\nchained expressions.</p>\n","notes":[]},"signatures":[{"line":1841,"type":{"k":12,"name":"Set","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Set"}}],"url":"/docs/v3.8.2/Seq.Keyed#toSet()","inherited":{"interface":"Iterable","label":"toSet()","url":"/docs/v3.8.2/Iterable#toSet()"}},"toOrderedSet":{"name":"toOrderedSet","label":"toOrderedSet()","id":"toOrderedSet()","group":"Conversion to Collections","doc":{"synopsis":"<p>Converts this Iterable to a Set, maintaining the order of iteration and\ndiscarding keys.</p>\n","description":"<p>Note: This is equivalent to <code><span class=\"token function\">OrderedSet</span><span class=\"token punctuation\">(</span><span class=\"token var\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code>, but provided\nfor convenience and to allow for chained expressions.</p>\n","notes":[]},"signatures":[{"line":1850,"type":{"k":12,"name":"OrderedSet","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/OrderedSet"}}],"url":"/docs/v3.8.2/Seq.Keyed#toOrderedSet()","inherited":{"interface":"Iterable","label":"toOrderedSet()","url":"/docs/v3.8.2/Iterable#toOrderedSet()"}},"toList":{"name":"toList","label":"toList()","id":"toList()","group":"Conversion to Collections","doc":{"synopsis":"<p>Converts this Iterable to a List, discarding keys.</p>\n","description":"<p>Note: This is equivalent to <code><a href=\"/docs/v3.8.2/List\">List(this)</a></code>, but provided to allow\nfor chained expressions.</p>\n","notes":[]},"signatures":[{"line":1858,"type":{"k":12,"name":"List","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/List"}}],"url":"/docs/v3.8.2/Seq.Keyed#toList()","inherited":{"interface":"Iterable","label":"toList()","url":"/docs/v3.8.2/Iterable#toList()"}},"toStack":{"name":"toStack","label":"toStack()","id":"toStack()","group":"Conversion to Collections","doc":{"synopsis":"<p>Converts this Iterable to a Stack, discarding keys. Throws if values\nare not hashable.</p>\n","description":"<p>Note: This is equivalent to <code><a href=\"/docs/v3.8.2/Stack\">Stack(this)</a></code>, but provided to allow for\nchained expressions.</p>\n","notes":[]},"signatures":[{"line":1867,"type":{"k":12,"name":"Stack","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Stack"}}],"url":"/docs/v3.8.2/Seq.Keyed#toStack()","inherited":{"interface":"Iterable","label":"toStack()","url":"/docs/v3.8.2/Iterable#toStack()"}},"toKeyedSeq":{"name":"toKeyedSeq","label":"toKeyedSeq()","id":"toKeyedSeq()","group":"Conversion to Seq","doc":{"synopsis":"<p>Returns a Seq.Keyed from this Iterable where indices are treated as keys.</p>\n","description":"$1c","notes":[]},"signatures":[{"line":1895,"type":{"k":12,"name":"Seq.Keyed","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Seq.Keyed"}}],"url":"/docs/v3.8.2/Seq.Keyed#toKeyedSeq()","inherited":{"interface":"Iterable","label":"toKeyedSeq()","url":"/docs/v3.8.2/Iterable#toKeyedSeq()"}},"toIndexedSeq":{"name":"toIndexedSeq","label":"toIndexedSeq()","id":"toIndexedSeq()","group":"Conversion to Seq","doc":{"synopsis":"<p>Returns an Seq.Indexed of the values of this Iterable, discarding keys.</p>\n","description":"","notes":[]},"signatures":[{"line":1900,"type":{"k":12,"name":"Seq.Indexed","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Seq.Indexed"}}],"url":"/docs/v3.8.2/Seq.Keyed#toIndexedSeq()","inherited":{"interface":"Iterable","label":"toIndexedSeq()","url":"/docs/v3.8.2/Iterable#toIndexedSeq()"}},"toSetSeq":{"name":"toSetSeq","label":"toSetSeq()","id":"toSetSeq()","group":"Conversion to Seq","doc":{"synopsis":"<p>Returns a Seq.Set of the values of this Iterable, discarding keys.</p>\n","description":"","notes":[]},"signatures":[{"line":1905,"type":{"k":12,"name":"Seq.Set","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Seq.Set"}}],"url":"/docs/v3.8.2/Seq.Keyed#toSetSeq()","inherited":{"interface":"Iterable","label":"toSetSeq()","url":"/docs/v3.8.2/Iterable#toSetSeq()"}},"keys":{"name":"keys","label":"keys()","id":"keys()","group":"Iterators","doc":{"synopsis":"<p>An iterator of this <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\" target=\"_blank\" rel=\"noopener\">Iterable</a></code>&#39;s keys.</p>\n","description":"<p>Note: this will return an ES6 iterator which does not support Immutable JS sequence algorithms. Use <code><a href=\"/docs/v3.8.2/List#keySeq()\">keySeq</a></code> instead, if this is what you want.</p>\n","notes":[]},"signatures":[{"line":1915,"type":{"k":12,"name":"Iterator","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0"]}}],"url":"/docs/v3.8.2/Seq.Keyed#keys()","inherited":{"interface":"Iterable","label":"keys()","url":"/docs/v3.8.2/Iterable#keys()"}},"values":{"name":"values","label":"values()","id":"values()","group":"Iterators","doc":{"synopsis":"<p>An iterator of this <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\" target=\"_blank\" rel=\"noopener\">Iterable</a></code>&#39;s values.</p>\n","description":"<p>Note: this will return an ES6 iterator which does not support Immutable JS sequence algorithms. Use <code><a href=\"/docs/v3.8.2/List#valueSeq()\">valueSeq</a></code> instead, if this is what you want.</p>\n","notes":[]},"signatures":[{"line":1922,"type":{"k":12,"name":"Iterator","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]}}],"url":"/docs/v3.8.2/Seq.Keyed#values()","inherited":{"interface":"Iterable","label":"values()","url":"/docs/v3.8.2/Iterable#values()"}},"entries":{"name":"entries","label":"entries()","id":"entries()","group":"Iterators","doc":{"synopsis":"<p>An iterator of this <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\" target=\"_blank\" rel=\"noopener\">Iterable</a></code>&#39;s entries as <code><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span></code> tuples.</p>\n","description":"<p>Note: this will return an ES6 iterator which does not support Immutable JS sequence algorithms. Use <code><a href=\"/docs/v3.8.2/List#entrySeq()\">entrySeq</a></code> instead, if this is what you want.</p>\n","notes":[]},"signatures":[{"line":1929,"type":{"k":12,"name":"Iterator","args":[{"k":12,"name":"Array","args":[{"k":1}]}]}}],"url":"/docs/v3.8.2/Seq.Keyed#entries()","inherited":{"interface":"Iterable","label":"entries()","url":"/docs/v3.8.2/Iterable#entries()"}},"keySeq":{"name":"keySeq","label":"keySeq()","id":"keySeq()","group":"Iterables (Seq)","doc":{"synopsis":"<p>Returns a new Seq.Indexed of the keys of this Iterable,\ndiscarding values.</p>\n","description":"","notes":[]},"signatures":[{"line":1938,"type":{"k":12,"name":"Seq.Indexed","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0"],"url":"/docs/v3.8.2/Seq.Indexed"}}],"url":"/docs/v3.8.2/Seq.Keyed#keySeq()","inherited":{"interface":"Iterable","label":"keySeq()","url":"/docs/v3.8.2/Iterable#keySeq()"}},"valueSeq":{"name":"valueSeq","label":"valueSeq()","id":"valueSeq()","group":"Iterables (Seq)","doc":{"synopsis":"<p>Returns an Seq.Indexed of the values of this Iterable, discarding keys.</p>\n","description":"","notes":[]},"signatures":[{"line":1943,"type":{"k":12,"name":"Seq.Indexed","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Seq.Indexed"}}],"url":"/docs/v3.8.2/Seq.Keyed#valueSeq()","inherited":{"interface":"Iterable","label":"valueSeq()","url":"/docs/v3.8.2/Iterable#valueSeq()"}},"entrySeq":{"name":"entrySeq","label":"entrySeq()","id":"entrySeq()","group":"Iterables (Seq)","doc":{"synopsis":"<p>Returns a new Seq.Indexed of [key, value] tuples.</p>\n","description":"","notes":[]},"signatures":[{"line":1948,"type":{"k":12,"name":"Seq.Indexed","args":[{"k":12,"name":"Array","args":[{"k":1}]}],"url":"/docs/v3.8.2/Seq.Indexed"}}],"url":"/docs/v3.8.2/Seq.Keyed#entrySeq()","inherited":{"interface":"Iterable","label":"entrySeq()","url":"/docs/v3.8.2/Iterable#entrySeq()"}},"map":{"name":"map","label":"map()","id":"map()","group":"Sequence algorithms","doc":{"synopsis":"<p>Returns a new Iterable of the same type with values passed through a\n<code><span class=\"t param\">mapper</span></code> function.</p>\n","description":"<p><code class=\"codeBlock\"><span class=\"token function\">Seq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> x<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Seq { a: 10, b: 20 }</span></code></p>\n","notes":[]},"signatures":[{"line":1961,"typeParams":["M"],"params":[{"name":"mapper","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":11,"param":"M"}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0",{"k":11,"param":"M"}],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#map()","inherited":{"interface":"Iterable","label":"map()","url":"/docs/v3.8.2/Iterable#map()"}},"filter":{"name":"filter","label":"filter()","id":"filter()","group":"Sequence algorithms","doc":{"synopsis":"<p>Returns a new Iterable of the same type with only the entries for which\nthe <code><span class=\"t param\">predicate</span></code> function returns true.</p>\n","description":"$1d","notes":[]},"signatures":[{"line":1974,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#filter()","inherited":{"interface":"Iterable","label":"filter()","url":"/docs/v3.8.2/Iterable#filter()"}},"filterNot":{"name":"filterNot","label":"filterNot()","id":"filterNot()","group":"Sequence algorithms","doc":{"synopsis":"<p>Returns a new Iterable of the same type with only the entries for which\nthe <code><span class=\"t param\">predicate</span></code> function returns false.</p>\n","description":"$1e","notes":[]},"signatures":[{"line":1987,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#filterNot()","inherited":{"interface":"Iterable","label":"filterNot()","url":"/docs/v3.8.2/Iterable#filterNot()"}},"reverse":{"name":"reverse","label":"reverse()","id":"reverse()","group":"Sequence algorithms","doc":{"synopsis":"<p>Returns a new Iterable of the same type in reverse order.</p>\n","description":"","notes":[]},"signatures":[{"line":1995,"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#reverse()","inherited":{"interface":"Iterable","label":"reverse()","url":"/docs/v3.8.2/Iterable#reverse()"}},"sort":{"name":"sort","label":"sort()","id":"sort()","group":"Sequence algorithms","doc":{"synopsis":"<p>Returns a new Iterable of the same type which includes the same entries,\nstably sorted by using a <code><span class=\"t param\">comparator</span></code>.</p>\n","description":"$1f","notes":[]},"signatures":[{"line":2014,"params":[{"name":"comparator","type":{"k":10,"params":[{"name":"valueA","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"},{"name":"valueB","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"type":{"k":6}},"optional":true}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#sort()","inherited":{"interface":"Iterable","label":"sort()","url":"/docs/v3.8.2/Iterable#sort()"}},"sortBy":{"name":"sortBy","label":"sortBy()","id":"sortBy()","group":"Sequence algorithms","doc":{"synopsis":"<p>Like <code><a href=\"/docs/v3.8.2/List#sort()\">sort</a></code>, but also accepts a <code><span class=\"t param\">comparatorValueMapper</span></code> which allows for\nsorting by more sophisticated means:</p>\n","description":"<p><code class=\"codeBlock\">hitters<span class=\"token punctuation\">.</span><span class=\"token function\">sortBy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">hitter</span> <span class=\"token operator\">=></span> hitter<span class=\"token punctuation\">.</span>avgHits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></p>\n","notes":[]},"signatures":[{"line":2023,"typeParams":["C"],"params":[{"name":"comparatorValueMapper","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":11,"param":"C"}}},{"name":"comparator","type":{"k":10,"params":[{"name":"valueA","type":{"k":11,"param":"C"}},{"name":"valueB","type":{"k":11,"param":"C"}}],"type":{"k":6}},"optional":true}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#sortBy()","inherited":{"interface":"Iterable","label":"sortBy()","url":"/docs/v3.8.2/Iterable#sortBy()"}},"groupBy":{"name":"groupBy","label":"groupBy()","id":"groupBy()","group":"Sequence algorithms","doc":{"synopsis":"<p>Returns a <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol/Keyed\" target=\"_blank\" rel=\"noopener\">Iterable.Keyed</a></code> of <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol/Keyeds\" target=\"_blank\" rel=\"noopener\">Iterable.Keyeds</a></code>, grouped by the return\nvalue of the <code><span class=\"t param\">grouper</span></code> function.</p>\n","description":"<p>Note: This is always an eager operation.</p>\n","notes":[]},"signatures":[{"line":2034,"typeParams":["G"],"params":[{"name":"grouper","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":11,"param":"G"}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Seq.Keyed","args":[{"k":11,"param":"G"},{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]}],"url":"/docs/v3.8.2/Seq.Keyed"}}],"url":"/docs/v3.8.2/Seq.Keyed#groupBy()","inherited":{"interface":"Iterable","label":"groupBy()","url":"/docs/v3.8.2/Iterable#groupBy()"}},"forEach":{"name":"forEach","label":"forEach()","id":"forEach()","group":"Side effects","doc":{"synopsis":"<p>The <code><span class=\"t param\">sideEffect</span></code> is executed for every entry in the Iterable.</p>\n","description":"<p>Unlike <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\" target=\"_blank\" rel=\"noopener\">Array#forEach</a></code>, if any call of <code><span class=\"t param\">sideEffect</span></code> returns\n<code><span class=\"token primitive\">false</span></code>, the iteration will stop. Returns the number of entries iterated\n(including the last iteration which returned false).</p>\n","notes":[]},"signatures":[{"line":2049,"params":[{"name":"sideEffect","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":1}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":6}}],"url":"/docs/v3.8.2/Seq.Keyed#forEach()","inherited":{"interface":"Iterable","label":"forEach()","url":"/docs/v3.8.2/Iterable#forEach()"}},"slice":{"name":"slice","label":"slice()","id":"slice()","group":"Creating subsets","doc":{"synopsis":"<p>Returns a new Iterable of the same type representing a portion of this\nIterable from start up to but not including end.</p>\n","description":"<p>If begin is negative, it is offset from the end of the Iterable. e.g.\n<code><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code> returns a Iterable of the last two entries. If it is not\nprovided the new Iterable will begin at the beginning of this Iterable.</p>\n<p>If end is negative, it is offset from the end of the Iterable. e.g.\n<code><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code> returns an Iterable of everything but the last entry. If\nit is not provided, the new Iterable will continue through the end of\nthis Iterable.</p>\n<p>If the requested slice is equivalent to the current Iterable, then it\nwill return itself.</p>\n","notes":[]},"signatures":[{"line":2073,"params":[{"name":"begin","type":{"k":6},"optional":true},{"name":"end","type":{"k":6},"optional":true}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#slice()","inherited":{"interface":"Iterable","label":"slice()","url":"/docs/v3.8.2/Iterable#slice()"}},"rest":{"name":"rest","label":"rest()","id":"rest()","group":"Creating subsets","doc":{"synopsis":"<p>Returns a new Iterable of the same type containing all entries except\nthe first.</p>\n","description":"","notes":[]},"signatures":[{"line":2079,"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#rest()","inherited":{"interface":"Iterable","label":"rest()","url":"/docs/v3.8.2/Iterable#rest()"}},"butLast":{"name":"butLast","label":"butLast()","id":"butLast()","group":"Creating subsets","doc":{"synopsis":"<p>Returns a new Iterable of the same type containing all entries except\nthe last.</p>\n","description":"","notes":[]},"signatures":[{"line":2085,"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#butLast()","inherited":{"interface":"Iterable","label":"butLast()","url":"/docs/v3.8.2/Iterable#butLast()"}},"skip":{"name":"skip","label":"skip()","id":"skip()","group":"Creating subsets","doc":{"synopsis":"<p>Returns a new Iterable of the same type which excludes the first <code><span class=\"t param\">amount</span></code>\nentries from this Iterable.</p>\n","description":"","notes":[]},"signatures":[{"line":2091,"params":[{"name":"amount","type":{"k":6}}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#skip()","inherited":{"interface":"Iterable","label":"skip()","url":"/docs/v3.8.2/Iterable#skip()"}},"skipLast":{"name":"skipLast","label":"skipLast()","id":"skipLast()","group":"Creating subsets","doc":{"synopsis":"<p>Returns a new Iterable of the same type which excludes the last <code><span class=\"t param\">amount</span></code>\nentries from this Iterable.</p>\n","description":"","notes":[]},"signatures":[{"line":2097,"params":[{"name":"amount","type":{"k":6}}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#skipLast()","inherited":{"interface":"Iterable","label":"skipLast()","url":"/docs/v3.8.2/Iterable#skipLast()"}},"skipWhile":{"name":"skipWhile","label":"skipWhile()","id":"skipWhile()","group":"Creating subsets","doc":{"synopsis":"<p>Returns a new Iterable of the same type which includes entries starting\nfrom when <code><span class=\"t param\">predicate</span></code> first returns false.</p>\n","description":"$20","notes":[]},"signatures":[{"line":2108,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#skipWhile()","inherited":{"interface":"Iterable","label":"skipWhile()","url":"/docs/v3.8.2/Iterable#skipWhile()"}},"skipUntil":{"name":"skipUntil","label":"skipUntil()","id":"skipUntil()","group":"Creating subsets","doc":{"synopsis":"<p>Returns a new Iterable of the same type which includes entries starting\nfrom when <code><span class=\"t param\">predicate</span></code> first returns true.</p>\n","description":"$21","notes":[]},"signatures":[{"line":2122,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#skipUntil()","inherited":{"interface":"Iterable","label":"skipUntil()","url":"/docs/v3.8.2/Iterable#skipUntil()"}},"take":{"name":"take","label":"take()","id":"take()","group":"Creating subsets","doc":{"synopsis":"<p>Returns a new Iterable of the same type which includes the first <code><span class=\"t param\">amount</span></code>\nentries from this Iterable.</p>\n","description":"","notes":[]},"signatures":[{"line":2131,"params":[{"name":"amount","type":{"k":6}}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#take()","inherited":{"interface":"Iterable","label":"take()","url":"/docs/v3.8.2/Iterable#take()"}},"takeLast":{"name":"takeLast","label":"takeLast()","id":"takeLast()","group":"Creating subsets","doc":{"synopsis":"<p>Returns a new Iterable of the same type which includes the last <code><span class=\"t param\">amount</span></code>\nentries from this Iterable.</p>\n","description":"","notes":[]},"signatures":[{"line":2137,"params":[{"name":"amount","type":{"k":6}}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#takeLast()","inherited":{"interface":"Iterable","label":"takeLast()","url":"/docs/v3.8.2/Iterable#takeLast()"}},"takeWhile":{"name":"takeWhile","label":"takeWhile()","id":"takeWhile()","group":"Creating subsets","doc":{"synopsis":"<p>Returns a new Iterable of the same type which includes entries from this\nIterable as long as the <code><span class=\"t param\">predicate</span></code> returns true.</p>\n","description":"$22","notes":[]},"signatures":[{"line":2148,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#takeWhile()","inherited":{"interface":"Iterable","label":"takeWhile()","url":"/docs/v3.8.2/Iterable#takeWhile()"}},"takeUntil":{"name":"takeUntil","label":"takeUntil()","id":"takeUntil()","group":"Creating subsets","doc":{"synopsis":"<p>Returns a new Iterable of the same type which includes entries from this\nIterable as long as the <code><span class=\"t param\">predicate</span></code> returns false.</p>\n","description":"$23","notes":[]},"signatures":[{"line":2161,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#takeUntil()","inherited":{"interface":"Iterable","label":"takeUntil()","url":"/docs/v3.8.2/Iterable#takeUntil()"}},"concat":{"name":"concat","label":"concat()","id":"concat()","group":"Combination","doc":{"synopsis":"<p>Returns a new Iterable of the same type with other values and\niterable-like concatenated to this one.</p>\n","description":"<p>For Seqs, all entries will be present in\nthe resulting iterable, even if they have the same key.</p>\n","notes":[]},"signatures":[{"line":2176,"params":[{"name":"valuesOrIterables","type":{"k":9,"type":{"k":1}},"varArgs":true}],"type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#concat()","inherited":{"interface":"Iterable","label":"concat()","url":"/docs/v3.8.2/Iterable#concat()"}},"flatten":{"name":"flatten","label":"flatten()","id":"flatten()","group":"Combination","signatures":[{"line":2191,"params":[{"name":"depth","type":{"k":6},"optional":true}],"type":{"k":12,"name":"Iterable","args":[{"k":1},{"k":1}],"url":"/docs/v3.8.2/Iterable"}},{"line":2192,"params":[{"name":"shallow","type":{"k":5},"optional":true}],"type":{"k":12,"name":"Iterable","args":[{"k":1},{"k":1}],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#flatten()","inherited":{"interface":"Iterable","label":"flatten()","url":"/docs/v3.8.2/Iterable#flatten()"}},"flatMap":{"name":"flatMap","label":"flatMap()","id":"flatMap()","group":"Combination","signatures":[{"line":2199,"typeParams":["MK","MV"],"params":[{"name":"mapper","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":12,"name":"Iterable","args":[{"k":11,"param":"MK"},{"k":11,"param":"MV"}]}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Iterable","args":[{"k":11,"param":"MK"},{"k":11,"param":"MV"}],"url":"/docs/v3.8.2/Iterable"}},{"line":2203,"typeParams":["MK","MV"],"params":[{"name":"mapper","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":1}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Iterable","args":[{"k":11,"param":"MK"},{"k":11,"param":"MV"}],"url":"/docs/v3.8.2/Iterable"}}],"url":"/docs/v3.8.2/Seq.Keyed#flatMap()","inherited":{"interface":"Iterable","label":"flatMap()","url":"/docs/v3.8.2/Iterable#flatMap()"}},"reduce":{"name":"reduce","label":"reduce()","id":"reduce()","group":"Reducing a value","doc":{"synopsis":"<p>Reduces the Iterable to a value by calling the <code><span class=\"t param\">reducer</span></code> for every entry\nin the Iterable and passing along the reduced value.</p>\n","description":"<p>If <code><span class=\"t param\">initialReduction</span></code> is not provided, or is null, the first item in the\nIterable will be used.</p>\n","notes":[{"name":"see","body":"<p><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\" target=\"_blank\" rel=\"noopener\">Array#reduce</a></code>.</p>\n"}]},"signatures":[{"line":2220,"typeParams":["R"],"params":[{"name":"reducer","type":{"k":10,"params":[{"name":"reduction","type":{"k":11,"param":"R"},"optional":true},{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":11,"param":"R"}}},{"name":"initialReduction","type":{"k":11,"param":"R"},"optional":true},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":11,"param":"R"}}],"url":"/docs/v3.8.2/Seq.Keyed#reduce()","inherited":{"interface":"Iterable","label":"reduce()","url":"/docs/v3.8.2/Iterable#reduce()"}},"reduceRight":{"name":"reduceRight","label":"reduceRight()","id":"reduceRight()","group":"Reducing a value","doc":{"synopsis":"<p>Reduces the Iterable in reverse (from the right side).</p>\n","description":"<p>Note: Similar to this.reverse().reduce(), and provided for parity\nwith <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight\" target=\"_blank\" rel=\"noopener\">Array#reduceRight</a></code>.</p>\n","notes":[]},"signatures":[{"line":2232,"typeParams":["R"],"params":[{"name":"reducer","type":{"k":10,"params":[{"name":"reduction","type":{"k":11,"param":"R"},"optional":true},{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":11,"param":"R"}}},{"name":"initialReduction","type":{"k":11,"param":"R"},"optional":true},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":11,"param":"R"}}],"url":"/docs/v3.8.2/Seq.Keyed#reduceRight()","inherited":{"interface":"Iterable","label":"reduceRight()","url":"/docs/v3.8.2/Iterable#reduceRight()"}},"every":{"name":"every","label":"every()","id":"every()","group":"Reducing a value","doc":{"synopsis":"<p>True if <code><span class=\"t param\">predicate</span></code> returns true for all entries in the Iterable.</p>\n","description":"","notes":[]},"signatures":[{"line":2241,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":5}}],"url":"/docs/v3.8.2/Seq.Keyed#every()","inherited":{"interface":"Iterable","label":"every()","url":"/docs/v3.8.2/Iterable#every()"}},"some":{"name":"some","label":"some()","id":"some()","group":"Reducing a value","doc":{"synopsis":"<p>True if <code><span class=\"t param\">predicate</span></code> returns true for any entry in the Iterable.</p>\n","description":"","notes":[]},"signatures":[{"line":2249,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":5}}],"url":"/docs/v3.8.2/Seq.Keyed#some()","inherited":{"interface":"Iterable","label":"some()","url":"/docs/v3.8.2/Iterable#some()"}},"join":{"name":"join","label":"join()","id":"join()","group":"Reducing a value","doc":{"synopsis":"<p>Joins values together as a string, inserting a separator between each.\nThe default separator is <code><span class=\"token string\">\",\"</span></code>.</p>\n","description":"","notes":[]},"signatures":[{"line":2258,"params":[{"name":"separator","type":{"k":7},"optional":true}],"type":{"k":7}}],"url":"/docs/v3.8.2/Seq.Keyed#join()","inherited":{"interface":"Iterable","label":"join()","url":"/docs/v3.8.2/Iterable#join()"}},"isEmpty":{"name":"isEmpty","label":"isEmpty()","id":"isEmpty()","group":"Reducing a value","doc":{"synopsis":"<p>Returns true if this Iterable includes no values.</p>\n","description":"<p>For some lazy <code><a href=\"/docs/v3.8.2/Seq\">Seq</a></code>, <code><a href=\"/docs/v3.8.2/List#isEmpty()\">isEmpty</a></code> might need to iterate to determine\nemptiness. At most one iteration will occur.</p>\n","notes":[]},"signatures":[{"line":2266,"type":{"k":5}}],"url":"/docs/v3.8.2/Seq.Keyed#isEmpty()","inherited":{"interface":"Iterable","label":"isEmpty()","url":"/docs/v3.8.2/Iterable#isEmpty()"}},"count":{"name":"count","label":"count()","id":"count()","group":"Reducing a value","signatures":[{"line":2278,"type":{"k":6}},{"line":2279,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":6}}],"url":"/docs/v3.8.2/Seq.Keyed#count()","inherited":{"interface":"Iterable","label":"count()","url":"/docs/v3.8.2/Iterable#count()"}},"countBy":{"name":"countBy","label":"countBy()","id":"countBy()","group":"Reducing a value","doc":{"synopsis":"<p>Returns a <code><a href=\"/docs/v3.8.2/Seq.Keyed\">Seq.Keyed</a></code> of counts, grouped by the return value of\nthe <code><span class=\"t param\">grouper</span></code> function.</p>\n","description":"<p>Note: This is not a lazy operation.</p>\n","notes":[]},"signatures":[{"line":2290,"typeParams":["G"],"params":[{"name":"grouper","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":11,"param":"G"}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Map","args":[{"k":11,"param":"G"},{"k":6}],"url":"/docs/v3.8.2/Map"}}],"url":"/docs/v3.8.2/Seq.Keyed#countBy()","inherited":{"interface":"Iterable","label":"countBy()","url":"/docs/v3.8.2/Iterable#countBy()"}},"find":{"name":"find","label":"find()","id":"find()","group":"Search for value","doc":{"synopsis":"<p>Returns the first value for which the <code><span class=\"t param\">predicate</span></code> returns true.</p>\n","description":"","notes":[]},"signatures":[{"line":2301,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true},{"name":"notSetValue","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true}],"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"url":"/docs/v3.8.2/Seq.Keyed#find()","inherited":{"interface":"Iterable","label":"find()","url":"/docs/v3.8.2/Iterable#find()"}},"findLast":{"name":"findLast","label":"findLast()","id":"findLast()","group":"Search for value","doc":{"synopsis":"<p>Returns the last value for which the <code><span class=\"t param\">predicate</span></code> returns true.</p>\n","description":"<p>Note: <code><span class=\"t param\">predicate</span></code> will be called for each entry in reverse.</p>\n","notes":[]},"signatures":[{"line":2312,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true},{"name":"notSetValue","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true}],"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"url":"/docs/v3.8.2/Seq.Keyed#findLast()","inherited":{"interface":"Iterable","label":"findLast()","url":"/docs/v3.8.2/Iterable#findLast()"}},"findEntry":{"name":"findEntry","label":"findEntry()","id":"findEntry()","group":"Search for value","doc":{"synopsis":"<p>Returns the first [key, value] entry for which the <code><span class=\"t param\">predicate</span></code> returns true.</p>\n","description":"","notes":[]},"signatures":[{"line":2321,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true},{"name":"notSetValue","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true}],"type":{"k":12,"name":"Array","args":[{"k":1}]}}],"url":"/docs/v3.8.2/Seq.Keyed#findEntry()","inherited":{"interface":"Iterable","label":"findEntry()","url":"/docs/v3.8.2/Iterable#findEntry()"}},"findLastEntry":{"name":"findLastEntry","label":"findLastEntry()","id":"findLastEntry()","group":"Search for value","doc":{"synopsis":"<p>Returns the last [key, value] entry for which the <code><span class=\"t param\">predicate</span></code>\nreturns true.</p>\n","description":"<p>Note: <code><span class=\"t param\">predicate</span></code> will be called for each entry in reverse.</p>\n","notes":[]},"signatures":[{"line":2333,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true},{"name":"notSetValue","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true}],"type":{"k":12,"name":"Array","args":[{"k":1}]}}],"url":"/docs/v3.8.2/Seq.Keyed#findLastEntry()","inherited":{"interface":"Iterable","label":"findLastEntry()","url":"/docs/v3.8.2/Iterable#findLastEntry()"}},"findKey":{"name":"findKey","label":"findKey()","id":"findKey()","group":"Search for value","doc":{"synopsis":"<p>Returns the key for which the <code><span class=\"t param\">predicate</span></code> returns true.</p>\n","description":"","notes":[]},"signatures":[{"line":2342,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable.Keyed","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true}],"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0"}],"url":"/docs/v3.8.2/Seq.Keyed#findKey()","inherited":{"interface":"Iterable","label":"findKey()","url":"/docs/v3.8.2/Iterable#findKey()"}},"findLastKey":{"name":"findLastKey","label":"findLastKey()","id":"findLastKey()","group":"Search for value","doc":{"synopsis":"<p>Returns the last key for which the <code><span class=\"t param\">predicate</span></code> returns true.</p>\n","description":"<p>Note: <code><span class=\"t param\">predicate</span></code> will be called for each entry in reverse.</p>\n","notes":[]},"signatures":[{"line":2352,"params":[{"name":"predicate","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable.Keyed","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":5}}},{"name":"context","type":{"k":1},"optional":true}],"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0"}],"url":"/docs/v3.8.2/Seq.Keyed#findLastKey()","inherited":{"interface":"Iterable","label":"findLastKey()","url":"/docs/v3.8.2/Iterable#findLastKey()"}},"keyOf":{"name":"keyOf","label":"keyOf()","id":"keyOf()","group":"Search for value","doc":{"synopsis":"<p>Returns the key associated with the search value, or undefined.</p>\n","description":"","notes":[]},"signatures":[{"line":2360,"params":[{"name":"searchValue","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0"}],"url":"/docs/v3.8.2/Seq.Keyed#keyOf()","inherited":{"interface":"Iterable","label":"keyOf()","url":"/docs/v3.8.2/Iterable#keyOf()"}},"lastKeyOf":{"name":"lastKeyOf","label":"lastKeyOf()","id":"lastKeyOf()","group":"Search for value","doc":{"synopsis":"<p>Returns the last key associated with the search value, or undefined.</p>\n","description":"","notes":[]},"signatures":[{"line":2365,"params":[{"name":"searchValue","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0"}],"url":"/docs/v3.8.2/Seq.Keyed#lastKeyOf()","inherited":{"interface":"Iterable","label":"lastKeyOf()","url":"/docs/v3.8.2/Iterable#lastKeyOf()"}},"max":{"name":"max","label":"max()","id":"max()","group":"Search for value","doc":{"synopsis":"<p>Returns the maximum value in this collection. If any values are\ncomparatively equivalent, the first one found will be returned.</p>\n","description":"<p>The <code><span class=\"t param\">comparator</span></code> is used in the same way as <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol/sort\" target=\"_blank\" rel=\"noopener\">Iterable#sort</a></code>. If it is not\nprovided, the default comparator is <code><span class=\"token operator\">></span></code>.</p>\n<p>When two values are considered equivalent, the first encountered will be\nreturned. Otherwise, <code><a href=\"/docs/v3.8.2/List#max()\">max</a></code> will operate independent of the order of input\nas long as the comparator is commutative. The default comparator <code><span class=\"token operator\">></span></code> is\ncommutative <em>only</em> when types do not differ.</p>\n<p>If <code><span class=\"t param\">comparator</span></code> returns 0 and either value is NaN, undefined, or null,\nthat value will be returned.</p>\n","notes":[]},"signatures":[{"line":2382,"params":[{"name":"comparator","type":{"k":10,"params":[{"name":"valueA","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"},{"name":"valueB","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"type":{"k":6}},"optional":true}],"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"url":"/docs/v3.8.2/Seq.Keyed#max()","inherited":{"interface":"Iterable","label":"max()","url":"/docs/v3.8.2/Iterable#max()"}},"maxBy":{"name":"maxBy","label":"maxBy()","id":"maxBy()","group":"Search for value","doc":{"synopsis":"<p>Like <code><a href=\"/docs/v3.8.2/List#max()\">max</a></code>, but also accepts a <code><span class=\"t param\">comparatorValueMapper</span></code> which allows for\ncomparing by more sophisticated means:</p>\n","description":"<p><code class=\"codeBlock\">hitters<span class=\"token punctuation\">.</span><span class=\"token function\">maxBy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">hitter</span> <span class=\"token operator\">=></span> hitter<span class=\"token punctuation\">.</span>avgHits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></p>\n","notes":[]},"signatures":[{"line":2391,"typeParams":["C"],"params":[{"name":"comparatorValueMapper","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":11,"param":"C"}}},{"name":"comparator","type":{"k":10,"params":[{"name":"valueA","type":{"k":11,"param":"C"}},{"name":"valueB","type":{"k":11,"param":"C"}}],"type":{"k":6}},"optional":true}],"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"url":"/docs/v3.8.2/Seq.Keyed#maxBy()","inherited":{"interface":"Iterable","label":"maxBy()","url":"/docs/v3.8.2/Iterable#maxBy()"}},"min":{"name":"min","label":"min()","id":"min()","group":"Search for value","doc":{"synopsis":"<p>Returns the minimum value in this collection. If any values are\ncomparatively equivalent, the first one found will be returned.</p>\n","description":"<p>The <code><span class=\"t param\">comparator</span></code> is used in the same way as <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol/sort\" target=\"_blank\" rel=\"noopener\">Iterable#sort</a></code>. If it is not\nprovided, the default comparator is <code><span class=\"token operator\">&lt;</span></code>.</p>\n<p>When two values are considered equivalent, the first encountered will be\nreturned. Otherwise, <code><a href=\"/docs/v3.8.2/List#min()\">min</a></code> will operate independent of the order of input\nas long as the comparator is commutative. The default comparator <code><span class=\"token operator\">&lt;</span></code> is\ncommutative <em>only</em> when types do not differ.</p>\n<p>If <code><span class=\"t param\">comparator</span></code> returns 0 and either value is NaN, undefined, or null,\nthat value will be returned.</p>\n","notes":[]},"signatures":[{"line":2411,"params":[{"name":"comparator","type":{"k":10,"params":[{"name":"valueA","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"},{"name":"valueB","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"type":{"k":6}},"optional":true}],"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"url":"/docs/v3.8.2/Seq.Keyed#min()","inherited":{"interface":"Iterable","label":"min()","url":"/docs/v3.8.2/Iterable#min()"}},"minBy":{"name":"minBy","label":"minBy()","id":"minBy()","group":"Search for value","doc":{"synopsis":"<p>Like <code><a href=\"/docs/v3.8.2/List#min()\">min</a></code>, but also accepts a <code><span class=\"t param\">comparatorValueMapper</span></code> which allows for\ncomparing by more sophisticated means:</p>\n","description":"<p><code class=\"codeBlock\">hitters<span class=\"token punctuation\">.</span><span class=\"token function\">minBy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">hitter</span> <span class=\"token operator\">=></span> hitter<span class=\"token punctuation\">.</span>avgHits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></p>\n","notes":[]},"signatures":[{"line":2420,"typeParams":["C"],"params":[{"name":"comparatorValueMapper","type":{"k":10,"params":[{"name":"value","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1","optional":true},{"name":"key","type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]},"optional":true}],"type":{"k":11,"param":"C"}}},{"name":"comparator","type":{"k":10,"params":[{"name":"valueA","type":{"k":11,"param":"C"}},{"name":"valueB","type":{"k":11,"param":"C"}}],"type":{"k":6}},"optional":true}],"type":"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"}],"url":"/docs/v3.8.2/Seq.Keyed#minBy()","inherited":{"interface":"Iterable","label":"minBy()","url":"/docs/v3.8.2/Iterable#minBy()"}},"isSubset":{"name":"isSubset","label":"isSubset()","id":"isSubset()","group":"Comparison","signatures":[{"line":2431,"params":[{"name":"iter","type":{"k":12,"name":"Iterable","args":[{"k":1},"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"type":{"k":5}},{"line":2432,"params":[{"name":"iter","type":{"k":12,"name":"Array","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]}}],"type":{"k":5}}],"url":"/docs/v3.8.2/Seq.Keyed#isSubset()","inherited":{"interface":"Iterable","label":"isSubset()","url":"/docs/v3.8.2/Iterable#isSubset()"}},"isSuperset":{"name":"isSuperset","label":"isSuperset()","id":"isSuperset()","group":"Comparison","signatures":[{"line":2437,"params":[{"name":"iter","type":{"k":12,"name":"Iterable","args":[{"k":1},"$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Iterable"}}],"type":{"k":5}},{"line":2438,"params":[{"name":"iter","type":{"k":12,"name":"Array","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"]}}],"type":{"k":5}}],"url":"/docs/v3.8.2/Seq.Keyed#isSuperset()","inherited":{"interface":"Iterable","label":"isSuperset()","url":"/docs/v3.8.2/Iterable#isSuperset()"}},"flip":{"name":"flip","label":"flip()","id":"flip()","group":"Sequence functions","doc":{"synopsis":"<p>Returns a new Iterable.Keyed of the same type where the keys and values\nhave been flipped.</p>\n","description":"<p><code class=\"codeBlock\"><span class=\"token function\">Seq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">'z'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token string\">'y'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">flip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// { z: 'a', y: 'b' }</span></code></p>\n","notes":[]},"signatures":[{"line":1438,"type":{"k":12,"name":"Iterable.Keyed","args":[{"k":11,"param":"V"},{"k":11,"param":"K"}],"url":"/docs/v3.8.2/Iterable.Keyed"}}],"url":"/docs/v3.8.2/Seq.Keyed#flip()","inherited":{"interface":"Iterable.Keyed","label":"flip()","url":"/docs/v3.8.2/Iterable.Keyed#flip()"}},"mapKeys":{"name":"mapKeys","label":"mapKeys()","id":"mapKeys()","group":"Sequence functions","doc":{"synopsis":"<p>Returns a new Iterable.Keyed of the same type with keys passed through\na <code><span class=\"t param\">mapper</span></code> function.</p>\n","description":"<p><code class=\"codeBlock\"><span class=\"token function\">Seq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">mapKeys</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Seq { A: 1, B: 2 }</span></code></p>\n","notes":[]},"signatures":[{"line":1449,"typeParams":["M"],"params":[{"name":"mapper","type":{"k":10,"params":[{"name":"key","type":"$7:props:def:interface:members:flip:signatures:0:type:args:1","optional":true},{"name":"value","type":"$7:props:def:interface:members:flip:signatures:0:type:args:0","optional":true},{"name":"iter","type":{"k":12,"name":"Iterable.Keyed","args":["$7:props:def:interface:members:flip:signatures:0:type:args:1","$7:props:def:interface:members:flip:signatures:0:type:args:0"]},"optional":true}],"type":{"k":11,"param":"M"}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Iterable.Keyed","args":[{"k":11,"param":"M"},"$7:props:def:interface:members:flip:signatures:0:type:args:0"],"url":"/docs/v3.8.2/Iterable.Keyed"}}],"url":"/docs/v3.8.2/Seq.Keyed#mapKeys()","inherited":{"interface":"Iterable.Keyed","label":"mapKeys()","url":"/docs/v3.8.2/Iterable.Keyed#mapKeys()"}},"mapEntries":{"name":"mapEntries","label":"mapEntries()","id":"mapEntries()","group":"Sequence functions","doc":{"synopsis":"<p>Returns a new Iterable.Keyed of the same type with entries\n([key, value] tuples) passed through a <code><span class=\"t param\">mapper</span></code> function.</p>\n","description":"$24","notes":[]},"signatures":[{"line":1463,"typeParams":["KM","VM"],"params":[{"name":"mapper","type":{"k":10,"params":[{"name":"entry","type":{"k":12,"name":"Array","args":[{"k":1}]},"optional":true},{"name":"index","type":{"k":6},"optional":true},{"name":"iter","type":{"k":12,"name":"Iterable.Keyed","args":["$7:props:def:interface:members:flip:signatures:0:type:args:1","$7:props:def:interface:members:flip:signatures:0:type:args:0"]},"optional":true}],"type":{"k":12,"name":"Array","args":[{"k":1}]}}},{"name":"context","type":{"k":1},"optional":true}],"type":{"k":12,"name":"Iterable.Keyed","args":[{"k":11,"param":"KM"},{"k":11,"param":"VM"}],"url":"/docs/v3.8.2/Iterable.Keyed"}}],"url":"/docs/v3.8.2/Seq.Keyed#mapEntries()","inherited":{"interface":"Iterable.Keyed","label":"mapEntries()","url":"/docs/v3.8.2/Iterable.Keyed#mapEntries()"}}},"line":1225,"typeParams":["K","V"],"extends":[{"k":12,"name":"Seq","args":["$7:props:def:interface:members:cacheResult:signatures:0:type:args:0","$7:props:def:interface:members:cacheResult:signatures:0:type:args:1"],"url":"/docs/v3.8.2/Seq"},{"k":12,"name":"Iterable.Keyed","args":["$7:props:def:interface:members:flip:signatures:0:type:args:1","$7:props:def:interface:members:flip:signatures:0:type:args:0"],"url":"/docs/v3.8.2/Iterable.Keyed"}]},"label":"Seq.Keyed","url":"/docs/v3.8.2/Seq.Keyed"},"sidebarLinks":[{"label":"fromJS()","url":"/docs/v3.8.2/fromJS()"},{"label":"is()","url":"/docs/v3.8.2/is()"},{"label":"List","url":"/docs/v3.8.2/List"},{"label":"Map","url":"/docs/v3.8.2/Map"},{"label":"OrderedMap","url":"/docs/v3.8.2/OrderedMap"},{"label":"Set","url":"/docs/v3.8.2/Set"},{"label":"OrderedSet","url":"/docs/v3.8.2/OrderedSet"},{"label":"Stack","url":"/docs/v3.8.2/Stack"},{"label":"Range()","url":"/docs/v3.8.2/Range()"},{"label":"Repeat()","url":"/docs/v3.8.2/Repeat()"},{"label":"Record()","url":"/docs/v3.8.2/Record()"},{"label":"Record.Class","url":"/docs/v3.8.2/Record.Class"},{"label":"Seq","url":"/docs/v3.8.2/Seq"},{"label":"Seq.Keyed","url":"/docs/v3.8.2/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v3.8.2/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v3.8.2/Seq.Set"},{"label":"Iterable","url":"/docs/v3.8.2/Iterable"},{"label":"Iterable.Keyed","url":"/docs/v3.8.2/Iterable.Keyed"},{"label":"Iterable.Indexed","url":"/docs/v3.8.2/Iterable.Indexed"},{"label":"Iterable.Set","url":"/docs/v3.8.2/Iterable.Set"},{"label":"Collection","url":"/docs/v3.8.2/Collection"},{"label":"Collection.Keyed","url":"/docs/v3.8.2/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v3.8.2/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v3.8.2/Collection.Set"}]}]
c:null
10:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
b:null
14:{"metadata":[["$","title","0",{"children":"Seq.Keyed — Immutable.js"}],["$","meta","1",{"name":"robots","content":"noindex, follow"}],["$","link","2",{"rel":"canonical","href":"/docs/v5/Seq.Keyed/"}],["$","link","3",{"rel":"icon","href":"/favicon.png"}]],"error":null,"digest":"$undefined"}
e:{"metadata":"$14:metadata","error":null,"digest":"$undefined"}
