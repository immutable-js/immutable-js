1:"$Sreact.fragment"
2:I[2708,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"WorkerContextProvider"]
3:I[4620,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
4:I[81105,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
5:I[86240,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/c63eea34c69bde5e.js"],"default"]
8:I[83822,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"MetadataBoundary"]
a:I[83822,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"OutletBoundary"]
d:I[2541,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"AsyncMetadataOutlet"]
f:I[83822,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"ViewportBoundary"]
11:I[12447,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
:HL["/_next/static/chunks/e4e9bf2592495c32.css","style"]
:HL["/_next/static/chunks/916b61d823ab5683.css","style"]
:HL["/_next/static/chunks/bcfc9332aea241e3.css","style"]
0:{"P":null,"b":"BuQbjvSNFfiqYuYGGUERX","p":"","c":["","docs","v5","Seq",""],"i":false,"f":[[["",{"children":["docs",{"children":["v5",{"children":[["type","Seq","d"],{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/e4e9bf2592495c32.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/1d2d43591a84e045.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/0f63189634a29548.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"pageBody","children":[["$","h2",null,{"children":"Not Found"}],["$","p",null,{"children":"Could not find requested resource"}],["$","$L5",null,{"href":"/","children":"Return Home"}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]]}],{"children":["docs",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["v5",["$","$1","c",{"children":[[["$","script","script-0",{"src":"/_next/static/chunks/1398221593ec8d74.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/cffb7d8f6d5ddd81.js","async":true,"nonce":"$undefined"}]],"$L6"]}],{"children":[["type","Seq","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7",["$","$L8",null,{"children":"$L9"}],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/916b61d823ab5683.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/chunks/bcfc9332aea241e3.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/6f266201d19c8fe9.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/8069937d345a5c75.js","async":true,"nonce":"$undefined"}],["$","script","script-2",{"src":"/_next/static/chunks/832a0e15f8dd8b54.js","async":true,"nonce":"$undefined"}]],["$","$La",null,{"children":["$Lb","$Lc",["$","$Ld",null,{"promise":"$@e"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","weE89z4t-JB8si7csklPA",{"children":[["$","$Lf",null,{"children":"$L10"}],null]}],null]}],false]],"m":"$undefined","G":["$11","$undefined"],"s":false,"S":true}
12:I[85995,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"ImmutableConsole"]
13:I[91842,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"HeaderLogoLink"]
14:I[91842,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"HeaderLinks"]
15:I[55958,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"default"]
16:"$Sreact.suspense"
17:I[2541,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"AsyncMetadata"]
6:["$","div",null,{"children":[["$","$L12",null,{"version":"v5"}],["$","div",null,{"className":"header","children":["$","div",null,{"className":"miniHeader","children":[["$","div",null,{"className":"miniHeaderContents","children":[["$","$L13",null,{}],["$","$L14",null,{"versions":["v5","v4.3.7","v3.8.2"],"currentVersion":"v5"}]]}],["$","$L15",null,{}]]}]}],["$","div",null,{"className":"pageBody","children":["$","div",null,{"className":"contents","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]
9:["$","$16",null,{"fallback":null,"children":["$","$L17",null,{"promise":"$@18"}]}]
c:null
10:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
b:null
18:{"metadata":[["$","title","0",{"children":"Seq â€” Immutable.js"}],["$","link","1",{"rel":"icon","href":"/favicon.png"}]],"error":null,"digest":"$undefined"}
e:{"metadata":"$18:metadata","error":null,"digest":"$undefined"}
19:I[26602,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js","/_next/static/chunks/6f266201d19c8fe9.js","/_next/static/chunks/8069937d345a5c75.js","/_next/static/chunks/832a0e15f8dd8b54.js"],"default"]
1a:I[75543,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js","/_next/static/chunks/6f266201d19c8fe9.js","/_next/static/chunks/8069937d345a5c75.js","/_next/static/chunks/832a0e15f8dd8b54.js"],"DocSearch"]
1d:I[56123,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js","/_next/static/chunks/6f266201d19c8fe9.js","/_next/static/chunks/8069937d345a5c75.js","/_next/static/chunks/832a0e15f8dd8b54.js"],"default"]
1b:T7e6,<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token qualifier">Seq</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'immutable'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> oddSquares <span class="token operator">=</span> <span class="token function">Seq</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span> x <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>1c:T531,<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token qualifier">Map</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'immutable'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> lazySeq <span class="token operator">=</span> <span class="token function">Seq</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>1e:T118b,<span class="token block-keyword">function</span> <span class="token generic-function"><span class="token function">Seq</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">S</span> <span class="token keyword">extends</span> <span class="token qualifier">Seq</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>seq<span class="token operator">:</span> <span class="token constant">S</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">S</span><span class="token punctuation">;</span>
<span class="token block-keyword">function</span> <span class="token function">Seq</span><span class="token punctuation">(</span>collection<span class="token operator">:</span> <span class="token qualifier">Collection</span><span class="token punctuation">.</span><span class="token qualifier">Keyed</span><span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Seq</span><span class="token punctuation">.</span><span class="token qualifier">Keyed</span><span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">></span><span class="token punctuation">;</span>
<span class="token block-keyword">function</span> <span class="token function">Seq</span><span class="token punctuation">(</span>collection<span class="token operator">:</span> <span class="token qualifier">Collection</span><span class="token punctuation">.</span><span class="token qualifier">Set</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Seq</span><span class="token punctuation">.</span><span class="token qualifier">Set</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">;</span>
<span class="token block-keyword">function</span> <span class="token function">Seq</span><span class="token punctuation">(</span>collection<span class="token operator">:</span> <span class="token qualifier">Collection</span><span class="token punctuation">.</span><span class="token qualifier">Indexed</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span> <span class="token operator">|</span> <span class="token qualifier">Iterable</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span> <span class="token operator">|</span> <span class="token qualifier">Array</span><span class="token qualifier">Like</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Seq</span><span class="token punctuation">.</span><span class="token qualifier">Indexed</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">;</span>
<span class="token block-keyword">function</span> <span class="token function">Seq</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">V</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Seq</span><span class="token punctuation">.</span><span class="token qualifier">Keyed</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">></span><span class="token punctuation">;</span>1f:T503,<span class="token keyword">var</span> squares <span class="token operator">=</span> <span class="token function">Seq</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span> x <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
squares<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> squares<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>20:T5b0,<span class="token keyword">var</span> squares <span class="token operator">=</span> <span class="token function">Seq</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span> x <span class="token operator">*</span> x<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">cacheResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
squares<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> squares<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>21:T55a,<span class="token generic-function"><span class="token function">map</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">mapper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">M</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Seq</span><span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">M</span><span class="token operator">></span><span class="token punctuation">;</span>22:T5d8,<span class="token generic-function"><span class="token function">flatMap</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">mapper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token qualifier">Iterable</span><span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">></span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Seq</span><span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">M</span><span class="token operator">></span><span class="token punctuation">;</span>23:T6d5,<span class="token generic-function"><span class="token function">partition</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">F</span> <span class="token keyword">extends</span> <span class="token constant">V</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>
  <span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token var">this</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token punctuation">)</span> <span class="token operator">=></span> value <span class="token keyword">is</span> <span class="token constant">F</span><span class="token punctuation">,</span>
  context
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token qualifier">Seq</span><span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token qualifier">Seq</span><span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">F</span><span class="token operator">></span><span class="token punctuation">]</span><span class="token punctuation">;</span>24:T521,<span class="token generic-function"><span class="token function">sortBy</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">comparatorValueMapper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">C</span><span class="token punctuation">,</span> comparator<span class="token operator">?</span><span class="token operator">:</span> <span class="token qualifier">Comparator</span><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">;</span>25:T53b,<span class="token generic-function"><span class="token function">groupBy</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">G</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>
  <span class="token function-variable function">grouper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">G</span><span class="token punctuation">,</span>
  context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Map</span><span class="token operator">&lt;</span><span class="token constant">G</span><span class="token punctuation">,</span> <span class="token var">this</span><span class="token operator">></span>26:T9b3,<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token qualifier">Seq</span><span class="token punctuation">,</span> <span class="token qualifier">Set</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'immutable'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">Seq</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token function">Seq</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
assert<span class="token punctuation">.</span><span class="token function">notStrictEqual</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// different instances</span>
<span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token function">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
assert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>set<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token primitive">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>27:T8c9,<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token qualifier">Seq</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'immutable'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> indexedSeq <span class="token operator">=</span> <span class="token function">Seq</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Seq [ "A", "B", "C" ]</span>
indexedSeq<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=></span> v <span class="token operator">===</span> <span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Seq [ "B" ]</span>
<span class="token keyword">const</span> keyedSeq <span class="token operator">=</span> indexedSeq<span class="token punctuation">.</span><span class="token function">toKeyedSeq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Seq { 0: "A", 1: "B", 2: "C" }</span>
keyedSeq<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=></span> v <span class="token operator">===</span> <span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Seq { 1: "B" }</span>28:T563,<span class="token generic-function"><span class="token function">countBy</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">G</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">grouper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">G</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Map</span><span class="token operator">&lt;</span><span class="token constant">G</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">></span><span class="token punctuation">;</span>29:T4d5,<span class="token function">find</span><span class="token punctuation">(</span>
  <span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  notSetValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">V</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">V</span> <span class="token operator">|</span> <span class="token primitive">undefined</span><span class="token punctuation">;</span>2a:T4d9,<span class="token function">findLast</span><span class="token punctuation">(</span>
  <span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  notSetValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">V</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">V</span> <span class="token operator">|</span> <span class="token primitive">undefined</span><span class="token punctuation">;</span>2b:T578,<span class="token function">findEntry</span><span class="token punctuation">(</span>
  <span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  notSetValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">V</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token primitive">undefined</span><span class="token punctuation">;</span>2c:T57c,<span class="token function">findLastEntry</span><span class="token punctuation">(</span>
  <span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  notSetValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">V</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token primitive">undefined</span><span class="token punctuation">;</span>2d:T432,<span class="token function">findKey</span><span class="token punctuation">(</span>
  <span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">K</span> <span class="token operator">|</span> <span class="token primitive">undefined</span><span class="token punctuation">;</span>2e:T436,<span class="token function">findLastKey</span><span class="token punctuation">(</span>
  <span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">K</span> <span class="token operator">|</span> <span class="token primitive">undefined</span><span class="token punctuation">;</span>2f:T57d,<span class="token generic-function"><span class="token function">maxBy</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>
  <span class="token function-variable function">comparatorValueMapper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">C</span><span class="token punctuation">,</span>
  comparator<span class="token operator">?</span><span class="token operator">:</span> <span class="token qualifier">Comparator</span><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">V</span> <span class="token operator">|</span> <span class="token primitive">undefined</span><span class="token punctuation">;</span>30:T57d,<span class="token generic-function"><span class="token function">minBy</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>
  <span class="token function-variable function">comparatorValueMapper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">C</span><span class="token punctuation">,</span>
  comparator<span class="token operator">?</span><span class="token operator">:</span> <span class="token qualifier">Comparator</span><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">V</span> <span class="token operator">|</span> <span class="token primitive">undefined</span><span class="token punctuation">;</span>7:["$","div",null,{"className":"contents","children":[["$","$L19",null,{"focus":[{"qualifiedName":"Construction","label":"Construction","functions":{"Seq()":{"label":"Seq()","url":"#Seq()"}}},{"qualifiedName":"Static methods","label":"Static methods","functions":{"isSeq()":{"label":"isSeq()","url":"#isSeq()"}}},{"qualifiedName":"Members","label":"Members","functions":{"size":{"label":"size","url":"#size"}}},{"qualifiedName":"Force evaluation","label":"Force evaluation","functions":{"cacheResult()":{"label":"cacheResult()","url":"#cacheResult()"}}},{"qualifiedName":"Sequence algorithms","label":"Sequence algorithms","functions":{"map()":{"label":"map()","url":"#map()"},"flatMap()":{"label":"flatMap()","url":"#flatMap()"},"filter()":{"label":"filter()","url":"#filter()"},"partition()":{"label":"partition()","url":"#partition()"},"concat()":{"label":"concat()","url":"#concat()"},"filterNot()":{"label":"filterNot()","url":"#filterNot()"},"reverse()":{"label":"reverse()","url":"#reverse()"},"sort()":{"label":"sort()","url":"#sort()"},"sortBy()":{"label":"sortBy()","url":"#sortBy()"},"groupBy()":{"label":"groupBy()","url":"#groupBy()"}}},{"qualifiedName":"Value equality","label":"Value equality","functions":{"equals()":{"label":"equals()","url":"#equals()"},"hashCode()":{"label":"hashCode()","url":"#hashCode()"}}},{"qualifiedName":"Reading values","label":"Reading values","functions":{"get()":{"label":"get()","url":"#get()"},"has()":{"label":"has()","url":"#has()"},"includes()":{"label":"includes()","url":"#includes()"},"first()":{"label":"first()","url":"#first()"},"last()":{"label":"last()","url":"#last()"}}},{"qualifiedName":"Reading deep values","label":"Reading deep values","functions":{"getIn()":{"label":"getIn()","url":"#getIn()"},"hasIn()":{"label":"hasIn()","url":"#hasIn()"}}},{"qualifiedName":"Persistent changes","label":"Persistent changes","functions":{"update()":{"label":"update()","url":"#update()"}}},{"qualifiedName":"Conversion to JavaScript types","label":"Conversion to JavaScript types","functions":{"toJS()":{"label":"toJS()","url":"#toJS()"},"toJSON()":{"label":"toJSON()","url":"#toJSON()"},"toArray()":{"label":"toArray()","url":"#toArray()"},"toObject()":{"label":"toObject()","url":"#toObject()"}}},{"qualifiedName":"Conversion to Collections","label":"Conversion to Collections","functions":{"toMap()":{"label":"toMap()","url":"#toMap()"},"toOrderedMap()":{"label":"toOrderedMap()","url":"#toOrderedMap()"},"toSet()":{"label":"toSet()","url":"#toSet()"},"toOrderedSet()":{"label":"toOrderedSet()","url":"#toOrderedSet()"},"toList()":{"label":"toList()","url":"#toList()"},"toStack()":{"label":"toStack()","url":"#toStack()"}}},{"qualifiedName":"Conversion to Seq","label":"Conversion to Seq","functions":{"toSeq()":{"label":"toSeq()","url":"#toSeq()"},"toKeyedSeq()":{"label":"toKeyedSeq()","url":"#toKeyedSeq()"},"toIndexedSeq()":{"label":"toIndexedSeq()","url":"#toIndexedSeq()"},"toSetSeq()":{"label":"toSetSeq()","url":"#toSetSeq()"}}},{"qualifiedName":"Iterators","label":"Iterators","functions":{"keys()":{"label":"keys()","url":"#keys()"},"values()":{"label":"values()","url":"#values()"},"entries()":{"label":"entries()","url":"#entries()"}}},{"qualifiedName":"Collections (Seq)","label":"Collections (Seq)","functions":{"keySeq()":{"label":"keySeq()","url":"#keySeq()"},"valueSeq()":{"label":"valueSeq()","url":"#valueSeq()"},"entrySeq()":{"label":"entrySeq()","url":"#entrySeq()"}}},{"qualifiedName":"Side effects","label":"Side effects","functions":{"forEach()":{"label":"forEach()","url":"#forEach()"}}},{"qualifiedName":"Creating subsets","label":"Creating subsets","functions":{"slice()":{"label":"slice()","url":"#slice()"},"rest()":{"label":"rest()","url":"#rest()"},"butLast()":{"label":"butLast()","url":"#butLast()"},"skip()":{"label":"skip()","url":"#skip()"},"skipLast()":{"label":"skipLast()","url":"#skipLast()"},"skipWhile()":{"label":"skipWhile()","url":"#skipWhile()"},"skipUntil()":{"label":"skipUntil()","url":"#skipUntil()"},"take()":{"label":"take()","url":"#take()"},"takeLast()":{"label":"takeLast()","url":"#takeLast()"},"takeWhile()":{"label":"takeWhile()","url":"#takeWhile()"},"takeUntil()":{"label":"takeUntil()","url":"#takeUntil()"}}},{"qualifiedName":"Combination","label":"Combination","functions":{"flatten()":{"label":"flatten()","url":"#flatten()"},"reduce()":{"label":"reduce()","url":"#reduce()"},"reduceRight()":{"label":"reduceRight()","url":"#reduceRight()"},"every()":{"label":"every()","url":"#every()"},"some()":{"label":"some()","url":"#some()"},"join()":{"label":"join()","url":"#join()"},"isEmpty()":{"label":"isEmpty()","url":"#isEmpty()"},"count()":{"label":"count()","url":"#count()"},"countBy()":{"label":"countBy()","url":"#countBy()"}}},{"qualifiedName":"Search for value","label":"Search for value","functions":{"find()":{"label":"find()","url":"#find()"},"findLast()":{"label":"findLast()","url":"#findLast()"},"findEntry()":{"label":"findEntry()","url":"#findEntry()"},"findLastEntry()":{"label":"findLastEntry()","url":"#findLastEntry()"},"findKey()":{"label":"findKey()","url":"#findKey()"},"findLastKey()":{"label":"findLastKey()","url":"#findLastKey()"},"keyOf()":{"label":"keyOf()","url":"#keyOf()"},"lastKeyOf()":{"label":"lastKeyOf()","url":"#lastKeyOf()"},"max()":{"label":"max()","url":"#max()"},"maxBy()":{"label":"maxBy()","url":"#maxBy()"},"min()":{"label":"min()","url":"#min()"},"minBy()":{"label":"minBy()","url":"#minBy()"}}},{"qualifiedName":"Comparison","label":"Comparison","functions":{"isSubset()":{"label":"isSubset()","url":"#isSubset()"},"isSuperset()":{"label":"isSuperset()","url":"#isSuperset()"}}}],"activeType":"Seq"}],["$","div",null,{"className":"docContents","children":[["$","$L1a",null,{}],[["$","h1",null,{"children":"Seq"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Seq"}]," describes a lazy operation, allowing them to efficiently chain\nuse of all the higher-order collection methods (such as ",["$","a",null,{"href":"#map","children":["$","code",null,{"children":"map"}]}]," and ",["$","a",null,{"href":"#filter","children":["$","code",null,{"children":"filter"}]}],")\nby not creating intermediate collections."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token qualifier\">Seq</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">V</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\"><span class=\"token qualifier\">Collection</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">V</span><span class=\"token operator\">></span></span>"}}]}]]}],"\n",["$","p",null,{"children":[["$","strong",null,{"children":"Seq is immutable"}]," â€” Once a Seq is created, it cannot be\nchanged, appended to, rearranged or otherwise modified. Instead, any\nmutative method called on a ",["$","code",null,{"children":"Seq"}]," will return a new ",["$","code",null,{"children":"Seq"}],"."]}],"\n",["$","p",null,{"children":[["$","strong",null,{"children":"Seq is lazy"}]," â€” ",["$","code",null,{"children":"Seq"}]," does as little work as necessary to respond to any\nmethod call. Values are often created during iteration, including implicit\niteration when reducing or converting to a concrete data structure such as\na ",["$","a",null,{"href":"../List","children":["$","code",null,{"children":"List"}]}]," or JavaScript ",["$","a",null,{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array","children":["$","code",null,{"children":"Array"}]}],"."]}],"\n",["$","p",null,{"children":["For example, the following performs no work, because the resulting\n",["$","code",null,{"children":"Seq"}],"'s values are never iterated:"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"$1b"}}]}],"\n",["$","p",null,{"children":["Once the ",["$","code",null,{"children":"Seq"}]," is used, it performs only the work necessary. In this\nexample, no intermediate arrays are ever created, filter is called three\ntimes, and map is only called once:"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"oddSquares<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 9</span>"}}]}],"\n",["$","p",null,{"children":["Any collection can be converted to a lazy Seq with ",["$","code",null,{"children":"Seq()"}],"."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"$1c"}}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Seq"}]," allows for the efficient chaining of operations, allowing for the\nexpression of logic that can otherwise be very tedious:"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"lazySeq\n  <span class=\"token punctuation\">.</span><span class=\"token function\">flip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> key<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">flip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Seq { A: 1, B: 1, C: 1 }</span>"}}]}],"\n",["$","p",null,{"children":["As well as expressing logic that would otherwise seem memory or time\nlimited, for example ",["$","code",null,{"children":"Range"}]," is a special kind of Lazy sequence."]}],"\n",["$","$L1d",null,{"defaultValue":"Range(1, Infinity)\n.skip(1000)\n.map((n) => -n)\n.filter((n) => n % 2 === 0)\n.take(2)\n.reduce((r, n) => r * n, 1);\n"}],"\n",["$","p",null,{"children":"Seq is often used to provide a rich collection API to JavaScript Object."}],"\n",["$","$L1d",null,{"defaultValue":"Seq({ x: 0, y: 1, z: 2 })\n.map((v) => v * 2)\n.toObject();"}],"\n",["$","h2",null,{"children":"Construction"}],"\n",["$","div",null,{"id":"Seq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#Seq()","children":["Seq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Creates a Seq."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$1e"}}]}]]}],"\n",["$","p",null,{"children":["Returns a particular kind of ",["$","code",null,{"children":"Seq"}]," based on the input."]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["If a ",["$","code",null,{"children":"Seq"}],", that same ",["$","code",null,{"children":"Seq"}],"."]}],"\n",["$","li",null,{"children":["If an ",["$","code",null,{"children":"Collection"}],", a ",["$","code",null,{"children":"Seq"}]," of the same kind (Keyed, Indexed, or Set)."]}],"\n",["$","li",null,{"children":["If an Array-like, an ",["$","code",null,{"children":"Seq.Indexed"}],"."]}],"\n",["$","li",null,{"children":["If an Iterable Object, an ",["$","code",null,{"children":"Seq.Indexed"}],"."]}],"\n",["$","li",null,{"children":["If an Object, a ",["$","code",null,{"children":"Seq.Keyed"}],"."]}],"\n"]}],"\n",["$","p",null,{"children":["Note: An Iterator itself will be treated as an object, becoming a ",["$","code",null,{"children":"Seq.Keyed"}],",\nwhich is usually not what you want. You should turn your Iterator Object into\nan iterable object by defining a Symbol.iterator (or @@iterator) method which\nreturns ",["$","code",null,{"children":"this"}],"."]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"Seq"}]," is a conversion function and not a class, and does not use the\n",["$","code",null,{"children":"new"}]," keyword during construction."]}],"\n",["$","h2",null,{"children":"Static methods"}],"\n",["$","div",null,{"id":"isSeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#isSeq()","children":["isSeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token block-keyword\">function</span> <span class=\"token function\">isSeq</span><span class=\"token punctuation\">(</span>maybeSeq<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> maybeSeq <span class=\"token keyword\">is</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Indexed</span> <span class=\"token operator\">|</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Keyed</span> <span class=\"token operator\">|</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Set</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Members"}],"\n",["$","div",null,{"id":"size","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#size","children":["size",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Some Seqs can describe their size lazily. When this is the case,\nsize will be an integer. Otherwise it will be undefined."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">readonly</span> size<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["For example, Seqs returned from ",["$","a",null,{"href":"#map","children":["$","code",null,{"children":"map"}]}]," or ",["$","a",null,{"href":"#reverse","children":["$","code",null,{"children":"reverse"}]}],"\npreserve the size of the original ",["$","code",null,{"children":"Seq"}]," while ",["$","a",null,{"href":"#filter","children":["$","code",null,{"children":"filter"}]}]," does not."]}],"\n",["$","p",null,{"children":["Note: ",["$","a",null,{"href":"../Range()","children":["$","code",null,{"children":"Range()"}]}],","]}],"\n",["$","p",null,{"children":[["$","a",null,{"href":"../Repeat()","children":["$","code",null,{"children":"Repeat()"}]}]," and ",["$","code",null,{"children":"Seq"}],"s made from\n",["$","a",null,{"href":"../List","children":["$","code",null,{"children":"List"}]}],"s and ",["$","a",null,{"href":"../Map","children":["$","code",null,{"children":"Map"}]}],"s will always have a\nsize."]}],"\n",["$","h2",null,{"children":"Force evaluation"}],"\n",["$","div",null,{"id":"cacheResult()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#cacheResult()","children":["cacheResult()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Because Sequences are lazy and designed to be chained together, they do\nnot cache their results. For example, this ",["$","a",null,{"href":"#map","children":["$","code",null,{"children":"map"}]}]," function is called a total\nof 6 times, as each ",["$","code",null,{"children":"join"}]," iterates the ",["$","code",null,{"children":"Seq"}]," of three values."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">cacheResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"$1f"}}]}],"\n",["$","p",null,{"children":["If you know a ",["$","code",null,{"children":"Seq"}]," will be used multiple times, it may be more\nefficient to first cache it in memory. Here, the ",["$","a",null,{"href":"#map","children":["$","code",null,{"children":"map"}]}]," function is called\nonly 3 times."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"$20"}}]}],"\n",["$","p",null,{"children":["Use this method judiciously, as it must fully evaluate a ",["$","code",null,{"children":"Seq"}]," which can be\na burden on memory and possibly performance."]}],"\n",["$","p",null,{"children":["Note: after calling ",["$","a",null,{"href":"#cacheResult","children":["$","code",null,{"children":"cacheResult"}]}],", a ",["$","code",null,{"children":"Seq"}]," will always have a ",["$","code",null,{"children":"size"}],"."]}],"\n",["$","h2",null,{"children":"Sequence algorithms"}],"\n",["$","div",null,{"id":"map()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#map()","children":["map()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new ",["$","code",null,{"children":"Seq"}]," with values passed through a\n",["$","code",null,{"children":"mapper"}]," function."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$21"}}]}]]}],"\n",["$","$L1d",null,{"defaultValue":"Seq([1, 2]).map((x) => 10 * x);"}],"\n",["$","p",null,{"children":["Note: ",["$","a",null,{"href":"#map","children":["$","code",null,{"children":"map"}]}]," always returns a new instance, even if it produced the same\nvalue at every step.\nNote: used only for sets."]}],"\n",["$","div",null,{"id":"flatMap()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#flatMap()","children":["flatMap()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Flat-maps the ",["$","code",null,{"children":"Seq"}],", returning a ",["$","code",null,{"children":"Seq"}]," of the same type."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$22"}}]}]]}],"\n",["$","p",null,{"children":["Similar to ",["$","a",null,{"href":"#map","children":["$","code",null,{"children":"map"}]}],"(...).",["$","a",null,{"href":"#flatten","children":["$","code",null,{"children":"flatten"}]}],"(true)."]}],"\n",["$","p",null,{"children":"Note: Used only for sets."}],"\n",["$","div",null,{"id":"filter()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#filter()","children":["filter()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new ",["$","code",null,{"children":"Seq"}]," with only the values for which the ",["$","code",null,{"children":"predicate"}],"\nfunction returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","a",null,{"href":"#filter","children":["$","code",null,{"children":"filter"}]}]," always returns a new instance, even if it results in\nnot filtering out any values."]}],"\n",["$","div",null,{"id":"partition()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#partition()","children":["partition()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new ",["$","code",null,{"children":"Seq"}]," with the values for which the ",["$","code",null,{"children":"predicate"}]," function returns false and another for which is returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$23"}}]}]]}],"\n",["$","div",null,{"id":"concat()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#concat()","children":["concat()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new ",["$","code",null,{"children":"Seq"}]," of the same type with other values and collection-like concatenated to this one."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>valuesOrCollections<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["All entries will be present in the resulting ",["$","code",null,{"children":"Seq"}],", even if they have the same key."]}],"\n",["$","div",null,{"id":"filterNot()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#filterNot()","children":["filterNot()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Collection of the same type with only the entries for which the ",["$","code",null,{"children":"predicate"}]," function returns false."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">filterNot</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"filterNot()"}]," always returns a new instance, even if it results in not filtering out any values."]}],"\n",["$","div",null,{"id":"reverse()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#reverse()","children":["reverse()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Collection of the same type in reverse order."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"sort()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#sort()","children":["sort()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Collection of the same type which includes the same entries, stably sorted by using a ",["$","code",null,{"children":"comparator"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>comparator<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Comparator</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["If a ",["$","code",null,{"children":"comparator"}]," is not provided, a default comparator uses ",["$","code",null,{"children":"<"}]," and ",["$","code",null,{"children":">"}],"."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"comparator(valueA, valueB)"}],":"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Returns ",["$","code",null,{"children":"0"}]," if the elements should not be swapped."]}],"\n",["$","li",null,{"children":["Returns ",["$","code",null,{"children":"-1"}]," (or any negative number) if ",["$","code",null,{"children":"valueA"}]," comes before ",["$","code",null,{"children":"valueB"}]]}],"\n",["$","li",null,{"children":["Returns ",["$","code",null,{"children":"1"}]," (or any positive number) if ",["$","code",null,{"children":"valueA"}]," comes after ",["$","code",null,{"children":"valueB"}]]}],"\n",["$","li",null,{"children":["Alternatively, can return a value of the ",["$","code",null,{"children":"PairSorting"}]," enum type"]}],"\n",["$","li",null,{"children":"Is pure, i.e. it must always return the same value for the same pair of values."}],"\n"]}],"\n",["$","p",null,{"children":["When sorting collections which have no defined order, their ordered equivalents will be returned. e.g. ",["$","code",null,{"children":"map.sort()"}]," returns OrderedMap."]}],"\n",["$","$L1d",null,{"defaultValue":"Seq({ c: 3, a: 1, b: 2 }).sort((a, b) => {\nif (a < b) {\n  return -1;\n}\nif (a > b) {\n  return 1;\n}\nif (a === b) {\n  return 0;\n}\n});"}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"sort()"}]," Always returns a new instance, even if the original was already sorted."]}],"\n",["$","p",null,{"children":"Note: This is always an eager operation."}],"\n",["$","div",null,{"id":"sortBy()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#sortBy()","children":["sortBy()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Like ",["$","code",null,{"children":"sort"}],", but also accepts a ",["$","code",null,{"children":"comparatorValueMapper"}]," which allows for sorting by more sophisticated means."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$24"}}]}]]}],"\n",["$","$L1d",null,{"defaultValue":"const beattles = Seq({\nJohn: { name: \"Lennon\" },\nPaul: { name: \"McCartney\" },\nGeorge: { name: \"Harrison\" },\nRingo: { name: \"Starr\" },\n});\nbeattles.sortBy(member => member.name);\n"}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"sortBy()"}]," Always returns a new instance, even if the original was\nalready sorted."]}],"\n",["$","p",null,{"children":"Note: This is always an eager operation."}],"\n",["$","div",null,{"id":"groupBy()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#groupBy()","children":["groupBy()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a ",["$","code",null,{"children":"Map"}]," of ",["$","code",null,{"children":"Collection"}],", grouped by the return value of the ",["$","code",null,{"children":"grouper"}]," function."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$25"}}]}]]}],"\n",["$","p",null,{"children":"Note: This is always an eager operation."}],"\n",["$","$L1d",null,{"defaultValue":"const seqOfMaps = Seq([\nMap({ v: 0 }),\nMap({ v: 1 }),\nMap({ v: 1 }),\nMap({ v: 0 }),\nMap({ v: 2 })\n])\nseqOfMaps.groupBy(x => x.get('v'))"}],"\n",["$","h2",null,{"children":"Value equality"}],"\n",["$","div",null,{"id":"equals()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#equals()","children":["equals()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if this and the other Collection have value equality, as defined by ",["$","code",null,{"children":"Immutable.is()"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>other<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: This is equivalent to ",["$","code",null,{"children":"Immutable.is(this, other)"}],", but provided to allow for chained expressions."]}],"\n",["$","div",null,{"id":"hashCode()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#hashCode()","children":["hashCode()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Computes and returns the hashed identity for this Collection."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["The ",["$","code",null,{"children":"hashCode"}]," of a Collection is used to determine potential equality, and is used when adding this to a ",["$","code",null,{"children":"Set"}]," or as a key in a ",["$","code",null,{"children":"Map"}],", enabling lookup via a different instance."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"$26"}}]}],"\n",["$","p",null,{"children":["Note: hashCode() MUST return a Uint32 number. The easiest way to guarantee this is to return ",["$","code",null,{"children":"myHash | 0"}]," from a custom implementation.\nIf two values have the same ",["$","code",null,{"children":"hashCode"}],", they are ",["$","a",null,{"href":"https://en.wikipedia.org/wiki/Collision_(computer_science)","children":"not guaranteed to be equal"}],". If two values have different ",["$","code",null,{"children":"hashCode"}],"s, they must not be equal."]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"hashCode()"}]," is not guaranteed to always be called before ",["$","code",null,{"children":"equals()"}],". Most but not all Immutable.js collections use hash codes to organize their internal data structures, while all Immutable.js collections use equality during lookups."]}],"\n",["$","h2",null,{"children":"Reading values"}],"\n",["$","div",null,{"id":"get()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#get()","children":["get()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the value associated with the provided key, or notSetValue if the Collection does not contain this key."}],"\n",["$","p",null,{"children":["Note: it is possible a key may be associated with an ",["$","code",null,{"children":"undefined"}]," value, so if ",["$","code",null,{"children":"notSetValue"}]," is not provided and this method returns ",["$","code",null,{"children":"undefined"}],", that does not guarantee the key was not found."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">NSV</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> notSetValue<span class=\"token operator\">:</span> <span class=\"token constant\">NSV</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">V</span> <span class=\"token operator\">|</span> <span class=\"token constant\">NSV</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">V</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"has()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#has()","children":["has()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if a key exists within this ",["$","code",null,{"children":"Collection"}],", using ",["$","code",null,{"children":"Immutable.is"}]," to determine equality."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">has</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"includes()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#includes()","children":["includes()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if a value exists within this ",["$","code",null,{"children":"Collection"}],", using ",["$","code",null,{"children":"Immutable.is"}]," to determine equality."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"first()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#first()","children":["first()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["In case the ",["$","code",null,{"children":"Collection"}]," is not empty returns the first element of the ",["$","code",null,{"children":"Collection"}],". In case the ",["$","code",null,{"children":"Collection"}]," is empty returns the optional default value if provided, if no default value is provided returns undefined."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token generic-function\"><span class=\"token function\">first</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">NSV</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>notSetValue<span class=\"token operator\">:</span> <span class=\"token constant\">NSV</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">V</span> <span class=\"token operator\">|</span> <span class=\"token constant\">NSV</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">V</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"last()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#last()","children":["last()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["In case the ",["$","code",null,{"children":"Collection"}]," is not empty returns the last element of the ",["$","code",null,{"children":"Collection"}],". In case the ",["$","code",null,{"children":"Collection"}]," is empty returns the optional default value if provided, if no default value is provided returns undefined."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token generic-function\"><span class=\"token function\">last</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">NSV</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>notSetValue<span class=\"token operator\">:</span> <span class=\"token constant\">NSV</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">V</span> <span class=\"token operator\">|</span> <span class=\"token constant\">NSV</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">last</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">V</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Reading deep values"}],"\n",["$","div",null,{"id":"getIn()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#getIn()","children":["getIn()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the value found by following a path of keys or indices through nested Collections."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">getIn</span><span class=\"token punctuation\">(</span>searchKeyPath<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">unknown</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> notSetValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","$L1d",null,{"defaultValue":"const deepData = Seq({ x: Seq([ Seq({ y: 123 }) ]) });\ndeepData.getIn(['x', 0, 'y'])"}],"\n",["$","p",null,{"children":"Plain JavaScript Object or Arrays may be nested within an Immutable.js Collection, and getIn() can access those values as well:"}],"\n",["$","$L1d",null,{"defaultValue":"const deepData = Seq({ x: [ { y: 123 } ] });\ndeepData.getIn(['x', 0, 'y'])"}],"\n",["$","div",null,{"id":"hasIn()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#hasIn()","children":["hasIn()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"True if the result of following a path of keys or indices through nested Collections results in a set value."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">hasIn</span><span class=\"token punctuation\">(</span>searchKeyPath<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">unknown</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Persistent changes"}],"\n",["$","div",null,{"id":"update()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#update()","children":["update()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"This can be very useful as a way to \"chain\" a normal function into a sequence of methods. RxJS calls this \"let\" and lodash calls it \"thru\"."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token generic-function\"><span class=\"token function\">update</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">R</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">updater</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">R</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":"For example, to sum a Seq after mapping and filtering:"}],"\n",["$","$L1d",null,{"defaultValue":"function sum(collection) {\nreturn collection.reduce((sum, x) => sum + x, 0);\n}\nSeq([1, 2, 3])\n.map((x) => x + 1)\n.filter((x) => x % 2 === 0)\n.update(sum);"}],"\n",["$","h2",null,{"children":"Conversion to JavaScript types"}],"\n",["$","div",null,{"id":"toJS()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toJS()","children":["toJS()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Deeply converts this Seq to equivalent native JavaScript Array or Object."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token constant\">V</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Collection.Indexed"}],", and ",["$","code",null,{"children":"Collection.Set"}]," become ",["$","code",null,{"children":"Array"}],", while ",["$","code",null,{"children":"Collection.Keyed"}]," become ",["$","code",null,{"children":"Object"}],", converting keys to Strings."]}],"\n",["$","div",null,{"id":"toJSON()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toJSON()","children":["toJSON()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Shallowly converts this Seq to equivalent native JavaScript Array or Object."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token constant\">V</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Collection.Indexed"}],", and ",["$","code",null,{"children":"Collection.Set"}]," become ",["$","code",null,{"children":"Array"}],", while ",["$","code",null,{"children":"Collection.Keyed"}]," become ",["$","code",null,{"children":"Object"}],", converting keys to Strings."]}],"\n",["$","div",null,{"id":"toArray()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toArray()","children":["toArray()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Shallowly converts this collection to an Array."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Collection.Indexed"}],", and ",["$","code",null,{"children":"Collection.Set"}]," produce an Array of values. ",["$","code",null,{"children":"Collection.Keyed"}]," produce an Array of [key, value] tuples."]}],"\n",["$","div",null,{"id":"toObject()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toObject()","children":["toObject()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Shallowly converts this Collection to an Object."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token constant\">V</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":"Converts keys to Strings."}],"\n",["$","h2",null,{"children":"Conversion to Collections"}],"\n",["$","div",null,{"id":"toMap()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toMap()","children":["toMap()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Converts this Collection to a Map, Throws if keys are not hashable."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Map</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: This is equivalent to ",["$","code",null,{"children":"Map(this.toKeyedSeq())"}],", but provided for convenience and to allow for chained expressions."]}],"\n",["$","div",null,{"id":"toOrderedMap()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toOrderedMap()","children":["toOrderedMap()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Converts this Collection to a Map, maintaining the order of iteration."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toOrderedMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Ordered</span><span class=\"token qualifier\">Map</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: This is equivalent to ",["$","code",null,{"children":"OrderedMap(this.toKeyedSeq())"}],", but provided for convenience and to allow for chained expressions."]}],"\n",["$","div",null,{"id":"toSet()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toSet()","children":["toSet()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Converts this Collection to a Set, discarding keys. Throws if values are not hashable."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Set</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: This is equivalent to ",["$","code",null,{"children":"Set(this)"}],", but provided to allow for chained expressions."]}],"\n",["$","div",null,{"id":"toOrderedSet()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toOrderedSet()","children":["toOrderedSet()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Converts this Collection to a Set, maintaining the order of iteration and discarding keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toOrderedSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Ordered</span><span class=\"token qualifier\">Set</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: This is equivalent to ",["$","code",null,{"children":"OrderedSet(this.valueSeq())"}],", but provided for convenience and to allow for chained expressions."]}],"\n",["$","div",null,{"id":"toList()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toList()","children":["toList()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Converts this Collection to a List, discarding keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">List</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["This is similar to ",["$","code",null,{"children":"List(collection)"}],", but provided to allow for chained\nexpressions. However, when called on ",["$","code",null,{"children":"Map"}]," or other keyed collections,\n",["$","code",null,{"children":"collection.toList()"}]," discards the keys and creates a list of only the\nvalues, whereas ",["$","code",null,{"children":"List(collection)"}]," creates a list of entry tuples."]}],"\n",["$","$L1d",null,{"defaultValue":"const myMap = Seq({ a: 'Apple', b: 'Banana' })\nList(myMap)\n"}],"\n",["$","$L1d",null,{"defaultValue":"const myMap = Seq({ a: 'Apple', b: 'Banana' })\nmyMap.toList()\n"}],"\n",["$","div",null,{"id":"toStack()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toStack()","children":["toStack()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Converts this Collection to a Stack, discarding keys. Throws if values are not hashable."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toStack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: This is equivalent to ",["$","code",null,{"children":"Stack(this)"}],", but provided to allow for chained expressions."]}],"\n",["$","h2",null,{"children":"Conversion to Seq"}],"\n",["$","div",null,{"id":"toSeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toSeq()","children":["toSeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Converts this Collection to a Seq of the same kind (indexed, keyed, or set)."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"toKeyedSeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toKeyedSeq()","children":["toKeyedSeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a Seq.Keyed from this Collection where indices are treated as keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toKeyedSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Keyed</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":"This is useful if you want to operate on an Collection.Indexed and preserve the [index, value] pairs."}],"\n",["$","p",null,{"children":"The returned Seq will have identical iteration order as this Collection."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"$27"}}]}],"\n",["$","div",null,{"id":"toIndexedSeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toIndexedSeq()","children":["toIndexedSeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns an Seq.Indexed of the values of this Collection, discarding keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toIndexedSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Indexed</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"toSetSeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toSetSeq()","children":["toSetSeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a Seq.Set of the values of this Collection, discarding keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toSetSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Set</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Iterators"}],"\n",["$","div",null,{"id":"keys()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#keys()","children":["keys()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["An iterator of this ",["$","code",null,{"children":"Collection"}],"'s keys."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token qualifier\">Iterator</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: this will return an ES6 iterator which does not support\nImmutable.js sequence algorithms. Use ",["$","code",null,{"children":"keySeq"}]," instead, if this is\nwhat you want."]}],"\n",["$","div",null,{"id":"values()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#values()","children":["values()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["An iterator of this ",["$","code",null,{"children":"Collection"}],"'s values."]}],"\n",["$","p",null,{"children":["Note: this will return an ES6 iterator which does not support\nImmutable.js sequence algorithms. Use ",["$","code",null,{"children":"valueSeq"}]," instead, if this is\nwhat you want."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token qualifier\">Iterator</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"entries()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#entries()","children":["entries()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["An iterator of this ",["$","code",null,{"children":"Collection"}],"'s entries as ",["$","code",null,{"children":"[ key, value ]"}]," tuples."]}],"\n",["$","p",null,{"children":["Note: this will return an ES6 iterator which does not support\nImmutable.js sequence algorithms. Use ",["$","code",null,{"children":"entrySeq"}]," instead, if this is\nwhat you want."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token qualifier\">Iterator</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Collections (Seq)"}],"\n",["$","div",null,{"id":"keySeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#keySeq()","children":["keySeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq.Indexed of the keys of this Collection,\ndiscarding values."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">keySeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Indexed</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"valueSeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#valueSeq()","children":["valueSeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns an Seq.Indexed of the values of this Collection, discarding keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">valueSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Indexed</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"entrySeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#entrySeq()","children":["entrySeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq.Indexed of [key, value] tuples."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">entrySeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Indexed</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Side effects"}],"\n",["$","div",null,{"id":"forEach()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#forEach()","children":["forEach()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"The sideEffect is executed for every entry in the Seq."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">sideEffect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["Unlike ",["$","code",null,{"children":"Array#forEach"}],", if any call of ",["$","code",null,{"children":"sideEffect"}]," returns ",["$","code",null,{"children":"false"}],", the iteration will stop. Returns the number of entries iterated (including the last iteration which returned ",["$","code",null,{"children":"false"}],")."]}],"\n",["$","h2",null,{"children":"Creating subsets"}],"\n",["$","div",null,{"id":"slice()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#slice()","children":["slice()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq of the same type containing entries from begin up to but not including end."}],"\n",["$","p",null,{"children":"If begin is negative, it is offset from the end of the Seq. If end is negative, it is also offset from the end of the Seq. If end is not provided, it will default to the size of the Seq. If the requested slice is empty, returns the same type of empty Seq."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>begin<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"rest()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#rest()","children":["rest()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq of the same type containing all entries except the first."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">rest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"butLast()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#butLast()","children":["butLast()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq of the same type containing all entries except the last."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">butLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"skip()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#skip()","children":["skip()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq of the same type containing all entries except the first amount."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">skip</span><span class=\"token punctuation\">(</span>amount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"skipLast()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#skipLast()","children":["skipLast()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq of the same type containing all entries except the last amount."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">skipLast</span><span class=\"token punctuation\">(</span>amount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"skipWhile()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#skipWhile()","children":["skipWhile()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq of the same type containing entries from the first entry for which predicate returns false."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">skipWhile</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"skipUntil()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#skipUntil()","children":["skipUntil()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq of the same type containing entries from the first entry for which predicate returns true."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">skipUntil</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"take()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#take()","children":["take()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq of the same type containing the first amount entries."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">take</span><span class=\"token punctuation\">(</span>amount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"takeLast()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#takeLast()","children":["takeLast()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq of the same type containing the last amount entries."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">takeLast</span><span class=\"token punctuation\">(</span>amount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"takeWhile()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#takeWhile()","children":["takeWhile()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq of the same type containing entries from the start until predicate returns false."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">takeWhile</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"takeUntil()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#takeUntil()","children":["takeUntil()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq of the same type containing entries from the start until predicate returns true."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">takeUntil</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Combination"}],"\n",["$","div",null,{"id":"flatten()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#flatten()","children":["flatten()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Flattens nested Collections."}],"\n",["$","p",null,{"children":["Will deeply flatten the Collection by default, returning a Collection of the same type, but a ",["$","code",null,{"children":"depth"}]," can be provided in the form of a number or boolean (where true means to shallowly flatten one level). A depth of 0 (or shallow: false) will deeply flatten."]}],"\n",["$","p",null,{"children":"Flattens only other Collections, not Arrays or Objects."}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"flatten(true)"}]," operates on ",["$","code",null,{"children":"Collection<unknown, Collection<K, V>>"}]," and returns ",["$","code",null,{"children":"Collection<K, V>"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>depth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Collection</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>shallow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Collection</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"reduce()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#reduce()","children":["reduce()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Reduces the Collection to a value by calling the ",["$","code",null,{"children":"reducer"}]," for every entry in the Collection and passing along the reduced value."]}],"\n",["$","p",null,{"children":["If ",["$","code",null,{"children":"initialReduction"}]," is not provided, the first item in the Collection will be used."]}],"\n",["$","p",null,{"children":["@see ",["$","code",null,{"children":"Array#reduce"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token generic-function\"><span class=\"token function\">reduce</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">R</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">reducer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>reduction<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">R</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"reduceRight()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#reduceRight()","children":["reduceRight()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Reduces the Collection in reverse (from the right side)."}],"\n",["$","p",null,{"children":["Note: Similar to ",["$","code",null,{"children":"this.reverse().reduce()"}],", and provided for parity with ",["$","code",null,{"children":"Array#reduceRight"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token generic-function\"><span class=\"token function\">reduceRight</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">R</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">reducer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>reduction<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">R</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"every()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#every()","children":["every()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if ",["$","code",null,{"children":"predicate"}]," returns true for all entries in the Collection."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">every</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span>\n  context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"some()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#some()","children":["some()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if ",["$","code",null,{"children":"predicate"}]," returns true for any entry in the Collection."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">some</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span>\n  context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"join()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#join()","children":["join()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Joins values together as a string, inserting a separator between each. The default separator is ",["$","code",null,{"children":"\",\""}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">join</span><span class=\"token punctuation\">(</span>separator<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"isEmpty()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#isEmpty()","children":["isEmpty()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns true if this Collection includes no values."}],"\n",["$","p",null,{"children":["For some lazy ",["$","code",null,{"children":"Seq"}],", ",["$","code",null,{"children":"isEmpty"}]," might need to iterate to determine emptiness. At most one iteration will occur."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"count()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#count()","children":["count()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the size of this Collection."}],"\n",["$","p",null,{"children":["Regardless of if this Collection can describe its size lazily (some Seqs cannot), this method will always return the correct size. E.g. it evaluates a lazy ",["$","code",null,{"children":"Seq"}]," if necessary."]}],"\n",["$","p",null,{"children":["If ",["$","code",null,{"children":"predicate"}]," is provided, then this returns the count of entries in the Collection for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"countBy()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#countBy()","children":["countBy()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a ",["$","code",null,{"children":"Seq.Keyed"}]," of counts, grouped by the return value of the ",["$","code",null,{"children":"grouper"}]," function."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$28"}}]}]]}],"\n",["$","p",null,{"children":"Note: This is not a lazy operation."}],"\n",["$","h2",null,{"children":"Search for value"}],"\n",["$","div",null,{"id":"find()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#find()","children":["find()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns the first value for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$29"}}]}]]}],"\n",["$","div",null,{"id":"findLast()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#findLast()","children":["findLast()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns the last value for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"predicate"}]," will be called for each entry in reverse."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$2a"}}]}]]}],"\n",["$","div",null,{"id":"findEntry()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#findEntry()","children":["findEntry()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns the first [key, value] entry for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$2b"}}]}]]}],"\n",["$","div",null,{"id":"findLastEntry()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#findLastEntry()","children":["findLastEntry()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns the last [key, value] entry for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"predicate"}]," will be called for each entry in reverse."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$2c"}}]}]]}],"\n",["$","div",null,{"id":"findKey()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#findKey()","children":["findKey()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns the key for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$2d"}}]}]]}],"\n",["$","div",null,{"id":"findLastKey()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#findLastKey()","children":["findLastKey()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns the last key for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$2e"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"predicate"}]," will be called for each entry in reverse."]}],"\n",["$","div",null,{"id":"keyOf()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#keyOf()","children":["keyOf()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the key associated with the search value, or undefined."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">keyOf</span><span class=\"token punctuation\">(</span>searchValue<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">K</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"lastKeyOf()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#lastKeyOf()","children":["lastKeyOf()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the last key associated with the search value, or undefined."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">lastKeyOf</span><span class=\"token punctuation\">(</span>searchValue<span class=\"token operator\">:</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">K</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"max()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#max()","children":["max()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the maximum value in this collection. If any values are comparatively equivalent, the first one found will be returned."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">max</span><span class=\"token punctuation\">(</span>comparator<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Comparator</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">V</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["The ",["$","code",null,{"children":"comparator"}]," is used in the same way as ",["$","a",null,{"href":"#sort","children":["$","code",null,{"children":"sort"}]}],". If it is not provided, the default comparator is ",["$","code",null,{"children":">"}],"."]}],"\n",["$","p",null,{"children":["When two values are considered equivalent, the first encountered will be returned. Otherwise, ",["$","code",null,{"children":"max"}]," will operate independent of the order of input as long as the comparator is commutative. The default comparator ",["$","code",null,{"children":">"}]," is commutative ",["$","em",null,{"children":"only"}]," when types do not differ."]}],"\n",["$","p",null,{"children":["If ",["$","code",null,{"children":"comparator"}]," returns 0 and either value is NaN, undefined, or null, that value will be returned."]}],"\n",["$","div",null,{"id":"maxBy()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#maxBy()","children":["maxBy()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Like ",["$","code",null,{"children":"max"}],", but also accepts a ",["$","code",null,{"children":"comparatorValueMapper"}]," which allows for comparing by more sophisticated means:"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$2f"}}]}]]}],"\n",["$","$L1d",null,{"defaultValue":"const l = Seq([\n{ name: 'Bob', avgHit: 1 },\n{ name: 'Max', avgHit: 3 },\n{ name: 'Lili', avgHit: 2 } ,\n]);\nl.maxBy(i => i.avgHit);\n"}],"\n",["$","div",null,{"id":"min()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#min()","children":["min()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the minimum value in this collection. If any values are comparatively equivalent, the first one found will be returned."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">min</span><span class=\"token punctuation\">(</span>comparator<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Comparator</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">V</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","p",null,{"children":["The ",["$","code",null,{"children":"comparator"}]," is used in the same way as ",["$","a",null,{"href":"#sort","children":["$","code",null,{"children":"sort"}]}],". If it is not provided, the default comparator is ",["$","code",null,{"children":"<"}],"."]}],"\n",["$","p",null,{"children":["When two values are considered equivalent, the first encountered will be returned. Otherwise, ",["$","code",null,{"children":"min"}]," will operate independent of the order of input as long as the comparator is commutative. The default comparator ",["$","code",null,{"children":"<"}]," is commutative ",["$","em",null,{"children":"only"}]," when types do not differ."]}],"\n",["$","p",null,{"children":["If ",["$","code",null,{"children":"comparator"}]," returns 0 and either value is NaN, undefined, or null, that value will be returned."]}],"\n",["$","div",null,{"id":"minBy()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#minBy()","children":["minBy()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Like ",["$","code",null,{"children":"min"}],", but also accepts a ",["$","code",null,{"children":"comparatorValueMapper"}]," which allows for comparing by more sophisticated means:"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$30"}}]}]]}],"\n",["$","$L1d",null,{"defaultValue":"const l = Seq([\n{ name: 'Bob', avgHit: 1 },\n{ name: 'Max', avgHit: 3 },\n{ name: 'Lili', avgHit: 2 } ,\n]);\nl.minBy(i => i.avgHit);\n"}],"\n",["$","h2",null,{"children":"Comparison"}],"\n",["$","div",null,{"id":"isSubset()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#isSubset()","children":["isSubset()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if ",["$","code",null,{"children":"iter"}]," includes every value in this Collection."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">isSubset</span><span class=\"token punctuation\">(</span>iter<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"isSuperset()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#isSuperset()","children":["isSuperset()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if this Collection includes every value in ",["$","code",null,{"children":"iter"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">isSuperset</span><span class=\"token punctuation\">(</span>iter<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">V</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>"}}]}]]}]],";"]}]]}]
