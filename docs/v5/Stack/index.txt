1:"$Sreact.fragment"
2:I[2708,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"WorkerContextProvider"]
3:I[4620,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
4:I[81105,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
5:I[86240,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/c63eea34c69bde5e.js"],"default"]
8:I[83822,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"MetadataBoundary"]
a:I[83822,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"OutletBoundary"]
d:I[2541,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"AsyncMetadataOutlet"]
f:I[83822,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"ViewportBoundary"]
11:I[12447,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
:HL["/_next/static/chunks/2403294e05ea780d.css","style"]
:HL["/_next/static/chunks/bcfc9332aea241e3.css","style"]
0:{"P":null,"b":"eSekn8btGqQtnunAARXwx","p":"","c":["","docs","v5","Stack",""],"i":false,"f":[[["",{"children":["docs",{"children":["v5",{"children":[["type","Stack","d"],{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/2403294e05ea780d.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/1d2d43591a84e045.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/0f63189634a29548.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"pageBody","children":[["$","h2",null,{"children":"Not Found"}],["$","p",null,{"children":"Could not find requested resource"}],["$","$L5",null,{"href":"/","children":"Return Home"}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]]}],{"children":["docs",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["v5",["$","$1","c",{"children":[[["$","script","script-0",{"src":"/_next/static/chunks/1398221593ec8d74.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/cffb7d8f6d5ddd81.js","async":true,"nonce":"$undefined"}]],"$L6"]}],{"children":[["type","Stack","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7",["$","$L8",null,{"children":"$L9"}],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/bcfc9332aea241e3.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/122e906f66a4415e.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/8069937d345a5c75.js","async":true,"nonce":"$undefined"}]],["$","$La",null,{"children":["$Lb","$Lc",["$","$Ld",null,{"promise":"$@e"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","OMs6pgm6vKOhCqwa-eLMv",{"children":[["$","$Lf",null,{"children":"$L10"}],null]}],null]}],false]],"m":"$undefined","G":["$11","$undefined"],"s":false,"S":true}
12:I[85995,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"ImmutableConsole"]
13:I[91842,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"HeaderLogoLink"]
14:I[91842,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"HeaderLinks"]
15:I[55958,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"default"]
16:"$Sreact.suspense"
17:I[2541,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"AsyncMetadata"]
6:["$","div",null,{"children":[["$","$L12",null,{"version":"v5"}],["$","div",null,{"className":"header","children":["$","div",null,{"className":"miniHeader","children":[["$","div",null,{"className":"miniHeaderContents","children":[["$","$L13",null,{}],["$","$L14",null,{"versions":["v5","v4.3.7","v3.8.2"],"currentVersion":"v5"}]]}],["$","$L15",null,{}]]}]}],["$","div",null,{"className":"pageBody","children":["$","div",null,{"className":"contents","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]
9:["$","$16",null,{"fallback":null,"children":["$","$L17",null,{"promise":"$@18"}]}]
c:null
10:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
b:null
18:{"metadata":[["$","title","0",{"children":"Stack â€” Immutable.js"}],["$","link","1",{"rel":"icon","href":"/favicon.png"}]],"error":null,"digest":"$undefined"}
e:{"metadata":"$18:metadata","error":null,"digest":"$undefined"}
19:I[26602,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js","/_next/static/chunks/122e906f66a4415e.js","/_next/static/chunks/8069937d345a5c75.js"],"default"]
1a:I[75543,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js","/_next/static/chunks/122e906f66a4415e.js","/_next/static/chunks/8069937d345a5c75.js"],"DocSearch"]
1b:T41b,<span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">NSV</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> notSetValue<span class="token operator">:</span> <span class="token constant">NSV</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token constant">NSV</span>
<span class="token function">get</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token primitive">undefined</span>1c:T61a,<span class="token function">update</span><span class="token punctuation">(</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token function-variable function">updater</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token primitive">undefined</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token primitive">undefined</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token var">this</span>
<span class="token generic-function"><span class="token function">update</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">updater</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">R</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">R</span>1d:T416,<span class="token generic-function"><span class="token function">concat</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token operator">...</span>valuesOrCollections<span class="token operator">:</span> <span class="token qualifier">Array</span><span class="token operator">&lt;</span><span class="token qualifier">Iterable</span><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span> <span class="token operator">|</span> <span class="token constant">C</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">|</span> <span class="token constant">C</span><span class="token operator">></span>1e:T4ea,<span class="token generic-function"><span class="token function">map</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">mapper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">M</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">></span>1f:T568,<span class="token generic-function"><span class="token function">flatMap</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">mapper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token qualifier">Iterable</span><span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">></span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">></span>20:T920,<span class="token generic-function"><span class="token function">filter</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">F</span> <span class="token keyword">extends</span> <span class="token constant">T</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> value <span class="token keyword">is</span> <span class="token constant">F</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Set</span><span class="token operator">&lt;</span><span class="token constant">F</span><span class="token operator">></span>
<span class="token function">filter</span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token var">this</span>21:Td17,<span class="token generic-function"><span class="token function">partition</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">F</span> <span class="token keyword">extends</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">C</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token var">this</span><span class="token operator">:</span> <span class="token constant">C</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> value <span class="token keyword">is</span> <span class="token constant">F</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">C</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">F</span><span class="token operator">></span><span class="token punctuation">]</span>
<span class="token generic-function"><span class="token function">partition</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token var">this</span><span class="token operator">:</span> <span class="token constant">C</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">C</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token var">this</span><span class="token punctuation">,</span> <span class="token var">this</span><span class="token punctuation">]</span>22:Tc4d,<span class="token generic-function"><span class="token function">zip</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>other<span class="token operator">:</span> <span class="token qualifier">Collection</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">]</span><span class="token operator">></span>
<span class="token generic-function"><span class="token function">zip</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>other<span class="token operator">:</span> <span class="token qualifier">Collection</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">></span><span class="token punctuation">,</span> other2<span class="token operator">:</span> <span class="token qualifier">Collection</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token punctuation">]</span><span class="token operator">></span>
<span class="token function">zip</span><span class="token punctuation">(</span><span class="token operator">...</span>collections<span class="token operator">:</span> <span class="token qualifier">Array</span><span class="token operator">&lt;</span><span class="token qualifier">Collection</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">>></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">></span>23:T563,<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">zip</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Stack [ [ 1, 4 ], [ 2, 5 ], [ 3, 6 ] ]</span>24:Tc56,<span class="token generic-function"><span class="token function">zipAll</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>other<span class="token operator">:</span> <span class="token qualifier">Collection</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">]</span><span class="token operator">></span>
<span class="token generic-function"><span class="token function">zipAll</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>other<span class="token operator">:</span> <span class="token qualifier">Collection</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">></span><span class="token punctuation">,</span> other2<span class="token operator">:</span> <span class="token qualifier">Collection</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token punctuation">]</span><span class="token operator">></span>
<span class="token function">zipAll</span><span class="token punctuation">(</span><span class="token operator">...</span>collections<span class="token operator">:</span> <span class="token qualifier">Array</span><span class="token operator">&lt;</span><span class="token qualifier">Collection</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">>></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">></span>25:T522,<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">zipAll</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Stack [ [ 1, 3 ], [ 2, 4 ], [ undefined, 5 ] ]</span>26:T12d5,<span class="token generic-function"><span class="token function">zipWith</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">Z</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">zipper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> otherValue<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">Z</span><span class="token punctuation">,</span> otherCollection<span class="token operator">:</span> <span class="token qualifier">Collection</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">Z</span><span class="token operator">></span>
<span class="token generic-function"><span class="token function">zipWith</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token punctuation">,</span> <span class="token constant">Z</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">zipper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> otherValue<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">,</span> thirdValue<span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">Z</span><span class="token punctuation">,</span> otherCollection<span class="token operator">:</span> <span class="token qualifier">Collection</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">></span><span class="token punctuation">,</span> thirdCollection<span class="token operator">:</span> <span class="token qualifier">Collection</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">Z</span><span class="token operator">></span>
<span class="token generic-function"><span class="token function">zipWith</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">Z</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">zipper</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token operator">...</span>values<span class="token operator">:</span> <span class="token qualifier">Array</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">Z</span><span class="token punctuation">,</span> <span class="token operator">...</span>collections<span class="token operator">:</span> <span class="token qualifier">Array</span><span class="token operator">&lt;</span><span class="token qualifier">Collection</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">>></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">Z</span><span class="token operator">></span>27:T66c,<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">zipWith</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a <span class="token operator">+</span> b<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Stack [ 5, 7, 9 ]</span>28:T4fd,<span class="token generic-function"><span class="token function">sortBy</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">comparatorValueMapper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">C</span><span class="token punctuation">,</span> comparator<span class="token operator">?</span><span class="token operator">:</span> <span class="token qualifier">Comparator</span><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token var">this</span>29:T58e,<span class="token generic-function"><span class="token function">groupBy</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">G</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">grouper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">G</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Map</span><span class="token operator">&lt;</span><span class="token constant">G</span><span class="token punctuation">,</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">>></span>2a:T4a9,<span class="token function">find</span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> notSetValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token primitive">undefined</span>2b:T4ad,<span class="token function">findLast</span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> notSetValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token primitive">undefined</span>2c:T550,<span class="token function">findEntry</span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> notSetValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token primitive">undefined</span>2d:T554,<span class="token function">findLastEntry</span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> notSetValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token primitive">undefined</span>2e:T40c,<span class="token function">findKey</span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token primitive">undefined</span>2f:T410,<span class="token function">findLastKey</span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token primitive">undefined</span>30:T553,<span class="token generic-function"><span class="token function">maxBy</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">comparatorValueMapper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">C</span><span class="token punctuation">,</span> comparator<span class="token operator">?</span><span class="token operator">:</span> <span class="token qualifier">Comparator</span><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token primitive">undefined</span>31:T553,<span class="token generic-function"><span class="token function">minBy</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">comparatorValueMapper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">C</span><span class="token punctuation">,</span> comparator<span class="token operator">?</span><span class="token operator">:</span> <span class="token qualifier">Comparator</span><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token primitive">undefined</span>32:T42c,<span class="token function">skipWhile</span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span>33:T42c,<span class="token function">skipUntil</span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span>34:T42c,<span class="token function">takeWhile</span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span>35:T42c,<span class="token function">takeUntil</span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Stack</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span>36:Ta14,<span class="token generic-function"><span class="token function">reduce</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">reducer</span><span class="token operator">:</span> <span class="token punctuation">(</span>reduction<span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">R</span><span class="token punctuation">,</span> initialReduction<span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">R</span>
<span class="token generic-function"><span class="token function">reduce</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">reducer</span><span class="token operator">:</span> <span class="token punctuation">(</span>reduction<span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token constant">R</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">R</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">R</span>37:Ta1e,<span class="token generic-function"><span class="token function">reduceRight</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">reducer</span><span class="token operator">:</span> <span class="token punctuation">(</span>reduction<span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">R</span><span class="token punctuation">,</span> initialReduction<span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">R</span>
<span class="token generic-function"><span class="token function">reduceRight</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">reducer</span><span class="token operator">:</span> <span class="token punctuation">(</span>reduction<span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token constant">R</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">R</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">R</span>38:T47e,<span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token function">count</span><span class="token punctuation">(</span><span class="token function-variable function">predicate</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>39:T53f,<span class="token generic-function"><span class="token function">countBy</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">G</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function-variable function">grouper</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> iter<span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">G</span><span class="token punctuation">,</span> context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token qualifier">Map</span><span class="token operator">&lt;</span><span class="token constant">G</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">></span>7:["$","div",null,{"className":"contents","children":[["$","$L19",null,{"focus":[{"qualifiedName":"Construction","label":"Construction","functions":{"Stack()":{"label":"Stack()","url":"#Stack()"}}},{"qualifiedName":"Static Methods","label":"Static Methods","functions":{"Stack.isStack()":{"label":"Stack.isStack()","url":"#Stack.isStack()"},"Stack.of()":{"label":"Stack.of()","url":"#Stack.of()"}}},{"qualifiedName":"Members","label":"Members","functions":{"size":{"label":"size","url":"#size"}}},{"qualifiedName":"Reading values","label":"Reading values","functions":{"peek()":{"label":"peek()","url":"#peek()"},"get()":{"label":"get()","url":"#get()"},"has()":{"label":"has()","url":"#has()"},"includes()":{"label":"includes()","url":"#includes()"},"first()":{"label":"first()","url":"#first()"},"last()":{"label":"last()","url":"#last()"}}},{"qualifiedName":"Persistent changes","label":"Persistent changes","functions":{"clear()":{"label":"clear()","url":"#clear()"},"unshift()":{"label":"unshift()","url":"#unshift()"},"unshiftAll()":{"label":"unshiftAll()","url":"#unshiftAll()"},"shift()":{"label":"shift()","url":"#shift()"},"push()":{"label":"push()","url":"#push()"},"pushAll()":{"label":"pushAll()","url":"#pushAll()"},"pop()":{"label":"pop()","url":"#pop()"},"update()":{"label":"update()","url":"#update()"}}},{"qualifiedName":"Transient changes","label":"Transient changes","functions":{"withMutations()":{"label":"withMutations()","url":"#withMutations()"},"asMutable()":{"label":"asMutable()","url":"#asMutable()"},"wasAltered()":{"label":"wasAltered()","url":"#wasAltered()"},"asImmutable()":{"label":"asImmutable()","url":"#asImmutable()"}}},{"qualifiedName":"Sequence algorithms","label":"Sequence algorithms","functions":{"concat()":{"label":"concat()","url":"#concat()"},"map()":{"label":"map()","url":"#map()"},"flatMap()":{"label":"flatMap()","url":"#flatMap()"},"filter()":{"label":"filter()","url":"#filter()"},"partition()":{"label":"partition()","url":"#partition()"},"zip()":{"label":"zip()","url":"#zip()"},"zipAll()":{"label":"zipAll()","url":"#zipAll()"},"zipWith()":{"label":"zipWith()","url":"#zipWith()"}}},{"qualifiedName":"Sequence algorithms","label":"Sequence algorithms","functions":{"partition()":{"label":"partition()","url":"#partition()"},"[Symbol.iterator]()":{"label":"[Symbol.iterator]()","url":"#[Symbol.iterator]()"},"filterNot()":{"label":"filterNot()","url":"#filterNot()"},"reverse()":{"label":"reverse()","url":"#reverse()"},"sort()":{"label":"sort()","url":"#sort()"},"sortBy()":{"label":"sortBy()","url":"#sortBy()"},"groupBy()":{"label":"groupBy()","url":"#groupBy()"}}},{"qualifiedName":"Conversion to JavaScript types","label":"Conversion to JavaScript types","functions":{"toJS()":{"label":"toJS()","url":"#toJS()"},"toJSON()":{"label":"toJSON()","url":"#toJSON()"},"toArray()":{"label":"toArray()","url":"#toArray()"},"toObject()":{"label":"toObject()","url":"#toObject()"}}},{"qualifiedName":"Conversion to Seq","label":"Conversion to Seq","functions":{"toSeq()":{"label":"toSeq()","url":"#toSeq()"},"fromEntrySeq()":{"label":"fromEntrySeq()","url":"#fromEntrySeq()"},"toKeyedSeq()":{"label":"toKeyedSeq()","url":"#toKeyedSeq()"},"toIndexedSeq()":{"label":"toIndexedSeq()","url":"#toIndexedSeq()"},"toSetSeq()":{"label":"toSetSeq()","url":"#toSetSeq()"}}},{"qualifiedName":"Combination","label":"Combination","functions":{"interpose()":{"label":"interpose()","url":"#interpose()"},"interleave()":{"label":"interleave()","url":"#interleave()"},"splice()":{"label":"splice()","url":"#splice()"},"flatten()":{"label":"flatten()","url":"#flatten()"}}},{"qualifiedName":"Search for value","label":"Search for value","functions":{"indexOf()":{"label":"indexOf()","url":"#indexOf()"},"lastIndexOf()":{"label":"lastIndexOf()","url":"#lastIndexOf()"},"findIndex()":{"label":"findIndex()","url":"#findIndex()"},"findLastIndex()":{"label":"findLastIndex()","url":"#findLastIndex()"},"find()":{"label":"find()","url":"#find()"},"findLast()":{"label":"findLast()","url":"#findLast()"},"findEntry()":{"label":"findEntry()","url":"#findEntry()"},"findLastEntry()":{"label":"findLastEntry()","url":"#findLastEntry()"},"findKey()":{"label":"findKey()","url":"#findKey()"},"findLastKey()":{"label":"findLastKey()","url":"#findLastKey()"},"keyOf()":{"label":"keyOf()","url":"#keyOf()"},"lastKeyOf()":{"label":"lastKeyOf()","url":"#lastKeyOf()"},"max()":{"label":"max()","url":"#max()"},"maxBy()":{"label":"maxBy()","url":"#maxBy()"},"min()":{"label":"min()","url":"#min()"},"minBy()":{"label":"minBy()","url":"#minBy()"}}},{"qualifiedName":"Value equality","label":"Value equality","functions":{"equals()":{"label":"equals()","url":"#equals()"},"hashCode()":{"label":"hashCode()","url":"#hashCode()"}}},{"qualifiedName":"Reading deep values","label":"Reading deep values","functions":{"getIn()":{"label":"getIn()","url":"#getIn()"},"hasIn()":{"label":"hasIn()","url":"#hasIn()"}}},{"qualifiedName":"Conversion to Collections","label":"Conversion to Collections","functions":{"toMap()":{"label":"toMap()","url":"#toMap()"},"toOrderedMap()":{"label":"toOrderedMap()","url":"#toOrderedMap()"},"toSet()":{"label":"toSet()","url":"#toSet()"},"toOrderedSet()":{"label":"toOrderedSet()","url":"#toOrderedSet()"},"toList()":{"label":"toList()","url":"#toList()"},"toStack()":{"label":"toStack()","url":"#toStack()"}}},{"qualifiedName":"Iterators","label":"Iterators","functions":{"keys()":{"label":"keys()","url":"#keys()"},"values()":{"label":"values()","url":"#values()"},"entries()":{"label":"entries()","url":"#entries()"}}},{"qualifiedName":"Collections (Seq)","label":"Collections (Seq)","functions":{"keySeq()":{"label":"keySeq()","url":"#keySeq()"},"valueSeq()":{"label":"valueSeq()","url":"#valueSeq()"},"entrySeq()":{"label":"entrySeq()","url":"#entrySeq()"}}},{"qualifiedName":"Side effects","label":"Side effects","functions":{"forEach()":{"label":"forEach()","url":"#forEach()"}}},{"qualifiedName":"Creating subsets","label":"Creating subsets","functions":{"slice()":{"label":"slice()","url":"#slice()"},"rest()":{"label":"rest()","url":"#rest()"},"butLast()":{"label":"butLast()","url":"#butLast()"},"skip()":{"label":"skip()","url":"#skip()"},"skipLast()":{"label":"skipLast()","url":"#skipLast()"},"skipWhile()":{"label":"skipWhile()","url":"#skipWhile()"},"skipUntil()":{"label":"skipUntil()","url":"#skipUntil()"},"take()":{"label":"take()","url":"#take()"},"takeLast()":{"label":"takeLast()","url":"#takeLast()"},"takeWhile()":{"label":"takeWhile()","url":"#takeWhile()"},"takeUntil()":{"label":"takeUntil()","url":"#takeUntil()"}}},{"qualifiedName":"Reducing a value","label":"Reducing a value","functions":{"reduce()":{"label":"reduce()","url":"#reduce()"},"reduceRight()":{"label":"reduceRight()","url":"#reduceRight()"},"every()":{"label":"every()","url":"#every()"},"some()":{"label":"some()","url":"#some()"},"join()":{"label":"join()","url":"#join()"},"isEmpty()":{"label":"isEmpty()","url":"#isEmpty()"},"count()":{"label":"count()","url":"#count()"},"countBy()":{"label":"countBy()","url":"#countBy()"}}},{"qualifiedName":"Comparison","label":"Comparison","functions":{"isSubset()":{"label":"isSubset()","url":"#isSubset()"},"isSuperset()":{"label":"isSuperset()","url":"#isSuperset()"}}}],"activeType":"Stack"}],["$","div",null,{"className":"docContents","children":[["$","$L1a",null,{}],[["$","h1",null,{"children":"Stack"}],"\n",["$","p",null,{"children":["Stacks are indexed collections which support very efficient ",["$","code",null,{"children":"O(1)"}]," addition and removal from the front using ",["$","code",null,{"children":"unshift(v)"}]," and ",["$","code",null,{"children":"shift()"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\"><span class=\"token qualifier\">Collection</span></span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Indexed</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","p",null,{"children":["For familiarity, Stack also provides ",["$","code",null,{"children":"push(v)"}],", ",["$","code",null,{"children":"pop()"}],", and ",["$","code",null,{"children":"peek()"}],", but be aware that they also operate on the front of the list, unlike List or a JavaScript Array."]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"reverse()"}]," or any inherent reverse traversal (",["$","code",null,{"children":"reduceRight"}],", ",["$","code",null,{"children":"lastIndexOf"}],", etc.) is not efficient with a Stack."]}],"\n",["$","p",null,{"children":"Stack is implemented with a Single-Linked List."}],"\n",["$","h2",null,{"children":"Construction"}],"\n",["$","div",null,{"id":"Stack()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#Stack()","children":["Stack()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Create a new immutable Stack containing the values of the provided collection-like."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token generic-function\"><span class=\"token function\">Stack</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>collection<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token qualifier\">Array</span><span class=\"token qualifier\">Like</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"Stack"}]," is a factory function and not a class, and does not use the ",["$","code",null,{"children":"new"}]," keyword during construction."]}],"\n",["$","h2",null,{"children":"Static Methods"}],"\n",["$","div",null,{"id":"Stack.isStack()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#Stack.isStack()","children":["Stack.isStack()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"True if the provided value is a Stack."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token qualifier\">Stack</span><span class=\"token punctuation\">.</span><span class=\"token function\">isStack</span><span class=\"token punctuation\">(</span>maybeStack<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> maybeStack <span class=\"token keyword\">is</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">unknown</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"Stack.of()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#Stack.of()","children":["Stack.of()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Creates a new Stack containing ",["$","code",null,{"children":"values"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token qualifier\">Stack</span><span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">of</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>values<span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","h2",null,{"children":"Members"}],"\n",["$","div",null,{"id":"size","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#size","children":["size",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"The number of items in this Stack."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"size<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Reading values"}],"\n",["$","div",null,{"id":"peek()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#peek()","children":["peek()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Alias for ",["$","code",null,{"children":"Stack.first()"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">peek</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span>"}}]}]]}],"\n",["$","div",null,{"id":"get()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#get()","children":["get()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the value associated with the provided key, or notSetValue if the Collection does not contain this key."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$1b"}}]}]]}],"\n",["$","div",null,{"id":"has()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#has()","children":["has()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if a key exists within this Collection, using ",["$","code",null,{"children":"Immutable.is"}]," to determine equality."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">has</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","div",null,{"id":"includes()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#includes()","children":["includes()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],[["$","h4",null,{"className":"infoHeader","children":"Alias:"}],["$","code",null,{"children":"contains()"}]]]}],"\n",["$","p",null,{"children":["True if a value exists within this Collection, using ",["$","code",null,{"children":"Immutable.is"}]," to determine equality."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","div",null,{"id":"first()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#first()","children":["first()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the first value in this Collection."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span>"}}]}]]}],"\n",["$","div",null,{"id":"last()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#last()","children":["last()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the last value in this Collection."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">last</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Persistent changes"}],"\n",["$","div",null,{"id":"clear()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#clear()","children":["clear()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Stack with 0 size and no values."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"clear"}]," can be used in ",["$","code",null,{"children":"withMutations"}],"."]}],"\n",["$","div",null,{"id":"unshift()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#unshift()","children":["unshift()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack with the provided ",["$","code",null,{"children":"values"}]," prepended, shifting other values ahead to higher indices."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>values<span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","p",null,{"children":"This is very efficient for Stack."}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"unshift"}]," can be used in ",["$","code",null,{"children":"withMutations"}],"."]}],"\n",["$","div",null,{"id":"unshiftAll()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#unshiftAll()","children":["unshiftAll()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Like ",["$","code",null,{"children":"Stack#unshift"}],", but accepts a collection rather than varargs."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">unshiftAll</span><span class=\"token punctuation\">(</span>iter<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"unshiftAll"}]," can be used in ",["$","code",null,{"children":"withMutations"}],"."]}],"\n",["$","div",null,{"id":"shift()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#shift()","children":["shift()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Stack with a size ones less than this Stack, excluding the first item in this Stack, shifting all other values to a lower index."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: this differs from ",["$","code",null,{"children":"Array#shift"}]," because it returns a new Stack rather than the removed value. Use ",["$","code",null,{"children":"first()"}]," or ",["$","code",null,{"children":"peek()"}]," to get the first value in this Stack."]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"shift"}]," can be used in ",["$","code",null,{"children":"withMutations"}],"."]}],"\n",["$","div",null,{"id":"push()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#push()","children":["push()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Alias for ",["$","code",null,{"children":"Stack#unshift"}]," and is not equivalent to ",["$","code",null,{"children":"List#push"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>values<span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"pushAll()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#pushAll()","children":["pushAll()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Alias for ",["$","code",null,{"children":"Stack#unshiftAll"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">pushAll</span><span class=\"token punctuation\">(</span>iter<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"pop()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#pop()","children":["pop()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Alias for ",["$","code",null,{"children":"Stack#shift"}]," and is not equivalent to ",["$","code",null,{"children":"List#pop"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"update()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#update()","children":["update()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack with an updated value at ",["$","code",null,{"children":"index"}]," with the return value of calling ",["$","code",null,{"children":"updater"}]," with the existing value."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$1c"}}]}]]}],"\n",["$","h2",null,{"children":"Transient changes"}],"\n",["$","div",null,{"id":"withMutations()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#withMutations()","children":["withMutations()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Note: Not all methods can be used on a mutable collection or within ",["$","code",null,{"children":"withMutations"}],"! Check the documentation for each method to see if it mentions being safe to use in ",["$","code",null,{"children":"withMutations"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">withMutations</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">mutator</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>mutable<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span>"}}]}]]}],"\n",["$","div",null,{"id":"asMutable()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#asMutable()","children":["asMutable()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Note: Not all methods can be used on a mutable collection or within ",["$","code",null,{"children":"withMutations"}],"! Check the documentation for each method to see if it mentions being safe to use in ",["$","code",null,{"children":"withMutations"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">asMutable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span>"}}]}]]}],"\n",["$","div",null,{"id":"wasAltered()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#wasAltered()","children":["wasAltered()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">wasAltered</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","div",null,{"id":"asImmutable()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#asImmutable()","children":["asImmutable()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">asImmutable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Sequence algorithms"}],"\n",["$","div",null,{"id":"concat()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#concat()","children":["concat()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Stack with other collections concatenated to this one."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$1d"}}]}]]}],"\n",["$","div",null,{"id":"map()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#map()","children":["map()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack with values passed through a ",["$","code",null,{"children":"mapper"}]," function."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$1e"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"map()"}]," always returns a new instance, even if it produced the same value at every step."]}],"\n",["$","div",null,{"id":"flatMap()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#flatMap()","children":["flatMap()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Flat-maps the Stack, returning a new Stack."}],"\n",["$","p",null,{"children":["Similar to ",["$","code",null,{"children":"stack.map(...).flatten(true)"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$1f"}}]}]]}],"\n",["$","div",null,{"id":"filter()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#filter()","children":["filter()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Set with only the values for which the ",["$","code",null,{"children":"predicate"}]," function returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$20"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"filter()"}]," always returns a new instance, even if it results in not filtering out any values."]}],"\n",["$","div",null,{"id":"partition()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#partition()","children":["partition()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack with the values for which the ",["$","code",null,{"children":"predicate"}]," function returns false and another for which it returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$21"}}]}]]}],"\n",["$","div",null,{"id":"zip()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#zip()","children":["zip()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a Stack \"zipped\" with the provided collections."}],"\n",["$","p",null,{"children":["Like ",["$","code",null,{"children":"zipWith"}],", but using the default ",["$","code",null,{"children":"zipper"}],": creating an ",["$","code",null,{"children":"Array"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$22"}}]}]]}],"\n",["$","p",null,{"children":"Example:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"$23"}}]}],"\n",["$","div",null,{"id":"zipAll()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#zipAll()","children":["zipAll()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a Stack \"zipped\" with the provided collections."}],"\n",["$","p",null,{"children":["Unlike ",["$","code",null,{"children":"zip"}],", ",["$","code",null,{"children":"zipAll"}]," continues zipping until the longest collection is exhausted. Missing values from shorter collections are filled with ",["$","code",null,{"children":"undefined"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$24"}}]}]]}],"\n",["$","p",null,{"children":"Example:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"$25"}}]}],"\n",["$","p",null,{"children":"Note: Since zipAll will return a collection as large as the largest input, some results may contain undefined values. TypeScript cannot account for these without cases (as of v2.5)."}],"\n",["$","div",null,{"id":"zipWith()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#zipWith()","children":["zipWith()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a Stack \"zipped\" with the provided collections by using a custom ",["$","code",null,{"children":"zipper"}]," function."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$26"}}]}]]}],"\n",["$","p",null,{"children":"Example:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"$27"}}]}],"\n",["$","h2",null,{"children":"Sequence algorithms"}],"\n",["$","div",null,{"id":"partition()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#partition()","children":["partition()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"id":"[Symbol.iterator]()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#[Symbol.iterator]()","children":["[Symbol.iterator]()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns an iterator of this Stack."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token punctuation\">[</span><span class=\"token qualifier\">Symbol</span><span class=\"token punctuation\">.</span>iterator<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token qualifier\">Iterator</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"filterNot()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#filterNot()","children":["filterNot()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack with only the values for which the ",["$","code",null,{"children":"predicate"}]," function returns false."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">filterNot</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"filterNot()"}]," always returns a new instance, even if it results in not filtering out any values."]}],"\n",["$","div",null,{"id":"reverse()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#reverse()","children":["reverse()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Stack with the order of the values reversed."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span>"}}]}]]}],"\n",["$","div",null,{"id":"sort()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#sort()","children":["sort()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns Stack of the same type which includes the same entries, stably sorted by using a comparator."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>comparator<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Comparator</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span>"}}]}]]}],"\n",["$","p",null,{"children":["If a comparator is not provided, a default comparator uses ",["$","code",null,{"children":"<"}]," and ",["$","code",null,{"children":">"}],"."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"comparator(valueA, valueB)"}],":"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Returns ",["$","code",null,{"children":"0"}]," if the elements should not be swapped."]}],"\n",["$","li",null,{"children":["Returns ",["$","code",null,{"children":"-1"}]," (or any negative number) if ",["$","code",null,{"children":"valueA"}]," comes before ",["$","code",null,{"children":"valueB"}]]}],"\n",["$","li",null,{"children":["Returns ",["$","code",null,{"children":"1"}]," (or any positive number) if ",["$","code",null,{"children":"valueA"}]," comes after ",["$","code",null,{"children":"valueB"}]]}],"\n",["$","li",null,{"children":["Alternatively, can return a value of the ",["$","code",null,{"children":"PairSorting"}]," enum type"]}],"\n",["$","li",null,{"children":"Is pure, i.e. it must always return the same value for the same pair of values."}],"\n"]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"sort()"}]," always returns a new instance, even if the original was already sorted."]}],"\n",["$","p",null,{"children":"Note: This is always an eager operation."}],"\n",["$","div",null,{"id":"sortBy()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#sortBy()","children":["sortBy()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Like ",["$","code",null,{"children":"sort"}],", but also accepts a ",["$","code",null,{"children":"comparatorValueMapper"}]," which allows for sorting by more sophisticated means."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$28"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"sortBy()"}]," always returns a new instance, even if the original was already sorted."]}],"\n",["$","p",null,{"children":"Note: This is always an eager operation."}],"\n",["$","div",null,{"id":"groupBy()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#groupBy()","children":["groupBy()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a ",["$","code",null,{"children":"Map"}]," of ",["$","code",null,{"children":"Stack"}],", grouped by the return value of the ",["$","code",null,{"children":"grouper"}]," function."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$29"}}]}]]}],"\n",["$","p",null,{"children":"Note: This is not a lazy operation."}],"\n",["$","h2",null,{"children":"Conversion to JavaScript types"}],"\n",["$","div",null,{"id":"toJS()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toJS()","children":["toJS()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Deeply converts this Stack to equivalent native JavaScript Array."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token qualifier\">Deep</span><span class=\"token qualifier\">Copy</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>></span>"}}]}]]}],"\n",["$","div",null,{"id":"toJSON()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toJSON()","children":["toJSON()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Shallowly converts this Stack to equivalent native JavaScript Array."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"toArray()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toArray()","children":["toArray()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Shallowly converts this collection to an Array."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"toObject()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toObject()","children":["toObject()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Shallowly converts this Stack to a JavaScript Object."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token punctuation\">}</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Conversion to Seq"}],"\n",["$","div",null,{"id":"toSeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toSeq()","children":["toSeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a Seq.Indexed of the values of this Stack."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Indexed</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"fromEntrySeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#fromEntrySeq()","children":["fromEntrySeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"If this is a collection of [key, value] entry tuples, it will return a Seq.Keyed of those entries."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">fromEntrySeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Keyed</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"toKeyedSeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toKeyedSeq()","children":["toKeyedSeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a Seq.Keyed from this Stack where indices are treated as keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toKeyedSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Keyed</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"toIndexedSeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toIndexedSeq()","children":["toIndexedSeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a Seq.Indexed of the values of this Stack, discarding keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toIndexedSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Indexed</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"toSetSeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toSetSeq()","children":["toSetSeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a Seq.Set of the values of this Stack, discarding keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toSetSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Set</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","h2",null,{"children":"Combination"}],"\n",["$","div",null,{"id":"interpose()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#interpose()","children":["interpose()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Stack with the separator inserted between each value in this Stack."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">interpose</span><span class=\"token punctuation\">(</span>separator<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"interleave()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#interleave()","children":["interleave()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Stack with the values from each collection interleaved."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">interleave</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>collections<span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token qualifier\">Collection</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">T</span><span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"splice()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#splice()","children":["splice()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Stack by replacing a region of this Stack with new values. If values are not provided, it only skips the region to be removed."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> removeNum<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>values<span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"flatten()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#flatten()","children":["flatten()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new flattened Stack, optionally only flattening to a particular depth."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>depth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>\n<span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>shallow<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","h2",null,{"children":"Search for value"}],"\n",["$","div",null,{"id":"indexOf()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#indexOf()","children":["indexOf()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the first index at which a given value can be found in the Stack, or -1 if it is not present."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>searchValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>"}}]}]]}],"\n",["$","div",null,{"id":"lastIndexOf()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#lastIndexOf()","children":["lastIndexOf()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the last index at which a given value can be found in the Stack, or -1 if it is not present."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span>searchValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>"}}]}]]}],"\n",["$","div",null,{"id":"findIndex()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#findIndex()","children":["findIndex()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the first index in the Stack where a value satisfies the provided predicate function. Otherwise -1 is returned."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>"}}]}]]}],"\n",["$","div",null,{"id":"findLastIndex()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#findLastIndex()","children":["findLastIndex()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the last index in the Stack where a value satisfies the provided predicate function. Otherwise -1 is returned."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">findLastIndex</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>"}}]}]]}],"\n",["$","div",null,{"id":"find()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#find()","children":["find()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns the first value for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$2a"}}]}]]}],"\n",["$","div",null,{"id":"findLast()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#findLast()","children":["findLast()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns the last value for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$2b"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"predicate"}]," will be called for each entry in reverse."]}],"\n",["$","div",null,{"id":"findEntry()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#findEntry()","children":["findEntry()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns the first [key, value] entry for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$2c"}}]}]]}],"\n",["$","div",null,{"id":"findLastEntry()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#findLastEntry()","children":["findLastEntry()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns the last [key, value] entry for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$2d"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"predicate"}]," will be called for each entry in reverse."]}],"\n",["$","div",null,{"id":"findKey()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#findKey()","children":["findKey()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns the first key for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$2e"}}]}]]}],"\n",["$","div",null,{"id":"findLastKey()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#findLastKey()","children":["findLastKey()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns the last key for which the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$2f"}}]}]]}],"\n",["$","p",null,{"children":["Note: ",["$","code",null,{"children":"predicate"}]," will be called for each entry in reverse."]}],"\n",["$","div",null,{"id":"keyOf()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#keyOf()","children":["keyOf()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the key associated with the search value, or undefined."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">keyOf</span><span class=\"token punctuation\">(</span>searchValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span>"}}]}]]}],"\n",["$","div",null,{"id":"lastKeyOf()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#lastKeyOf()","children":["lastKeyOf()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the last key associated with the search value, or undefined."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">lastKeyOf</span><span class=\"token punctuation\">(</span>searchValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span>"}}]}]]}],"\n",["$","div",null,{"id":"max()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#max()","children":["max()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the maximum value in this collection. If any values are comparatively equivalent, the first one found will be returned."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">max</span><span class=\"token punctuation\">(</span>comparator<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Comparator</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span>"}}]}]]}],"\n",["$","div",null,{"id":"maxBy()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#maxBy()","children":["maxBy()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Like ",["$","code",null,{"children":"max"}],", but also accepts a ",["$","code",null,{"children":"comparatorValueMapper"}]," which allows for comparing by more sophisticated means."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$30"}}]}]]}],"\n",["$","div",null,{"id":"min()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#min()","children":["min()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the minimum value in this collection. If any values are comparatively equivalent, the first one found will be returned."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">min</span><span class=\"token punctuation\">(</span>comparator<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Comparator</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token primitive\">undefined</span>"}}]}]]}],"\n",["$","div",null,{"id":"minBy()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#minBy()","children":["minBy()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Like ",["$","code",null,{"children":"min"}],", but also accepts a ",["$","code",null,{"children":"comparatorValueMapper"}]," which allows for comparing by more sophisticated means."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$31"}}]}]]}],"\n",["$","h2",null,{"children":"Value equality"}],"\n",["$","div",null,{"id":"equals()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#equals()","children":["equals()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if this and the other Collection have value equality, as defined by ",["$","code",null,{"children":"Immutable.is()"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>other<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","p",null,{"children":["Note: This is equivalent to ",["$","code",null,{"children":"Immutable.is(this, other)"}],", but provided to allow for chained expressions."]}],"\n",["$","div",null,{"id":"hashCode()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#hashCode()","children":["hashCode()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Computes and returns the hashed identity for this Collection."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Reading deep values"}],"\n",["$","div",null,{"id":"getIn()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#getIn()","children":["getIn()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the value found by following a path of keys or indices through nested Collections."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">getIn</span><span class=\"token punctuation\">(</span>searchKeyPath<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">unknown</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> notSetValue<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span>"}}]}]]}],"\n",["$","div",null,{"id":"hasIn()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#hasIn()","children":["hasIn()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"True if the result of following a path of keys or indices through nested Collections results in a set value."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">hasIn</span><span class=\"token punctuation\">(</span>searchKeyPath<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">unknown</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Conversion to Collections"}],"\n",["$","div",null,{"id":"toMap()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toMap()","children":["toMap()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Converts this Stack to a Map, Throws if keys are not hashable."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Map</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"toOrderedMap()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toOrderedMap()","children":["toOrderedMap()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Converts this Stack to a Map, maintaining the order of iteration."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toOrderedMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Ordered</span><span class=\"token qualifier\">Map</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"toSet()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toSet()","children":["toSet()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Converts this Stack to a Set, discarding keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Set</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"toOrderedSet()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toOrderedSet()","children":["toOrderedSet()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Converts this Stack to a Set, maintaining the order of iteration and discarding keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toOrderedSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Ordered</span><span class=\"token qualifier\">Set</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"toList()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toList()","children":["toList()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Converts this Stack to a List, discarding keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">List</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"toStack()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toStack()","children":["toStack()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns itself."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toStack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","h2",null,{"children":"Iterators"}],"\n",["$","div",null,{"id":"keys()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#keys()","children":["keys()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"An iterator of this Stack's keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token qualifier\">Iterator</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"values()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#values()","children":["values()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"An iterator of this Stack's values."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token qualifier\">Iterator</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"entries()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#entries()","children":["entries()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"An iterator of this Stack's entries as [key, value] tuples."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token qualifier\">Iterator</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","h2",null,{"children":"Collections (Seq)"}],"\n",["$","div",null,{"id":"keySeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#keySeq()","children":["keySeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq.Indexed of the keys of this Stack, discarding values."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">keySeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Indexed</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"valueSeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#valueSeq()","children":["valueSeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns an Seq.Indexed of the values of this Stack, discarding keys."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">valueSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Indexed</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"entrySeq()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#entrySeq()","children":["entrySeq()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Seq.Indexed of [key, value] tuples."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">entrySeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Indexed</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","h2",null,{"children":"Side effects"}],"\n",["$","div",null,{"id":"forEach()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#forEach()","children":["forEach()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["The ",["$","code",null,{"children":"sideEffect"}]," is executed for every entry in the Stack."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">sideEffect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Creating subsets"}],"\n",["$","div",null,{"id":"slice()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#slice()","children":["slice()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Stack representing a portion of this Stack from start up to but not including end."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>begin<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"rest()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#rest()","children":["rest()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Stack containing all entries except the first."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">rest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"butLast()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#butLast()","children":["butLast()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new Stack containing all entries except the last."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">butLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"skip()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#skip()","children":["skip()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack which excludes the first ",["$","code",null,{"children":"amount"}]," entries from this Stack."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">skip</span><span class=\"token punctuation\">(</span>amount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"skipLast()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#skipLast()","children":["skipLast()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack which excludes the last ",["$","code",null,{"children":"amount"}]," entries from this Stack."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">skipLast</span><span class=\"token punctuation\">(</span>amount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"skipWhile()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#skipWhile()","children":["skipWhile()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack which includes entries starting from when ",["$","code",null,{"children":"predicate"}]," first returns false."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$32"}}]}]]}],"\n",["$","div",null,{"id":"skipUntil()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#skipUntil()","children":["skipUntil()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack which includes entries starting from when ",["$","code",null,{"children":"predicate"}]," first returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$33"}}]}]]}],"\n",["$","div",null,{"id":"take()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#take()","children":["take()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack which includes the first ",["$","code",null,{"children":"amount"}]," entries from this Stack."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">take</span><span class=\"token punctuation\">(</span>amount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"takeLast()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#takeLast()","children":["takeLast()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack which includes the last ",["$","code",null,{"children":"amount"}]," entries from this Stack."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">takeLast</span><span class=\"token punctuation\">(</span>amount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>"}}]}]]}],"\n",["$","div",null,{"id":"takeWhile()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#takeWhile()","children":["takeWhile()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack which includes entries from this Stack as long as the ",["$","code",null,{"children":"predicate"}]," returns true."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$34"}}]}]]}],"\n",["$","div",null,{"id":"takeUntil()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#takeUntil()","children":["takeUntil()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a new Stack which includes entries from this Stack as long as the ",["$","code",null,{"children":"predicate"}]," returns false."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$35"}}]}]]}],"\n",["$","h2",null,{"children":"Reducing a value"}],"\n",["$","div",null,{"id":"reduce()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#reduce()","children":["reduce()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Reduces the Stack to a value by calling the ",["$","code",null,{"children":"reducer"}]," for every entry in the Stack and passing along the reduced value."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$36"}}]}]]}],"\n",["$","div",null,{"id":"reduceRight()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#reduceRight()","children":["reduceRight()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Reduces the Stack in reverse (from the right side)."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$37"}}]}]]}],"\n",["$","div",null,{"id":"every()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#every()","children":["every()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if ",["$","code",null,{"children":"predicate"}]," returns true for all entries in the Stack."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","div",null,{"id":"some()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#some()","children":["some()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if ",["$","code",null,{"children":"predicate"}]," returns true for any entry in the Stack."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">predicate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> iter<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","div",null,{"id":"join()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#join()","children":["join()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Joins values together as a string, inserting a separator between each. The default separator is ",["$","code",null,{"children":"\",\""}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">join</span><span class=\"token punctuation\">(</span>separator<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>"}}]}]]}],"\n",["$","div",null,{"id":"isEmpty()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#isEmpty()","children":["isEmpty()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns true if this Stack includes no values."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","div",null,{"id":"count()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#count()","children":["count()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns the size of this Stack."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$38"}}]}]]}],"\n",["$","div",null,{"id":"countBy()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#countBy()","children":["countBy()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Returns a ",["$","code",null,{"children":"Map"}]," of counts, grouped by the return value of the ",["$","code",null,{"children":"grouper"}]," function."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$39"}}]}]]}],"\n",["$","h2",null,{"children":"Comparison"}],"\n",["$","div",null,{"id":"isSubset()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#isSubset()","children":["isSubset()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if ",["$","code",null,{"children":"iter"}]," includes every value in this Stack."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">isSubset</span><span class=\"token punctuation\">(</span>iter<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","div",null,{"id":"isSuperset()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#isSuperset()","children":["isSuperset()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["True if this Stack includes every value in ",["$","code",null,{"children":"iter"}],"."]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">isSuperset</span><span class=\"token punctuation\">(</span>iter<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}]],";"]}]]}]
