1:"$Sreact.fragment"
2:I[2708,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"WorkerContextProvider"]
3:I[4620,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
4:I[81105,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
5:I[86240,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/c63eea34c69bde5e.js"],"default"]
8:I[83822,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"MetadataBoundary"]
a:I[83822,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"OutletBoundary"]
d:I[2541,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"AsyncMetadataOutlet"]
f:I[83822,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"ViewportBoundary"]
11:I[12447,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"default"]
:HL["/_next/static/chunks/e4e9bf2592495c32.css","style"]
:HL["/_next/static/chunks/916b61d823ab5683.css","style"]
:HL["/_next/static/chunks/bcfc9332aea241e3.css","style"]
0:{"P":null,"b":"G3eDH9IJTV2VKkBS7bVZc","p":"","c":["","docs","v5","Record",""],"i":false,"f":[[["",{"children":["docs",{"children":["v5",{"children":[["type","Record","d"],{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/e4e9bf2592495c32.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/1d2d43591a84e045.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/0f63189634a29548.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"pageBody","children":[["$","h2",null,{"children":"Not Found"}],["$","p",null,{"children":"Could not find requested resource"}],["$","$L5",null,{"href":"/","children":"Return Home"}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]]}],{"children":["docs",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["v5",["$","$1","c",{"children":[[["$","script","script-0",{"src":"/_next/static/chunks/1398221593ec8d74.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/cffb7d8f6d5ddd81.js","async":true,"nonce":"$undefined"}]],"$L6"]}],{"children":[["type","Record","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7",["$","$L8",null,{"children":"$L9"}],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/916b61d823ab5683.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/chunks/bcfc9332aea241e3.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/6f266201d19c8fe9.js","async":true,"nonce":"$undefined"}],["$","script","script-1",{"src":"/_next/static/chunks/8069937d345a5c75.js","async":true,"nonce":"$undefined"}],["$","script","script-2",{"src":"/_next/static/chunks/719e3bb2e71018da.js","async":true,"nonce":"$undefined"}]],["$","$La",null,{"children":["$Lb","$Lc",["$","$Ld",null,{"promise":"$@e"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","xFXfnTyMpOCOdu-2scQ1W",{"children":[["$","$Lf",null,{"children":"$L10"}],null]}],null]}],false]],"m":"$undefined","G":["$11","$undefined"],"s":false,"S":true}
12:I[85995,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"ImmutableConsole"]
13:I[91842,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"HeaderLogoLink"]
14:I[91842,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"HeaderLinks"]
15:I[55958,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js"],"default"]
16:"$Sreact.suspense"
17:I[2541,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js"],"AsyncMetadata"]
6:["$","div",null,{"children":[["$","$L12",null,{"version":"v5"}],["$","div",null,{"className":"header","children":["$","div",null,{"className":"miniHeader","children":[["$","div",null,{"className":"miniHeaderContents","children":[["$","$L13",null,{}],["$","$L14",null,{"versions":["v5","v4.3.7","v3.8.2"],"currentVersion":"v5"}]]}],["$","$L15",null,{}]]}]}],["$","div",null,{"className":"pageBody","children":["$","div",null,{"className":"contents","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]
9:["$","$16",null,{"fallback":null,"children":["$","$L17",null,{"promise":"$@18"}]}]
c:null
10:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
b:null
18:{"metadata":[["$","title","0",{"children":"Record â€” Immutable.js"}],["$","link","1",{"rel":"icon","href":"/favicon.png"}]],"error":null,"digest":"$undefined"}
e:{"metadata":"$18:metadata","error":null,"digest":"$undefined"}
19:I[26602,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js","/_next/static/chunks/6f266201d19c8fe9.js","/_next/static/chunks/8069937d345a5c75.js","/_next/static/chunks/719e3bb2e71018da.js"],"default"]
1a:I[75543,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js","/_next/static/chunks/6f266201d19c8fe9.js","/_next/static/chunks/8069937d345a5c75.js","/_next/static/chunks/719e3bb2e71018da.js"],"DocSearch"]
1b:I[56123,["/_next/static/chunks/1d2d43591a84e045.js","/_next/static/chunks/0f63189634a29548.js","/_next/static/chunks/1398221593ec8d74.js","/_next/static/chunks/cffb7d8f6d5ddd81.js","/_next/static/chunks/6f266201d19c8fe9.js","/_next/static/chunks/8069937d345a5c75.js","/_next/static/chunks/719e3bb2e71018da.js"],"default"]
1c:T4b6,myRecord<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
myRecord<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
<span class="token keyword">const</span> myRecordWithoutB <span class="token operator">=</span> myRecord<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
myRecordWithoutB<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>1d:Te8d,<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> <span class="token qualifier">Record</span><span class="token qualifier">Factory</span><span class="token punctuation">,</span> <span class="token qualifier">Record</span><span class="token qualifier">Of</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'immutable'</span><span class="token punctuation">;</span>

<span class="token comment">// Use RecordFactory&lt;TProps> for defining new Record factory functions.</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token qualifier">Point3</span>DProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> defaultValues<span class="token operator">:</span> <span class="token qualifier">Point3</span>DProps <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> makePoint3D<span class="token operator">:</span> <span class="token qualifier">Record</span><span class="token qualifier">Factory</span><span class="token operator">&lt;</span><span class="token qualifier">Point3</span>DProps<span class="token operator">></span> <span class="token operator">=</span> <span class="token function">Record</span><span class="token punctuation">(</span>defaultValues<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> makePoint3D<span class="token punctuation">;</span>

<span class="token comment">// Use RecordOf&lt;T> for defining new instances of that Record.</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name"><span class="token qualifier">Point3</span>D</span> <span class="token operator">=</span> <span class="token qualifier">Record</span><span class="token qualifier">Of</span><span class="token operator">&lt;</span><span class="token qualifier">Point3</span>DProps<span class="token operator">></span><span class="token punctuation">;</span>
<span class="token keyword">const</span> some3DPoint<span class="token operator">:</span> <span class="token qualifier">Point3</span>D <span class="token operator">=</span> <span class="token function">makePoint3D</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>1e:Tce2,<span class="token keyword">type</span> <span class="token class-name"><span class="token qualifier">Person</span><span class="token qualifier">Props</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> defaultValues<span class="token operator">:</span> <span class="token qualifier">Person</span><span class="token qualifier">Props</span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Aristotle'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">2400</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token qualifier">Person</span><span class="token qualifier">Record</span> <span class="token operator">=</span> <span class="token function">Record</span><span class="token punctuation">(</span>defaultValues<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name"><span class="token qualifier">Person</span></span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token qualifier">Person</span><span class="token qualifier">Record</span><span class="token operator">&lt;</span><span class="token qualifier">Person</span><span class="token qualifier">Props</span><span class="token operator">></span></span> <span class="token punctuation">{</span>
  <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token var">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token var">this</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token var">this</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>1f:T492,<span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">K</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> TProps<span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span>
<span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> notSetValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span>20:T496,<span class="token generic-function"><span class="token function">getIn</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">K</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> TProps<span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span>
<span class="token generic-function"><span class="token function">getIn</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> notSetValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span>21:T42a,<span class="token generic-function"><span class="token function">update</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">K</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> <span class="token function-variable function">updater</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> TProps<span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> TProps<span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">;</span>22:T4a1,<span class="token function">mergeWith</span><span class="token punctuation">(</span>
  <span class="token function-variable function">merger</span><span class="token operator">:</span> <span class="token punctuation">(</span>oldVal<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> newVal<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token keyword">keyof</span> TProps<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>collections<span class="token operator">:</span> <span class="token qualifier">Array</span><span class="token operator">&lt;</span><span class="token qualifier">Partial</span><span class="token operator">&lt;</span>TProps<span class="token operator">>></span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">;</span>23:T4a0,<span class="token function">mergeDeepWith</span><span class="token punctuation">(</span>
  <span class="token function-variable function">merger</span><span class="token operator">:</span> <span class="token punctuation">(</span>oldVal<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> newVal<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>collections<span class="token operator">:</span> <span class="token qualifier">Array</span><span class="token operator">&lt;</span><span class="token qualifier">Partial</span><span class="token operator">&lt;</span>TProps<span class="token operator">>></span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token var">this</span><span class="token punctuation">;</span>7:["$","div",null,{"className":"contents","children":[["$","$L19",null,{"focus":[{"qualifiedName":"Construction","label":"Construction","functions":{"Record()":{"label":"Record()","url":"#Record()"}}},{"qualifiedName":"Static methods","label":"Static methods","functions":{"Record.isRecord()":{"label":"Record.isRecord()","url":"#Record.isRecord()"},"Record.getDescriptiveName()":{"label":"Record.getDescriptiveName()","url":"#Record.getDescriptiveName()"}}},{"qualifiedName":"Reading values","label":"Reading values","functions":{"has()":{"label":"has()","url":"#has()"},"get()":{"label":"get()","url":"#get()"}}},{"qualifiedName":"Reading deep values","label":"Reading deep values","functions":{"hasIn":{"label":"hasIn","url":"#hasIn"},"getIn()":{"label":"getIn()","url":"#getIn()"}}},{"qualifiedName":"Value equality","label":"Value equality","functions":{"equals":{"label":"equals","url":"#equals"},"hashCode":{"label":"hashCode","url":"#hashCode"}}},{"qualifiedName":"Persistent changes","label":"Persistent changes","functions":{"set":{"label":"set","url":"#set"},"update":{"label":"update","url":"#update"},"merge":{"label":"merge","url":"#merge"},"mergeDeep":{"label":"mergeDeep","url":"#mergeDeep"},"mergeWith":{"label":"mergeWith","url":"#mergeWith"},"mergeDeepWith":{"label":"mergeDeepWith","url":"#mergeDeepWith"},"delete":{"label":"delete","url":"#delete"},"clear":{"label":"clear","url":"#clear"}}},{"qualifiedName":"Deep persistent changes","label":"Deep persistent changes","functions":{"setIn":{"label":"setIn","url":"#setIn"},"updateIn":{"label":"updateIn","url":"#updateIn"},"mergeIn":{"label":"mergeIn","url":"#mergeIn"},"mergeDeepIn":{"label":"mergeDeepIn","url":"#mergeDeepIn"},"deleteIn":{"label":"deleteIn","url":"#deleteIn"}}},{"qualifiedName":"Conversion to JavaScript types","label":"Conversion to JavaScript types","functions":{"toJS":{"label":"toJS","url":"#toJS"},"toJSON":{"label":"toJSON","url":"#toJSON"},"toObject":{"label":"toObject","url":"#toObject"}}},{"qualifiedName":"Transient changes","label":"Transient changes","functions":{"withMutations":{"label":"withMutations","url":"#withMutations"},"asMutable":{"label":"asMutable","url":"#asMutable"},"wasAltered":{"label":"wasAltered","url":"#wasAltered"},"asImmutable":{"label":"asImmutable","url":"#asImmutable"}}},{"qualifiedName":"Sequence algorithms","label":"Sequence algorithms","functions":{"toSeq":{"label":"toSeq","url":"#toSeq"}}}],"activeType":"Record"}],["$","div",null,{"className":"docContents","children":[["$","$L1a",null,{}],[["$","h1",null,{"children":"Record"}],"\n",["$","p",null,{"children":"A record is similar to a JS object, but enforces a specific set of allowed string keys, and has default values."}],"\n",["$","p",null,{"children":["The ",["$","code",null,{"children":"Record()"}]," function produces new Record Factories, which when called create Record instances."]}],"\n",["$","$L1b",null,{"defaultValue":"const ABRecord = Record({ a: 1, b: 2 });\nconst myRecord = ABRecord({ b: 3 });\nmyRecord"}],"\n",["$","p",null,{"children":["Records always have a value for the keys they define. ",["$","code",null,{"children":"remove"}],"ing a key from a record simply resets it to the default value for that key."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"$1c"}}]}],"\n",["$","p",null,{"children":"Values provided to the constructor not found in the Record type will be ignored. For example, in this case, ABRecord is provided a key \"x\" even though only \"a\" and \"b\" have been defined. The value for \"x\" will be ignored for this record."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"<span class=\"token keyword\">const</span> myRecord <span class=\"token operator\">=</span> <span class=\"token function\">ABRecord</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyRecord<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>"}}]}],"\n",["$","p",null,{"children":"Because Records have a known set of string keys, property get access works as expected, however property sets will throw an Error."}],"\n",["$","p",null,{"children":["Note: IE8 does not support property access. Only use ",["$","code",null,{"children":"get()"}]," when supporting IE8."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-js","dangerouslySetInnerHTML":{"__html":"myRecord<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\nmyRecord<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws Error</span>"}}]}],"\n",["$","p",null,{"children":"Record Types can be extended as well, allowing for custom methods on your Record. This is not a common pattern in functional environments, but is in many JS programs."}],"\n",["$","p",null,{"children":"However Record Types are more restricted than typical JavaScript classes. They do not use a class constructor, which also means they cannot use class properties (since those are technically part of a constructor)."}],"\n",["$","p",null,{"children":["While Record Types can be syntactically created with the JavaScript ",["$","code",null,{"children":"class"}]," form, the resulting Record function is actually a factory function, not a class constructor. Even though Record Types are not classes, JavaScript currently requires the use of ",["$","code",null,{"children":"new"}]," when creating new Record instances if they are defined as a ",["$","code",null,{"children":"class"}],"."]}],"\n",["$","$L1b",null,{"defaultValue":"class ABRecord extends Record({ a: 1, b: 2 }) {\n  getAB() {\n  return this.a + this.b;\n  }\n}\n\nvar myRecord = new ABRecord({b: 3})\nmyRecord.getAB()"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Typing Records:"}]}],"\n",["$","p",null,{"children":["Immutable.js exports two types designed to make it easier to use Records with typed code, ",["$","code",null,{"children":"RecordOf<TProps>"}]," and ",["$","code",null,{"children":"RecordFactory<TProps>"}],"."]}],"\n",["$","p",null,{"children":["When defining a new kind of Record factory function, use a type that describes the values the record contains along with ",["$","code",null,{"children":"RecordFactory<TProps>"}],". To type instances of the Record (which the factory function returns), use ",["$","code",null,{"children":"RecordOf<TProps>"}],"."]}],"\n",["$","p",null,{"children":"Typically, new Record definitions will export both the Record factory function as well as the Record instance type for use in other code."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-ts","dangerouslySetInnerHTML":{"__html":"$1d"}}]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Typing Record Subclasses:"}]}],"\n",["$","p",null,{"children":"Records can be subclassed as a means to add additional methods to Record instances. This is generally discouraged in favor of a more functional API, since Subclasses have some minor overhead. However the ability to create a rich API on Record types can be quite valuable."}],"\n",["$","p",null,{"children":["When typing Subclasses, do not use ",["$","code",null,{"children":"RecordFactory<TProps>"}],", instead apply the props type when subclassing:"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"codeBlock language-ts","dangerouslySetInnerHTML":{"__html":"$1e"}}]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Choosing Records vs plain JavaScript objects"}]}],"\n",["$","p",null,{"children":["Records offer a persistently immutable alternative to plain JavaScript objects, however they're not required to be used within Immutable.js collections. In fact, the deep-access and deep-updating functions like ",["$","code",null,{"children":"getIn()"}]," and ",["$","code",null,{"children":"setIn()"}]," work with plain JavaScript Objects as well."]}],"\n",["$","p",null,{"children":"Deciding to use Records or Objects in your application should be informed by the tradeoffs and relative benefits of each:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","em",null,{"children":"Runtime immutability"}],": plain JS objects may be carefully treated as immutable, however Record instances will ",["$","em",null,{"children":"throw"}]," if attempted to be mutated directly. Records provide this additional guarantee, however at some marginal runtime cost. While JS objects are mutable by nature, the use of type-checking tools like TypeScript or ",["$","a",null,{"href":"https://medium.com/@gcanti/immutability-with-flow-faa050a1aef4","children":"Flow"}]," can help gain confidence in code written to favor immutability."]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","em",null,{"children":"Value equality"}],": Records use value equality when compared with ",["$","code",null,{"children":"is()"}]," or ",["$","code",null,{"children":"record.equals()"}],". That is, two Records with the same keys and values are equal. Plain objects use ",["$","em",null,{"children":"reference equality"}],". Two objects with the same keys and values are not equal since they are different objects. This is important to consider when using objects as keys in a ",["$","code",null,{"children":"Map"}]," or\nvalues in a ",["$","code",null,{"children":"Set"}],", which use equality when retrieving values."]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","em",null,{"children":"API methods"}],": Records have a full featured API, with methods like ",["$","code",null,{"children":".getIn()"}],", and ",["$","code",null,{"children":".equals()"}],". These can make working with these values easier, but comes at the cost of not allowing keys with those names."]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","em",null,{"children":"Default values"}],": Records provide default values for every key, which can be useful when constructing Records with often unchanging values. However default values can make using Flow and TypeScript more laborious."]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","em",null,{"children":"Serialization"}],": Records use a custom internal representation to efficiently store and update their values. Converting to and from this form isn't free. If converting Records to plain objects is common, consider sticking with plain objects to begin with."]}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"children":"Construction"}],"\n",["$","div",null,{"id":"Record()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#Record()","children":["Record()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token generic-function\"><span class=\"token function\">Record</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>TProps<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>defaultValues<span class=\"token operator\">:</span> TProps<span class=\"token punctuation\">,</span> name<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Record</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Factory</span><span class=\"token operator\">&lt;</span>TProps<span class=\"token operator\">></span>"}}]}]]}],"\n",["$","h2",null,{"children":"Static methods"}],"\n",["$","div",null,{"id":"Record.isRecord()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#Record.isRecord()","children":["Record.isRecord()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token qualifier\">Record</span><span class=\"token punctuation\">.</span><span class=\"token function\">isRecord</span><span class=\"token punctuation\">(</span>maybeRecord<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","div",null,{"id":"Record.getDescriptiveName()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#Record.getDescriptiveName()","children":["Record.getDescriptiveName()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token qualifier\">Record</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDescriptiveName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Reading values"}],"\n",["$","div",null,{"id":"has()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#has()","children":["has()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">has</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","div",null,{"id":"get()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#get()","children":["get()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$1f"}}]}]]}],"\n",["$","h2",null,{"children":"Reading deep values"}],"\n",["$","div",null,{"id":"hasIn","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#hasIn","children":["hasIn",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">hasIn</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","div",null,{"id":"getIn()","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#getIn()","children":["getIn()",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$20"}}]}]]}],"\n",["$","h2",null,{"children":"Value equality"}],"\n",["$","div",null,{"id":"equals","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#equals","children":["equals",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>other<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","div",null,{"id":"hashCode","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#hashCode","children":["hashCode",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Persistent changes"}],"\n",["$","div",null,{"id":"set","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#set","children":["set",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token generic-function\"><span class=\"token function\">set</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> TProps<span class=\"token punctuation\">[</span><span class=\"token constant\">K</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span>"}}]}]]}],"\n",["$","div",null,{"id":"update","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#update","children":["update",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$21"}}]}]]}],"\n",["$","div",null,{"id":"merge","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#merge","children":["merge",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">merge</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>collections<span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token qualifier\">Partial</span><span class=\"token operator\">&lt;</span>TProps<span class=\"token operator\">>>></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span>"}}]}]]}],"\n",["$","div",null,{"id":"mergeDeep","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#mergeDeep","children":["mergeDeep",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">mergeDeep</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>collections<span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token qualifier\">Partial</span><span class=\"token operator\">&lt;</span>TProps<span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"mergeWith","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#mergeWith","children":["mergeWith",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$22"}}]}]]}],"\n",["$","div",null,{"id":"mergeDeepWith","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#mergeDeepWith","children":["mergeDeepWith",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"$23"}}]}]]}],"\n",["$","div",null,{"id":"delete","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#delete","children":["delete",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],[["$","h4",null,{"className":"infoHeader","children":"Alias:"}],["$","code",null,{"children":"remove"}]]]}],"\n",["$","p",null,{"children":"Returns a new instance of this Record type with the value for the specific key set to its default value."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token generic-function\"><span class=\"token function\">delete</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">K</span> <span class=\"token keyword\">extends</span> <span class=\"token keyword\">keyof</span> TProps<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"clear","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#clear","children":["clear",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Returns a new instance of this Record type with all values set to their default values."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Deep persistent changes"}],"\n",["$","div",null,{"id":"setIn","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#setIn","children":["setIn",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">setIn</span><span class=\"token punctuation\">(</span>keyPath<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"updateIn","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#updateIn","children":["updateIn",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">updateIn</span><span class=\"token punctuation\">(</span>keyPath<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">updater</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"mergeIn","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#mergeIn","children":["mergeIn",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">mergeIn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>collections<span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token qualifier\">Partial</span><span class=\"token operator\">&lt;</span>TProps<span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"mergeDeepIn","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#mergeDeepIn","children":["mergeDeepIn",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">mergeDeepIn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>collections<span class=\"token operator\">:</span> <span class=\"token qualifier\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token qualifier\">Partial</span><span class=\"token operator\">&lt;</span>TProps<span class=\"token operator\">>></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"deleteIn","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#deleteIn","children":["deleteIn",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],[["$","h4",null,{"className":"infoHeader","children":"Alias:"}],["$","code",null,{"children":"removeIn"}]]]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">deleteIn</span><span class=\"token punctuation\">(</span>keyPath<span class=\"token operator\">:</span> <span class=\"token qualifier\">Iterable</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">unknown</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Conversion to JavaScript types"}],"\n",["$","div",null,{"id":"toJS","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toJS","children":["toJS",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Deeply converts this Record to equivalent native JavaScript Object."}],"\n",["$","p",null,{"children":"Note: This method may not be overridden. Objects with custom serialization to plain JS may override toJSON() instead."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Deep</span><span class=\"token qualifier\">Copy</span><span class=\"token operator\">&lt;</span>TProps<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"toJSON","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toJSON","children":["toJSON",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Shallowly converts this Record to equivalent native JavaScript Object."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TProps<span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"toObject","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toObject","children":["toObject",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":"Shallowly converts this Record to equivalent JavaScript Object."}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> TProps<span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Transient changes"}],"\n",["$","div",null,{"id":"withMutations","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#withMutations","children":["withMutations",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["Note: Not all methods can be used on a mutable collection or within ",["$","code",null,{"children":"withMutations"}],"! Only ",["$","code",null,{"children":"set"}]," may be used mutatively."]}],"\n",["$","p",null,{"children":["See ",["$","a",null,{"href":"../Map#withMutations","children":["$","code",null,{"children":"Map#withMutations"}]}]]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">withMutations</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">mutator</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>mutable<span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"asMutable","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#asMutable","children":["asMutable",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["See ",["$","a",null,{"href":"../Map#asMutable","children":["$","code",null,{"children":"Map#asMutable"}]}]]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">asMutable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","div",null,{"id":"wasAltered","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#wasAltered","children":["wasAltered",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["See ",["$","a",null,{"href":"../Map#wasAltered","children":["$","code",null,{"children":"Map#wasAltered"}]}]]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">wasAltered</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>"}}]}]]}],"\n",["$","div",null,{"id":"asImmutable","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#asImmutable","children":["asImmutable",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","p",null,{"children":["See ",["$","a",null,{"href":"../Map#asImmutable","children":["$","code",null,{"children":"Map#asImmutable"}]}]]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">asImmutable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token var\">this</span><span class=\"token punctuation\">;</span>"}}]}]]}],"\n",["$","h2",null,{"children":"Sequence algorithms"}],"\n",["$","div",null,{"id":"toSeq","children":[["$","h3",null,{"className":"memberLabel","children":["$","a",null,{"className":"anchor","href":"#toSeq","children":["toSeq",["$","span",null,{"className":"anchorLink","children":"Â§"}]]}]}],"$undefined"]}],"\n",["$","div",null,{"children":[["$","h4",null,{"children":"Method signature"}],["$","pre",null,{"children":["$","code",null,{"className":"codeBlock memberSignature","dangerouslySetInnerHTML":{"__html":"<span class=\"token function\">toSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token qualifier\">Seq</span><span class=\"token punctuation\">.</span><span class=\"token qualifier\">Keyed</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">keyof</span> TProps<span class=\"token punctuation\">,</span> TProps<span class=\"token punctuation\">[</span><span class=\"token keyword\">keyof</span> TProps<span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>"}}]}]]}]],";"]}]]}]
