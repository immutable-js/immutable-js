{"version":3,"sources":["turbopack:///[project]/node_modules/next/navigation.js","turbopack:///[project]/website/src/MarkdownContent.tsx","turbopack:///[project]/website/src/app/docs/[version]/collectMemberGroups.ts","turbopack:///[project]/website/src/app/docs/[version]/SidebarV4.tsx","turbopack:///[project]/website/src/app/docs/[version]/TypeDefs.ts","turbopack:///[project]/website/src/app/docs/[version]/Defs.tsx","turbopack:///[project]/website/src/app/docs/[version]/MemberDoc.tsx","turbopack:///[project]/website/src/app/docs/[version]/[type]/TypeDocumentation.tsx"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n","'use client';\n\nimport { useRouter } from 'next/navigation';\nimport { MouseEvent, memo } from 'react';\n\ntype Props = {\n  contents: string;\n  className?: string;\n};\n\n// eslint-disable-next-line prefer-arrow-callback\nexport const MarkdownContent = memo<Props>(function MarkdownContent({\n  contents,\n  className,\n}) {\n  const router = useRouter();\n\n  const handleClick = (event: MouseEvent) => {\n    const link = event.target as HTMLAnchorElement;\n    if (link.tagName === 'A' && link.target !== '_blank') {\n      event.preventDefault();\n      router.push(link.href);\n    }\n  };\n\n  return (\n    <div\n      className={'markdown ' + (className || '')}\n      onClick={handleClick}\n      dangerouslySetInnerHTML={{ __html: contents }}\n    />\n  );\n});\n","import type { InterfaceDefinition, MemberDefinition } from './TypeDefs';\n\nexport function collectMemberGroups(\n  interfaceDef: InterfaceDefinition | undefined,\n  showInGroups?: boolean,\n  showInherited?: boolean\n): Array<[groupTitle: string, members: Array<MemberDefinition>]> {\n  const groups: { [groupTitle: string]: Array<MemberDefinition> } = {};\n\n  const members = interfaceDef?.members\n    ? Object.values(interfaceDef.members)\n    : [];\n\n  if (!showInGroups) {\n    members.sort((a, b) => (a.id > b.id ? 1 : -1));\n  }\n\n  for (const member of members) {\n    const groupTitle = (showInGroups && member.group) || '';\n    if (showInherited || !member.inherited) {\n      (groups[groupTitle] || (groups[groupTitle] = [])).push(member);\n    }\n  }\n\n  return Object.entries(groups);\n}\n","'use client';\n\nimport Link from 'next/link';\nimport { Fragment, useEffect, useState } from 'react';\nimport { ArrowDown } from '../../../ArrowDown';\nimport { SidebarLinks } from '../../../sidebar';\nimport { SIDEBAR_LINKS } from '../currentVersion';\nimport type { TypeDefinition } from './TypeDefs';\nimport { collectMemberGroups } from './collectMemberGroups';\n\nfunction Links({\n  links,\n  focus,\n  showInGroups,\n  showInherited,\n}: {\n  links: SidebarLinks;\n  focus?: TypeDefinition;\n  showInGroups?: boolean;\n  showInherited?: boolean;\n}) {\n  const [isForcedClosed, setIsForcedClosed] = useState(false);\n  useEffect(() => {\n    setIsForcedClosed(false);\n  }, [focus?.label]);\n\n  return (\n    <div>\n      <h2>Immutable.js</h2>\n      {links.map((link) => {\n        const isCurrent = focus?.label === link.label;\n        const isActive = isCurrent && !isForcedClosed;\n        return (\n          <Fragment key={link.url}>\n            <div\n              className={`sideBar__Link ${\n                isActive ? 'sideBar__Link--active' : ''\n              }`}\n            >\n              <Link\n                href={link.url}\n                onClick={(e) => {\n                  if (isCurrent) {\n                    e.preventDefault();\n                    setIsForcedClosed(!isForcedClosed);\n                  }\n                }}\n              >\n                {link.label}\n                {isActive && (focus?.interface || focus?.functions) && (\n                  <>\n                    {' '}\n                    <ArrowDown isActive={isActive} />\n                  </>\n                )}\n              </Link>\n            </div>\n\n            {isActive && (\n              <Focus\n                focus={focus}\n                showInherited={showInherited}\n                showInGroups={showInGroups}\n              />\n            )}\n          </Fragment>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction Focus({\n  focus,\n  showInGroups,\n  showInherited,\n}: {\n  focus?: TypeDefinition;\n  showInGroups?: boolean;\n  showInherited?: boolean;\n}) {\n  if (!focus || (!focus.interface && !focus.functions)) {\n    return null;\n  }\n\n  return (\n    <div className=\"members\">\n      {focus.call && (\n        <section>\n          <h4 className=\"groupTitle\">Construction</h4>\n          <div>\n            <Link href={focus.call.url}>{focus.call.label}</Link>\n          </div>\n        </section>\n      )}\n\n      {focus.functions && (\n        <section>\n          <h4 className=\"groupTitle\">Static Methods</h4>\n          {Object.values(focus.functions).map((fn) => (\n            <div key={fn.id}>\n              <Link href={fn.url}>{fn.label}</Link>\n            </div>\n          ))}\n        </section>\n      )}\n\n      <section>\n        {collectMemberGroups(\n          focus.interface,\n          showInGroups,\n          showInherited\n        ).flatMap(([title, groupMembers]) =>\n          groupMembers.length === 0\n            ? null\n            : [\n                <h4 key={title || 'Members'} className=\"groupTitle\">\n                  {title || 'Members'}\n                </h4>,\n                groupMembers.map((member) => (\n                  <div key={member.id}>\n                    <Link href={member.url}>{member.label}</Link>\n                  </div>\n                )),\n              ]\n        )}\n      </section>\n    </div>\n  );\n}\n\nexport function SideBarV4({\n  links = SIDEBAR_LINKS,\n  focus,\n  toggleShowInherited,\n  toggleShowInGroups,\n  showInherited,\n  showInGroups,\n}: {\n  links?: SidebarLinks;\n  focus?: TypeDefinition;\n  toggleShowInherited?: () => void;\n  toggleShowInGroups?: () => void;\n  showInherited?: boolean;\n  showInGroups?: boolean;\n}) {\n  return (\n    <div className=\"sideBar\">\n      <div className=\"sideBar__background\" />\n      <div className=\"scrollContent\">\n        {toggleShowInherited && toggleShowInGroups && (\n          <div className=\"toolBar\">\n            <div onClick={toggleShowInGroups} onKeyPress={toggleShowInGroups}>\n              <span className={showInGroups ? 'selected' : undefined}>\n                Grouped\n              </span>\n              {' • '}\n              <span className={!showInGroups ? 'selected' : undefined}>\n                Alphabetized\n              </span>\n            </div>\n            <div onClick={toggleShowInherited} onKeyPress={toggleShowInherited}>\n              <span className={showInherited ? 'selected' : undefined}>\n                Inherited\n              </span>\n              {' • '}\n              <span className={!showInherited ? 'selected' : undefined}>\n                Defined\n              </span>\n            </div>\n          </div>\n        )}\n        <Links\n          links={links}\n          focus={focus}\n          showInGroups={showInGroups}\n          showInherited={showInherited}\n        />\n      </div>\n    </div>\n  );\n}\n","export type TypeDefs = {\n  version: string;\n  doc?: TypeDoc;\n  types: { [name: string]: TypeDefinition };\n};\n\nexport type TypeDefinition = {\n  qualifiedName: string;\n  label: string; // Like a name, but with () for callables.\n  url: string;\n  doc?: TypeDoc;\n  call?: MemberDefinition;\n  functions?: { [name: string]: MemberDefinition };\n  interface?: InterfaceDefinition;\n};\n\nexport type MemberDefinition = {\n  line: number;\n  name: string;\n  label: string; // Like a name, but with () for callables.\n  url: string;\n  id: string; // Local reference on a page\n  group?: string;\n  doc?: TypeDoc;\n  isStatic?: boolean;\n  inherited?: { interface: string; label: string; url: string };\n  overrides?: { interface: string; label: string; url: string };\n  signatures?: Array<CallSignature>;\n  type?: Type;\n};\n\nexport type CallSignature = {\n  line?: number;\n  typeParams?: Array<string>;\n  params?: Array<CallParam>;\n  type?: Type;\n};\n\nexport type CallParam = {\n  name: string;\n  type: Type;\n  varArgs?: boolean;\n  optional?: boolean;\n};\n\nexport type InterfaceDefinition = {\n  doc?: TypeDoc;\n  line?: number;\n  typeParams?: Array<string>;\n  extends?: Array<NamedType>;\n  implements?: Array<NamedType>;\n  members: { [name: string]: MemberDefinition };\n};\n\nexport type MemberGroup = {\n  title?: string;\n  members: { [name: string]: MemberDefinition };\n};\n\nexport type TypeDoc = {\n  synopsis: string;\n  notes: Array<TypeDocNote>;\n  description: string;\n};\n\ntype TypeDocNote = { name: string; body: string };\n\nexport enum TypeKind {\n  Never,\n  Any,\n  Unknown,\n  This,\n\n  Undefined,\n  Boolean,\n  Number,\n  String,\n\n  Object,\n  Array,\n  Function,\n  Param,\n  Type,\n\n  Union,\n  Intersection,\n  Tuple,\n  Indexed,\n  Operator,\n}\n\nexport type Type =\n  | NeverType\n  | AnyType\n  | UnknownType\n  | ThisType\n  | UndefinedType\n  | BooleanType\n  | NumberType\n  | StringType\n  | UnionType\n  | IntersectionType\n  | TupleType\n  | ObjectType\n  | ArrayType\n  | FunctionType\n  | ParamType\n  | NamedType\n  | IndexedType\n  | OperatorType;\n\ntype NeverType = { k: TypeKind.Never };\ntype AnyType = { k: TypeKind.Any };\ntype UnknownType = { k: TypeKind.Unknown };\ntype ThisType = { k: TypeKind.This };\n\ntype UndefinedType = { k: TypeKind.Undefined };\ntype BooleanType = { k: TypeKind.Boolean };\ntype NumberType = { k: TypeKind.Number };\ntype StringType = { k: TypeKind.String };\n\ntype ObjectType = {\n  k: TypeKind.Object;\n  members?: Array<ObjectMember>;\n};\nexport type ObjectMember = {\n  index?: boolean;\n  name?: string;\n  params?: Array<CallParam>;\n  type?: Type;\n};\n\ntype ArrayType = { k: TypeKind.Array; type: Type };\nexport type FunctionType = {\n  k: TypeKind.Function;\n  // Note: does not yet show constraints or defaults\n  typeParams?: Array<string>;\n  params: Array<CallParam>;\n  type: Type;\n};\nexport type ParamType = { k: TypeKind.Param; param: string };\nexport type NamedType = {\n  k: TypeKind.Type;\n  name: string; // May be dotted path or other expression\n  args?: Array<Type>;\n  url?: string;\n};\n\ntype UnionType = { k: TypeKind.Union; types: Array<Type> };\ntype IntersectionType = { k: TypeKind.Intersection; types: Array<Type> };\ntype TupleType = { k: TypeKind.Tuple; types: Array<Type> };\ntype IndexedType = { k: TypeKind.Indexed; type: Type; index: Type };\ntype OperatorType = { k: TypeKind.Operator; operator: string; type: Type };\n","import Link from 'next/link';\nimport type { FocusEvent, JSX, MouseEvent, ReactNode } from 'react';\nimport { Fragment, useCallback, useState } from 'react';\nimport {\n  CallParam,\n  CallSignature,\n  InterfaceDefinition,\n  ObjectMember,\n  Type,\n  TypeKind,\n} from './TypeDefs';\n\nexport function InterfaceDef({\n  name,\n  def,\n}: {\n  name: string;\n  def: InterfaceDefinition;\n}) {\n  return (\n    <span className=\"t interfaceDef\">\n      <span className=\"t keyword\">type </span>\n      <span className=\"t typeName\">{name}</span>\n      {def.typeParams && (\n        <>\n          {'<'}\n          {interpose(\n            ', ',\n            def.typeParams.map((t, i) => (\n              <span key={i} className=\"t typeParam\">\n                {t}\n              </span>\n            ))\n          )}\n          {'>'}\n        </>\n      )}\n      {def.extends && (\n        <>\n          <span className=\"t keyword\"> extends </span>\n          {interpose(\n            ', ',\n            def.extends.map((e, i) => <TypeDef key={i} type={e} />)\n          )}\n        </>\n      )}\n      {def.implements && (\n        <>\n          <span className=\"t keyword\"> implements </span>\n          {interpose(\n            ', ',\n            def.implements.map((e, i) => <TypeDef key={i} type={e} />)\n          )}\n        </>\n      )}\n    </span>\n  );\n}\n\nexport function CallSigDef({\n  name,\n  callSig,\n}: {\n  name: string;\n  callSig?: CallSignature;\n}) {\n  const shouldWrap = callSigLength(name, callSig) > 80;\n\n  return (\n    <span className=\"t callSig\">\n      <span className=\"t fnName\">{name}</span>\n      {callSig?.typeParams && (\n        <>\n          {'<'}\n          {interpose(\n            ', ',\n            callSig.typeParams.map((t, i) => (\n              <span key={i} className=\"t typeParam\">\n                {t}\n              </span>\n            ))\n          )}\n          {'>'}\n        </>\n      )}\n      {'('}\n      {callSig && functionParams(callSig.params, shouldWrap)}\n      {')'}\n      {callSig?.type && (\n        <>\n          {': '}\n          <TypeDef key=\"type\" type={callSig.type} />\n        </>\n      )}\n    </span>\n  );\n}\n\nfunction TypeDef({ type, prefix }: { type: Type; prefix?: number }) {\n  switch (type.k) {\n    case TypeKind.Never:\n      return wrap('primitive', 'never');\n    case TypeKind.Any:\n      return wrap('primitive', 'any');\n    case TypeKind.Unknown:\n      return wrap('primitive', 'unknown');\n    case TypeKind.This:\n      return wrap('primitive', 'this');\n    case TypeKind.Undefined:\n      return wrap('primitive', 'undefined');\n    case TypeKind.Boolean:\n      return wrap('primitive', 'boolean');\n    case TypeKind.Number:\n      return wrap('primitive', 'number');\n    case TypeKind.String:\n      return wrap('primitive', 'string');\n    case TypeKind.Union:\n      return wrap(\n        'union',\n        interpose(\n          ' | ',\n          type.types.map((t, i) => <TypeDef key={i} type={t} />)\n        )\n      );\n    case TypeKind.Intersection:\n      return wrap(\n        'intersection',\n        interpose(\n          ' & ',\n          type.types.map((t, i) => <TypeDef key={i} type={t} />)\n        )\n      );\n    case TypeKind.Tuple:\n      return wrap(\n        'tuple',\n        <>\n          {'['}\n          {interpose(\n            ', ',\n            type.types.map((t, i) => <TypeDef key={i} type={t} />)\n          )}\n          {']'}\n        </>\n      );\n    case TypeKind.Object:\n      if (!type.members) {\n        return wrap('primitive', 'object');\n      }\n      return wrap(\n        'object',\n        <>\n          {'{'}\n          {interpose(\n            ', ',\n            type.members.map((t, i) => <MemberDef key={i} member={t} />)\n          )}\n          {'}'}\n        </>\n      );\n    case TypeKind.Indexed:\n      return wrap(\n        'indexed',\n        <>\n          <TypeDef type={type.type} />,{'['}\n          <TypeDef type={type.index} />\n          {']'}\n        </>\n      );\n    case TypeKind.Operator:\n      return wrap(\n        'operator',\n        <>\n          {wrap('primitive', type.operator)} <TypeDef type={type.type} />\n        </>\n      );\n    case TypeKind.Array:\n      return wrap(\n        'array',\n        <>\n          <TypeDef type={type.type} />\n          {'[]'}\n        </>\n      );\n    case TypeKind.Function: {\n      const shouldWrap = (prefix || 0) + funcLength(type) > 78;\n      return wrap(\n        'function',\n        <>\n          {type.typeParams && (\n            <>\n              {'<'}\n              {interpose(\n                ', ',\n                type.typeParams.map((t, i) => (\n                  <span key={i} className=\"t typeParam\">\n                    {t}\n                  </span>\n                ))\n              )}\n              {'>'}\n            </>\n          )}\n          {'('}\n          {functionParams(type.params, shouldWrap)}\n          {') => '}\n          <TypeDef type={type.type} />\n        </>\n      );\n    }\n    case TypeKind.Param:\n      return wrap('typeParam', type.param);\n    case TypeKind.Type: {\n      return wrap(\n        'type',\n        <>\n          {type.url ? (\n            <Link href={type.url} className=\"t typeName\">\n              {type.name}\n            </Link>\n          ) : (\n            <span className=\"t typeName\">{type.name}</span>\n          )}\n          {type.args && (\n            <>\n              {'<'}\n              {interpose(\n                ', ',\n                type.args.map((a, i) => <TypeDef key={i} type={a} />)\n              )}\n              {'>'}\n            </>\n          )}\n        </>\n      );\n    }\n  }\n  throw new Error('Type with unknown kind ' + JSON.stringify(type));\n}\n\nfunction wrap(className: string, child: ReactNode) {\n  return <Hover className={className}>{child}</Hover>;\n}\n\nfunction Hover({\n  className,\n  children,\n}: {\n  className?: string;\n  children: ReactNode;\n}) {\n  const [isOver, setIsOver] = useState(false);\n  const mouseOver = useCallback(\n    (event: MouseEvent | FocusEvent) => {\n      event.stopPropagation();\n      setIsOver(true);\n    },\n    [setIsOver]\n  );\n  const mouseOut = useCallback(() => {\n    setIsOver(false);\n  }, [setIsOver]);\n  return (\n    <span\n      className={'t ' + (isOver ? 'over ' : '') + className}\n      onMouseOver={mouseOver}\n      onFocus={mouseOver}\n      onMouseOut={mouseOut}\n      onBlur={mouseOut}\n    >\n      {children}\n    </span>\n  );\n}\n\nexport function MemberDef({ member }: { member: ObjectMember }) {\n  return (\n    <span className=\"t member\">\n      {member.index ? (\n        <>[{functionParams(member.params, false)}]</>\n      ) : (\n        <span className=\"t memberName\">{member.name}</span>\n      )}\n      {member.type && (\n        <>\n          : <TypeDef type={member.type} />\n        </>\n      )}\n    </span>\n  );\n}\n\nfunction functionParams(\n  params: Array<CallParam> | undefined,\n  shouldWrap: boolean\n) {\n  const elements = interpose(\n    shouldWrap ? (\n      <>\n        {','}\n        <br />\n      </>\n    ) : (\n      ', '\n    ),\n    (params ?? []).map((t, i) => (\n      <Fragment key={i}>\n        {t.varArgs ? '...' : null}\n        <span className=\"t param\">{t.name}</span>\n        {t.optional ? '?: ' : ': '}\n        <TypeDef\n          prefix={t.name.length + (t.varArgs ? 3 : 0) + (t.optional ? 3 : 2)}\n          type={t.type}\n        />\n      </Fragment>\n    ))\n  );\n\n  return shouldWrap ? (\n    <div className=\"t blockParams\">{elements}</div>\n  ) : (\n    elements\n  );\n}\n\nfunction callSigLength(name: string, sig?: CallSignature): number {\n  return name.length + (sig ? funcLength(sig) : 2);\n}\n\nfunction funcLength(sig: CallSignature): number {\n  return (\n    (sig.typeParams ? 2 + sig.typeParams.join(', ').length : 0) +\n    2 +\n    (sig.params ? paramLength(sig.params) : 0) +\n    (sig.type ? 2 + typeLength(sig.type) : 0)\n  );\n}\n\nfunction paramLength(params: Array<CallParam>): number {\n  return params.reduce(\n    (s, p) =>\n      s +\n      (p.varArgs ? 3 : 0) +\n      p.name.length +\n      (p.optional ? 3 : 2) +\n      typeLength(p.type),\n    (params.length - 1) * 2\n  );\n}\n\nfunction memberLength(members: Array<ObjectMember>): number {\n  return members.reduce(\n    (s, m) =>\n      s +\n      (m.index ? paramLength(m.params || []) + 2 : m.name!.length) +\n      (m.type ? typeLength(m.type) + 2 : 0),\n    (members.length - 1) * 2\n  );\n}\n\nfunction typeLength(type: Type): number {\n  if (!type) {\n    throw new Error('Expected type');\n  }\n  switch (type.k) {\n    case TypeKind.Never:\n      return 5;\n    case TypeKind.Any:\n      return 3;\n    case TypeKind.Unknown:\n      return 7;\n    case TypeKind.This:\n      return 4;\n    case TypeKind.Undefined:\n      return 9;\n    case TypeKind.Boolean:\n      return 7;\n    case TypeKind.Number:\n      return 6;\n    case TypeKind.String:\n      return 6;\n    case TypeKind.Union:\n    case TypeKind.Intersection:\n      return (\n        type.types.reduce((s, t) => s + typeLength(t), 0) +\n        (type.types.length - 1) * 3\n      );\n    case TypeKind.Tuple:\n      return (\n        2 +\n        type.types.reduce((s, t) => s + typeLength(t), 0) +\n        (type.types.length - 1) * 2\n      );\n    case TypeKind.Object:\n      return type.members ? 2 + memberLength(type.members) : 6;\n    case TypeKind.Indexed:\n      return 2 + typeLength(type.type) + typeLength(type.index);\n    case TypeKind.Operator:\n      return 1 + type.operator.length + typeLength(type.type);\n    case TypeKind.Array:\n      return typeLength(type.type) + 2;\n    case TypeKind.Function:\n      return 2 + funcLength(type);\n    case TypeKind.Param:\n      return type.param.length;\n    case TypeKind.Type:\n      return (\n        type.name.length +\n        (!type.args\n          ? 0\n          : type.args.reduce((s, a) => s + typeLength(a), type.args.length * 2))\n      );\n  }\n  throw new Error('Type with unknown kind ' + JSON.stringify(type));\n}\n\nfunction interpose<T extends JSX.Element>(\n  between: ReactNode,\n  array: Array<T>\n): Array<JSX.Element> {\n  const result: Array<JSX.Element> = [];\n  let i = 0;\n  for (const value of array) {\n    result.push(value, <Fragment key={`b:${i++}`}>{between}</Fragment>);\n  }\n  result.pop();\n\n  return result;\n}\n","import Link from 'next/link';\nimport { Fragment } from 'react';\nimport { MarkdownContent } from '../../../MarkdownContent';\nimport { CallSigDef, MemberDef } from './Defs';\nimport type { MemberDefinition } from './TypeDefs';\n\nexport function MemberDoc({ member }: { member: MemberDefinition }) {\n  return (\n    <div className=\"interfaceMember\" id={member.id}>\n      <h4 className=\"memberLabel\">\n        <Link href={member.url}>{member.label}</Link>\n      </h4>\n      <div key=\"detail\" className=\"detail\">\n        {member.doc && (\n          <MarkdownContent\n            className=\"docSynopsis\"\n            contents={member.doc.synopsis}\n          />\n        )}\n        {!member.signatures ? (\n          <code className=\"codeBlock memberSignature\">\n            <MemberDef member={{ name: member.name, type: member.type }} />\n          </code>\n        ) : (\n          <code className=\"codeBlock memberSignature\">\n            {member.signatures.map((callSig, i) => (\n              <Fragment key={i}>\n                <CallSigDef key={i} name={member.name} callSig={callSig} />\n                {'\\n'}\n              </Fragment>\n            ))}\n          </code>\n        )}\n        {member.inherited && (\n          <section>\n            <h4 className=\"infoHeader\">Inherited from</h4>\n            <code>\n              <Link href={member.inherited.url}>\n                {member.inherited.interface}#{member.inherited.label}\n              </Link>\n            </code>\n          </section>\n        )}\n        {member.overrides && (\n          <section>\n            <h4 className=\"infoHeader\">Overrides</h4>\n            <code>\n              <Link href={member.overrides.url}>\n                {member.overrides.interface}#{member.overrides.label}\n              </Link>\n            </code>\n          </section>\n        )}\n        {member.doc?.notes.map((note, i) => (\n          <section key={i}>\n            <h4 className=\"infoHeader\">{note.name}</h4>\n            {note.name === 'alias' ? (\n              <code>\n                <CallSigDef name={note.body} />\n              </code>\n            ) : (\n              <MarkdownContent className=\"discussion\" contents={note.body} />\n            )}\n          </section>\n        ))}\n        {member.doc?.description && (\n          <section>\n            <h4 className=\"infoHeader\">\n              {member.doc.description.slice(0, 5) === '<code'\n                ? 'Example'\n                : 'Discussion'}\n            </h4>\n            <MarkdownContent\n              className=\"discussion\"\n              contents={member.doc.description}\n            />\n          </section>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// export type ParamTypeMap = { [param: string]: Type };\n\n// function getParamTypeMap(\n//   interfaceDef: InterfaceDefinition | undefined,\n//   member: MemberDefinition\n// ): ParamTypeMap | undefined {\n//   if (!member.inherited || !interfaceDef?.typeParamsMap) return;\n//   const defining = member.inherited.split('#')[0] + '>';\n//   const paramTypeMap: ParamTypeMap = {};\n//   // Filter typeParamsMap down to only those relevant to the defining interface.\n//   for (const [path, type] of Object.entries(interfaceDef.typeParamsMap)) {\n//     if (path.startsWith(defining)) {\n//       paramTypeMap[path.slice(defining.length)] = type;\n//     }\n//   }\n//   return paramTypeMap;\n// }\n","'use client';\n\nimport { Fragment, useReducer } from 'react';\n\nimport { DocSearch } from '../../../../DocSearch';\nimport { MarkdownContent } from '../../../../MarkdownContent';\nimport { SidebarLinks } from '../../../../sidebar';\nimport { CallSigDef, InterfaceDef } from '../Defs';\nimport { MemberDoc } from '../MemberDoc';\nimport { SideBarV4 } from '../SidebarV4';\nimport type { MemberDefinition, TypeDefinition } from '../TypeDefs';\nimport { collectMemberGroups } from '../collectMemberGroups';\n\nconst typeDefURL =\n  'https://github.com/immutable-js/immutable-js/blob/main/type-definitions/immutable.d.ts';\nconst issuesURL = 'https://github.com/immutable-js/immutable-js/issues';\n\nfunction Disclaimer() {\n  return (\n    <section className=\"disclaimer\">\n      This documentation is generated from{' '}\n      <a href={typeDefURL} target=\"_blank\" rel=\"noopener\">\n        immutable.d.ts\n      </a>\n      . Pull requests and{' '}\n      <a href={issuesURL} target=\"_blank\" rel=\"noopener\">\n        Issues\n      </a>{' '}\n      welcome.\n    </section>\n  );\n}\n\nfunction toggle(value: boolean) {\n  return !value;\n}\n\nexport function TypeDocumentation({\n  def,\n  sidebarLinks,\n}: {\n  def: TypeDefinition;\n  sidebarLinks: SidebarLinks;\n}) {\n  const [showInherited, toggleShowInherited] = useReducer(toggle, true);\n  const [showInGroups, toggleShowInGroups] = useReducer(toggle, true);\n\n  return (\n    <>\n      <SideBarV4\n        links={sidebarLinks}\n        focus={def}\n        toggleShowInherited={toggleShowInherited}\n        toggleShowInGroups={toggleShowInGroups}\n        showInGroups={showInGroups}\n        showInherited={showInherited}\n      />\n\n      <div key={def.qualifiedName} className=\"docContents\">\n        <DocSearch />\n\n        {!def.interface && !def.functions && def.call ? (\n          <FunctionDoc def={def.call} />\n        ) : (\n          <TypeDoc\n            def={def}\n            showInGroups={showInGroups}\n            showInherited={showInherited}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction FunctionDoc({ def }: { def: MemberDefinition }) {\n  return (\n    <div>\n      <h1>{def.label}</h1>\n      {def.doc && (\n        <MarkdownContent className=\"docSynopsis\" contents={def.doc.synopsis} />\n      )}\n      <code className=\"codeBlock memberSignature\">\n        {def.signatures!.map((callSig, i) => (\n          <Fragment key={i}>\n            <CallSigDef name={def.name} callSig={callSig} />\n            {'\\n'}\n          </Fragment>\n        ))}\n      </code>\n      {def.doc?.notes.map((note, i) => (\n        <section key={i}>\n          <h4 className=\"infoHeader\">{note.name}</h4>\n          {note.name === 'alias' ? <CallSigDef name={note.body} /> : note.body}\n        </section>\n      ))}\n      {def.doc?.description && (\n        <section>\n          <h4 className=\"infoHeader\">\n            {def.doc.description.slice(0, 5) === '<code'\n              ? 'Example'\n              : 'Discussion'}\n          </h4>\n          <MarkdownContent\n            className=\"discussion\"\n            contents={def.doc.description}\n          />\n        </section>\n      )}\n      <Disclaimer />\n    </div>\n  );\n}\n\nfunction TypeDoc({\n  def,\n  showInGroups,\n  showInherited,\n}: {\n  def: TypeDefinition;\n  showInGroups: boolean;\n  showInherited: boolean;\n}) {\n  const memberGroups = collectMemberGroups(\n    def?.interface,\n    showInGroups,\n    showInherited\n  );\n\n  return (\n    <div>\n      <h1>{def.qualifiedName}</h1>\n      {def.doc && (\n        <MarkdownContent className=\"docSynopsis\" contents={def.doc.synopsis} />\n      )}\n\n      {def.interface && (\n        <code className=\"codeBlock memberSignature\">\n          <InterfaceDef name={def.qualifiedName} def={def.interface} />\n        </code>\n      )}\n\n      {def.doc?.notes.map((note, i) => (\n        <section key={i}>\n          <h4 className=\"infoHeader\">{note.name}</h4>\n          {note.name === 'alias' ? <CallSigDef name={note.body} /> : note.body}\n        </section>\n      ))}\n\n      {def.doc?.description && (\n        <section>\n          <h4 className=\"infoHeader\">\n            {def.doc.description.slice(0, 5) === '<code'\n              ? 'Example'\n              : 'Discussion'}\n          </h4>\n          <MarkdownContent\n            className=\"discussion\"\n            contents={def.doc.description}\n          />\n        </section>\n      )}\n\n      {def.call && (\n        <section>\n          <h3 className=\"groupTitle\">Construction</h3>\n          <MemberDoc member={def.call} />\n        </section>\n      )}\n\n      {def.functions && (\n        <section>\n          <h3 className=\"groupTitle\">Static methods</h3>\n          {Object.values(def.functions).map((t) => (\n            <MemberDoc key={t.id} member={t} />\n          ))}\n        </section>\n      )}\n\n      <section>\n        {memberGroups.flatMap(([title, members]) =>\n          members.length === 0\n            ? null\n            : [\n                <h3 key={title || 'Members'} className=\"groupTitle\">\n                  {title || 'Members'}\n                </h3>,\n                members.map((member) => (\n                  <MemberDoc key={member.id} member={member} />\n                )),\n              ]\n        )}\n      </section>\n\n      <Disclaimer />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}